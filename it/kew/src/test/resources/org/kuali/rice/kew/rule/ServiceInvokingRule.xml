<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2007-2009 The Kuali Foundation
 
 Licensed under the Educational Community License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at
 
 http://www.opensource.org/licenses/ecl2.php
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    <documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        <documentType>
            <name>ServiceInvocationRuleTest</name>
            <label>ServiceInvocationRuleTest doc label</label>
            <docHandler>has to be defined</docHandler>
            <defaultExceptionGroupName namespace="KR-WKFLW">WorkflowAdmin</defaultExceptionGroupName>
            <routePaths>
                <routePath>
                    <start name="initial" nextNode="node1" />
                    <requests name="node1"/>
                </routePath>
            </routePaths>
            <routeNodes>
                <start name="initial"/>
                <requests name="node1">
                    <ruleSelector>Named</ruleSelector>
                    <ruleName>ServiceInvocationRule</ruleName>
                </requests>
            </routeNodes>
        </documentType>
    </documentTypes>

    <rules xmlns="ns:workflow/Rule" xsi:schemaLocation="ns:workflow/Rule resource:Rule">
        <rule>
            <name>ServiceInvocationRule</name>
            <documentType>ServiceInvocationRuleTest</documentType>
            <description>ServiceInvocationRule mandatory description</description>
            <expression type="BSF:groovy">
                import org.kuali.rice.kew.rule.RuleExpressionResult
                import org.kuali.rice.core.api.resourceloader.*
                import org.kuali.rice.kew.test.FakeService
                import javax.xml.namespace.QName

                println 'ServiceInvocationRule invoking FakeService...'

                FakeService fakeService = (FakeService) GlobalResourceLoader.getResourceLoader().getService(new QName("fake", "fakeService-remote"))

                println 'Found FakeService implementation on bus: ' + fakeService

                print 'Invoking fake service...'

                result = fakeService.method2("abcdef")

                println 'result: ' + result

                return new RuleExpressionResult(rule, true)
            </expression>
        </rule>
    </rules>
</data>
