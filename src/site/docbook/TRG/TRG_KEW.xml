<?xml version='1.0' encoding='UTF-8'?> 
<chapter xml:id="TRG_KEW" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0">
    <title>KEW</title>
    <sect1>
        <title>What is Kuali Enterprise Workflow?</title>
        <sect2>
            <title>What is workflow, in general?</title>
            <para><emphasis role="italic">Workflow</emphasis> is a very general term and means
                different things in different contexts. For example, it may mean the sequence of
                approvals needed for a Leave Request or it may refer to a complex scientific
                procedure. </para>
            <para>In our context of enterprise applications within a higher education institution,
                we're usually talking about business process management when we discuss workflow.
                Usually, this revolves around business rules, authorizations, and routing for
                approval.</para>
            <para>A simple example is a leave request system. It needs some workflow to get the
                necessary people (supervisor, etc.) to approve it. This is one example of the
                routing and approval side of a workflow.</para>
            <para>You may also have business rules in workflow that dictate that some people get
                automatic approval for leave requests. This is a business rule detail that workflow
                executes by automatically routing these types of requests past the approval
                steps.</para>
        </sect2>
        <sect2>
            <title>What is Kuali Enterprise Workflow, in particular?</title>
            <para>The Kuali Enterprise Workflow (KEW) product revolves around routing and approval
                of documents. It is a stand-alone <emphasis role="italic">workflow engine</emphasis>
                upon which you can integrate other enterprise applications to do routing and
                approvals.</para>
            <para>In addition, KEW contains an <emphasis role="bold">eDocLite</emphasis> system.
                This is a mechanism to create simple data-entry forms directly in KEW. You can also
                create routing rules around eDocLite forms. eDocLite forms are the rough equivalent
                of the basic, one- or two-page forms that are commonly used to process business and
                get signature approvals. </para>
            <para>The benefit of eDocLite in KEW is that it does <emphasis role="italic"
                    >not</emphasis> require a separate application. You can use eDocLite in KEW
                simply by setting up the forms that your institution or department needs.</para>
            <para>Overall, KEW is based on documents. In KEW, each document has a collection of
                transactions or <emphasis role="italic">things to be done</emphasis>. Each
                transaction is approved or denied individually in KEW.</para>
            <para>For example, John Doe may use a <emphasis role="italic">Leave Request</emphasis>
                document in KEW to ask for a week off in June. The KEW Leave Request document
                contains enough information for his supervisor to make a decision about John’s
                leave. (The document may use data keys to retrieve external information, such as
                John’s past Leave Requests and available hours.) Once John submits his Leave
                Request, KEW routes it to John's supervisor for approval. Depending on how John’s
                department has configured KEW for routing Leave Requests, after John’s supervisor
                approves or denies his request, KEW may route it to more people for further action
                to be taken.</para>
            <para>Once John’s Leave Request document is processed, it triggers a <emphasis
                    role="bold">PostProcessor</emphasis>, which can peform any desired additional
                processing. This is most commonly used to “finalize” the business transaction once
                all approvers have signed off on it. In this particular example, it might call
                another service that would update records in the Leave Request application’s
                database, indicating that the individual has successfully scheduled leave during
                that time period. </para>
            <para>In addition, the KEW <emphasis role="bold">PostProcessor</emphasis> contains hooks
                for all the stages that a document goes through. For example, an external
                application may use a KEW workflow for routing and approval of documents, and that
                application may take action at each change in state of a routed document.</para>
        </sect2>
        <sect2>
            <title>What problems or functions does KEW solve? </title>
            <para>The primary benefit of KEW workflow is the correct routing for approval of
                documents. It enforces your business-specific rules about who needs to approve what
                documents, in which scenarios.</para>
            <para><emphasis role="bold">Simple Workflow Example</emphasis></para>
            <para>Leave Request: Each person has one other person (possibly more) who needs to
                approve his or her leave requests. In this context, KEW is the system that
                manages both the approval structure and the leave requests themselves (the
                actual approvals).</para>
            <para><emphasis role="bold">More Complex Workflow Example</emphasis></para>
            <para>Purchasing Desktop Computers: You may need several business rules in KEW for
                this, such as a rule to enforce:<orderedlist>
                    <listitem>
                        <para>A strategic alliance requires that you buy from one vendor unless
                            there is a justification to not do so </para>
                    </listitem>
                    <listitem>
                        <para>General purchasing approval by the Purchasing Department is
                            required when the cost of the purchase exceeds a certain limit
                        </para>
                    </listitem>
                    <listitem>
                        <para>Approval by the account owners who fund the purchase is required
                        </para>
                    </listitem>
                </orderedlist></para>
            <para>In this example, KEW requires an approval if:<itemizedlist>
                    <listitem>
                        <para>The strategic alliance is not used </para>
                    </listitem>
                    <listitem>
                        <para>The cost limit for Purchasing Department approval is exceeded
                        </para>
                    </listitem>
            </itemizedlist></para>
            <para>The workflow also requires an approval by the signer (or delegate) for each
                spending account that you use for the purchase.</para>
            <para>In KEW, <emphasis role="bold">Approval Types</emphasis> are set up such as account
                approver, supervisor, or organizational/department hierarchy approver. An Approval
                Type contains the applicable routing and approval rules. Once you create an approval
                type, those routing and approval rules are available for other workflow clients and
                scenarios. This creates a <emphasis role="italic">tipping point</emphasis>
                situation, in which the more applications and business processes you set up through
                workflow, the easier it gets to do new ones.</para>
            <para>In addition, KEW can help you with distributed management of approval structures.
                Each group at your institution (each college, unit, division, etc.) can create their
                own approval and workflow structure for their group, and you can centrally manage
                the workflow above those groups. This allows groups to manage their own internal
                controls and structures, while still being subject to higher-level institutional
                controls.</para>
        </sect2>
        <sect2>
            <title>What problems does KEW NOT solve?</title>
            <para>KEW is not a general-purpose application builder. For complex applications, you
                need to develop applications separately and then integrate them with KEW. For simple
                forms or documents that need approval, you can use <emphasis role="bold"
                    >eDocLite</emphasis>, but this only works in simple cases, analogous to a one-
                or two-page paper form that requires signatures. It is important to note, however,
                that Kuali Rice does include a framework called the Kuali Nervous System (KNS) that
                can be used to facilitate the development of more complex applications and includes
                built-in integration with KEW.</para>
            <para>KEW is not a general-purpose business rules engine. For example, it does not know
                that a continuation account must be specified when an account is closed. Those types
                of rules are the responsibility of the application itself to manage. However, this
                is not a clear-cut line, as KEW does manage business rules that directly affect
                routing and approval.</para>
            <para>KEW is not an Organization Hierarchy manager. For example, it will not
                automatically manage your organizational hierarchies and internal structures.
                However, integration with these hierarchies and structures can be accomplished using
                KEW, and leveraging such hierarchies for routing and approval is a very common need
                for many applications.</para>
        </sect2>
        <sect2>
            <title>With which applications can KEW integrate?</title>
            <para>Nearly anything, in theory. In the current version of KEW, any application can
                access KEW if it can:<itemizedlist>
                    <listitem>
                        <para>Do Java method calls, or </para>
                    </listitem>
                    <listitem>
                        <para>Do remote method invocation, or </para>
                    </listitem>
                    <listitem>
                        <para>Do web-services calls, or </para>
                    </listitem>
                    <listitem>
                        <para>Communicate with the Kuali Service Bus (KSB) </para>
                    </listitem>
                </itemizedlist></para>
            <para>(The recommended cross-platform integration method is over web services.)</para>
        </sect2>
        <sect2>
            <title> Can I use KEW without building an entire application?</title>
            <para>Yes, absolutely! </para>
            <para>KEW is an incredibly powerful platform for routing and approval for enterprise
                (i.e., large) applications. However, it also includes <emphasis role="bold"
                    >eDocLite</emphasis>, which makes it easy to develop simple business-process
                forms and run them through KEW. In this situation, in its most simple form, you can
                do all of your work within KEW, and most of that work is in developing your form
                configurations. If needed, the eDocLite process can also hook into a post-processor
                to take an action once a document's approvals are complete.</para>
        </sect2>
    </sect1>
    <sect1>
        <title>Steps to Building a KEW Application</title>
        <sect2>
            <title>Preface</title>
            <para>In its simplest form, KEW is merely a set of services that can be used to submit
                documents to a workflow engine and then interact with those documents as the
                progress through the routing process. Therefore, there are many different ways to
                build an application that uses KEW. Kuali Rice itself has a few built-in solutions
                (eDocLite and KNS) that make it easier to build applications that use KEW.
                Alternatively, an application can be built from scratch or retrofitted to use
                KEW.</para>
            <para>In this section, we will look at some common approaches to designing and building
                an application which leverages KEW. However, it is by no means exhaustive and is
                simply meant to get you started and give you ideas as you embark upon development of
                your own applications that use Kuali Enterprise Workflow.</para>
        </sect2>
        <sect2>
            <title>Initial Steps - Determine the Routing Rules</title>
            <para>Determine to whom you want to route the document and when it should be routed. For
                example, in the <emphasis role="bold">Travel Request Sample Workflow Client
                    Application</emphasis>, the steps in the routing process are:<orderedlist>
                    <listitem>
                        <para>Someone submits a travel request for a traveler </para>
                    </listitem>
                    <listitem>
                        <para>Traveler receives an <emphasis role="italic">Approve Action
                                Item</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>Traveler's supervisor receives <emphasis role="italic">Approve Action
                                Item</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>Traveler's dean/director receives <emphasis role="italic">Acknowledge
                                Action Item</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>Fiscal Officer for account(s) receives <emphasis role="italic">Approve
                                Action Item</emphasis>
                        </para>
                    </listitem>
                </orderedlist></para>
        </sect2>
        <sect2>
            <title>Configure the Process Definition</title>
            <para>In KEW, process definitions are attached to <emphasis role="bold">Document
                    Types</emphasis>. The Document Type allows for configuration of various pieces
                of the business process in addition to the process definition.</para>
            <para>The Document Type is defined in XML format. KEW can ingest files containing this
                Document Type configuration to set up the specified workflows and then executes the
                workflows based on that configuration.</para>
            <para>One example of routing configuration is the Travel Request application. The
                Document Type configuration is defined in the following four XML files:</para>
            <para><emphasis role="bold">TravelRoutingConfiguration.xml </emphasis>- Defines the
                    <emphasis role="bold">travelDocument</emphasis> Document Type, including
                    <emphasis role="italic">PostProcessor</emphasis>, <emphasis role="italic"
                    >docHandler</emphasis>, and <emphasis role="italic"
                >routeNodes</emphasis>:</para>
            <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        &lt;documentType>
            &lt;name>TravelRequest&lt;/name>
            &lt;description>Create a New Travel Request&lt;/description>
            &lt;label>Travel Request&lt;/label>
            &lt;postProcessorName>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor&lt;/postProcessorName>
            &lt;superUserGroupName namespace="TVL">SuperUserGroup&lt;/superUserGroupName>
            &lt;blanketApproveGroupName namespace="TVL">BlanketApproveGroup&lt;/blanketApproveGroupName>
            &lt;defaultExceptionGroupName namespace="TVL">ExceptionGroup&lt;/defaultExceptionGroupName>

            &lt;docHandler>${application.url}/travelDocument2.do?methodToCall=docHandler&lt;/docHandler>
            &lt;routePaths>
                &lt;routePath>
                    &lt;start name="Initiated" nextNode="DestinationApproval" />
                    &lt;requests name="DestinationApproval" nextNode="TravelerApproval" />
                    &lt;requests name="TravelerApproval" nextNode="SupervisorApproval" />
                    &lt;requests name="SupervisorApproval" nextNode="AccountApproval" />
                    &lt;requests name="AccountApproval" />
                &lt;/routePath>
            &lt;/routePaths>
            &lt;routeNodes>
                &lt;start name="Initiated">
                    &lt;activationType>P&lt;/activationType>
                &lt;/start>
                &lt;requests name="DestinationApproval">
                    &lt;ruleTemplate>TravelRequest-DestinationRouting&lt;/ruleTemplate>
                &lt;/requests>
                &lt;requests name="TravelerApproval">
                    &lt;ruleTemplate>TravelRequest-TravelerRouting&lt;/ruleTemplate>
                &lt;/requests>
                &lt;requests name="SupervisorApproval">
                    &lt;ruleTemplate>TravelRequest-SupervisorRouting&lt;/ruleTemplate>
                &lt;/requests>
                &lt;requests name="AccountApproval">
                    &lt;ruleTemplate>TravelRequest-AccountRouting&lt;/ruleTemplate>
                &lt;/requests>
            &lt;/routeNodes>
        &lt;/documentType>
    &lt;/documentTypes>
&lt;/data></programlisting>
            <para><emphasis role="bold">TravelRuleAttributes.xml</emphasis> – Defines the attributes
                used by the Workflow Engine to determine to whom to route to next:</para>
            <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleAttributes xmlns="ns:workflow/RuleAttribute" xsi:schemaLocation="ns:workflow/RuleAttribute resource:RuleAttribute">
        &lt;ruleAttribute>
            &lt;name>EmployeeAttribute&lt;/name>
            &lt;className>edu.sampleu.travel.workflow.EmployeeAttribute&lt;/className>
            &lt;label>Employee Routing&lt;/label>
            &lt;description>Employee Routing&lt;/description>
            &lt;serviceNamespace>TRAVEL&lt;/serviceNamespace>
            &lt;type>RuleAttribute&lt;/type>
        &lt;/ruleAttribute>

        &lt;ruleAttribute>
            &lt;name>AccountAttribute&lt;/name>
            &lt;className>edu.sampleu.travel.workflow.AccountAttribute&lt;/className>
            &lt;label>Account Routing&lt;/label>
            &lt;description>Account Routing&lt;/description>
            &lt;serviceNamespace>TRAVEL&lt;/serviceNamespace>
            &lt;type>RuleAttribute&lt;/type>
        &lt;/ruleAttribute>
    &lt;/ruleAttributes>
&lt;/data>          </programlisting>
            <para><emphasis role="bold">TravelRuleTemplates.xml</emphasis> - Defines the <emphasis
                    role="bold">RuleTemplates</emphasis> that represent each routeNode listed in the
                Document Type configuration:</para>
            <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleTemplates xmlns="ns:workflow/RuleTemplate" xsi:schemaLocation="ns:workflow/RuleTemplate resource:RuleTemplate">
        &lt;ruleTemplate allowOverwrite="true">
            &lt;name>TravelRequest-DestinationRouting&lt;/name>
            &lt;description>Destination Routing&lt;/description>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>DestinationAttribute&lt;/name>
                &lt;/attribute>
            &lt;/attributes>
        &lt;/ruleTemplate>
        &lt;ruleTemplate allowOverwrite="true">
            &lt;name>TravelRequest-TravelerRouting&lt;/name>
            &lt;description>Traveler Routing&lt;/description>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>EmployeeAttribute&lt;/name>
                &lt;/attribute>
            &lt;/attributes>
        &lt;/ruleTemplate>
        &lt;ruleTemplate allowOverwrite="true">
            &lt;name>TravelRequest-SupervisorRouting&lt;/name>
            &lt;description>Supervisor Routing&lt;/description>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>EmployeeAttribute&lt;/name>
                &lt;/attribute>
            &lt;/attributes>
        &lt;/ruleTemplate>
        &lt;ruleTemplate allowOverwrite="true">
            &lt;name>TravelRequest-AccountRouting&lt;/name>
            &lt;description>Travel Account Routing&lt;/description>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>AccountAttribute&lt;/name>
                &lt;/attribute>
            &lt;/attributes>
        &lt;/ruleTemplate>
    &lt;/ruleTemplates>
    &lt;/data></programlisting>
            <para><emphasis role="bold">TravelRules.xml</emphasis> - Defines the rules (a rule is a
                combination of <emphasis role="italic">Document Type</emphasis>, <emphasis
                    role="italic">Rule Template</emphasis> and <emphasis role="italic"
                    >Responsibilities</emphasis>) that the workflow engine uses to determine to whom
                to route to next:</para>
            <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;rules xmlns="ns:workflow/Rule" xsi:schemaLocation="ns:workflow/Rule resource:Rule">
        &lt;rule>
            &lt;name>TravelRequest-DestinationLasVegas&lt;/name>
            &lt;documentType>TravelRequest&lt;/documentType>
            &lt;ruleTemplate>TravelRequest-DestinationRouting&lt;/ruleTemplate>
            &lt;description>Destination Rule&lt;/description>
            &lt;ruleExtensions>
                &lt;ruleExtension>
                    &lt;attribute>DestinationAttribute&lt;/attribute>
                    &lt;ruleTemplate>TravelRequest-DestinationRouting&lt;/ruleTemplate>
                    &lt;ruleExtensionValues>
                        &lt;ruleExtensionValue>
                            &lt;key>destination&lt;/key>
                            &lt;value>las vegas&lt;/value>
                        &lt;/ruleExtensionValue>
                    &lt;/ruleExtensionValues>
                &lt;/ruleExtension>
            &lt;/ruleExtensions>
            &lt;responsibilities>
                &lt;responsibility>
                    &lt;principalName>user4&lt;/principalName>
                    &lt;actionRequested>A&lt;/actionRequested>
                &lt;/responsibility>
            &lt;/responsibilities>
        &lt;/rule>
        &lt;rule>
            &lt;name>TravelRequest-EmployeeRole&lt;/name>
            &lt;documentType>TravelRequest&lt;/documentType>
            &lt;ruleTemplate>TravelRequest-TravelerRouting&lt;/ruleTemplate>
            &lt;description>Traveler Routing&lt;/description>
            &lt;responsibilities>
                &lt;responsibility>
                    &lt;role>edu.sampleu.travel.workflow.EmployeeAttribute!employee&lt;/role>
                    &lt;actionRequested>A&lt;/actionRequested>
                &lt;/responsibility>
            &lt;/responsibilities>
        &lt;/rule>
        &lt;rule>
            &lt;name>TravelRequest-SupervisorRole&lt;/name>
            &lt;documentType>TravelRequest&lt;/documentType>
            &lt;ruleTemplate>TravelRequest-SupervisorRouting&lt;/ruleTemplate>
            &lt;description>Supervisor Routing&lt;/description>
            &lt;responsibilities>
                &lt;responsibility>
                    &lt;role>edu.sampleu.travel.workflow.EmployeeAttribute!supervisr&lt;/role>
                    &lt;actionRequested>A&lt;/actionRequested>
                &lt;/responsibility>
            &lt;/responsibilities>
         &lt;/rule>
        &lt;rule>
            &lt;name>TravelRequest-DirectorRole&lt;/name>
            &lt;documentType>TravelRequest&lt;/documentType>
            &lt;ruleTemplate>TravelRequest-SupervisorRouting&lt;/ruleTemplate>
            &lt;description>Dean/Director Routing&lt;/description>
            &lt;responsibilities>
                &lt;responsibility>
                    &lt;role>edu.sampleu.travel.workflow.EmployeeAttribute!director&lt;/role>
                    &lt;actionRequested>K&lt;/actionRequested>
                &lt;/responsibility>
            &lt;/responsibilities
        &lt;/rule>
        &lt;rule>
            &lt;name>TravelRequest-FiscalOfficerRole&lt;/name>
            &lt;documentType>TravelRequest&lt;/documentType>
            &lt;ruleTemplate>TravelRequest-AccountRouting&lt;/ruleTemplate>
            &lt;description>Fiscal Officer Routing&lt;/description>
            &lt;responsibilities>
                &lt;responsibility>
                    &lt;role>edu.sampleu.travel.workflow.AccountAttribute!FO&lt;/role>
                &lt;/responsibility>
            &lt;/responsibilities>
        &lt;/rule>
    &lt;/rules>
&lt;/data></programlisting>
        </sect2>
        <sect2>
            <title>Client PlugIn Steps</title>
            <para>Your plugin should contain Java classes that correspond to the attributes defined
                in the XML configuration file. The Travel Request Sample Client contains two
                attribute classes: <emphasis role="italic">EmployeeAttribute</emphasis> and
                    <emphasis role="italic">AccountAttribute</emphasis>. Each of these classes
                implements these two interfaces:</para>
            <programlisting>org.kuali.rice.kew.rule.RoleAttribute
org.kuali.rice.kew.rule.WorkflowAttribute</programlisting>
            <para>Using the <emphasis role="italic">EmployeeAttribute</emphasis> as an example, here
                are the implementations for the <emphasis role="italic">RoleAttribute</emphasis>
                interface:</para>
            <para><emphasis role="bold">getRoleNames()</emphasis> - Returns a list of role names to
                display on the routing rule GUI in the KEW web application:</para>
            <programlisting>private static final Map ROLE_INFO;

static {
    
    ROLE_INFO = new TreeMap();
    ROLE_INFO.put(EMPLOYEE_ROLE_KEY, "Employee");
    ROLE_INFO.put(SUPERVISOR_ROLE_KEY, "Supervisor");
    ROLE_INFO.put(DIRECTOR_ROLE_KEY, "Dean/Director");
}

public List getRoleNames() {
    List roleNames = new ArrayList();
    for (Iterator iterator = roles.keySet().iterator(); iterator.hasNext();) {
        String roleName = (String) iterator.next();
        roleNames.add(new Role(getClass(), roleName, roleName));
    }    
    return roleNames;
}            </programlisting>
            <para><emphasis role="bold">getQualifiedRoleNames()</emphasis> - Returns a list of
                strings that represents the qualified role name for the given roleName and XML
                docContent which is attached to the workflow document:</para>
            <programlisting>/**
     * Returns a String which represent the qualified role name of this role for the given
        * roleName and docContent.
        * @param roleName the role name (without class prefix)
        * @param documentContent the document content
*/

public List&lt;String> getQualifiedRoleNames(String roleName, DocumentContent documentContent) {
    List&lt;String> qualifiedRoleNames = new ArrayList&lt;String>();
    Map&lt;String, List&lt;String>> qualifiedRoles = (Map&lt;String, List&lt;String>>)roles.get(roleName);
    if (qualifiedRoles != null) {
        qualifiedRoleNames.addAll(qualifiedRoles.keySet());
    } else {
        throw new IllegalArgumentException("TestRuleAttribute does not support the given role " + roleName);
    }
    return qualifiedRoleNames;
}</programlisting>
            <para><emphasis role="bold">resolveQualifiedRole()</emphasis> - Returns a list of
                workflow users that are members of the given Qualified Role. (Used to help determine
                to whom to route the document.):</para>
            <programlisting>/**
  * Returns a List of Workflow Users which are members of the given qualified role.
  * @param routeContext the RouteContext
  * @param roleName the roleName (without class prefix)
  * @param qualifiedRole one of the the qualified role names returned from the {@link #getQualifiedRoleNames(String, DocumentContent)} method
  * @return ResolvedQualifiedRole containing recipients, role label (most likely the roleName), and an annotation
*/

public ResolvedQualifiedRole resolveQualifiedRole(RouteContext routeContext, String roleName, String qualifiedRole) {
    ResolvedQualifiedRole resolved = new ResolvedQualifiedRole();
    Map&lt;String, List&lt;String>> qualifiedRoles = (Map&lt;String, List&lt;String>>)roles.get(roleName);

    if (qualifiedRoles != null) {
        List&lt;String> recipients = (List&lt;String>)qualifiedRoles.get(qualifiedRole);
        if (recipients != null) {
            resolved.setQualifiedRoleLabel(qualifiedRole);
            resolved.setRecipients(convertPrincipalIdList(recipients));
        } else {
            throw new IllegalArgumentException("TestRuleAttribute does not support the qualified role " + qualifiedRole);
        }
 
    } else {
        throw new IllegalArgumentException("TestRuleAttribute does not support the given role " + roleName);
    }
    return resolved;
} </programlisting>
            <para>Using the <emphasis role="italic">EmployeeAttribute</emphasis> example, here are
                the implementations for the <emphasis role="italic">WorkflowAttribute</emphasis>
                interface:</para>
            <para><emphasis role="bold">getRoutingDataRows()</emphasis> – Returns a list of
                    <emphasis role="italic">RoutingDataRows</emphasis> that contain the user
                interface level presentation of the <emphasis role="italic">ruleData</emphasis>
                fields. KEW uses the ruleData fields to determine where a given document would be
                routed according to the associated rule:</para>
            <programlisting>public List&lt;Row> getRoutingDataRows() {
    List&lt;Row> rows = new ArrayList&lt;Row>();
    List&lt;Field> fields = new ArrayList&lt;Field>();
    fields.add(new Field("Traveler username", "", Field.TEXT, false, USERID_FORM_FIELDNAME, "", false, false, null, null));
    rows.add(new Row(fields));
    return rows;
}            </programlisting>
            <para><emphasis role="bold">getDocContent()</emphasis> - Returns a string containing
                this Attribute's <emphasis role="italic">routingData</emphasis> values, formatted as
                a series of XML tags:</para>
            <programlisting>public String getDocContent() {
    String docContent = "";

    if (!StringUtils.isBlank(_uuid)) {
        String uuidContent = XmlUtils.encapsulate(UUID_PARAMETER_TAGNAME, _uuid);

        docContent = _attributeParser.wrapAttributeContent(uuidContent);
    }

    return docContent;
}
</programlisting>
            <para><emphasis role="bold">validateRoutingData()</emphasis> - Validates <emphasis
                    role="italic">routingData</emphasis> values in the incoming map and returns a
                list of errors from the routing data. (The user interface calls <emphasis
                    role="bold">validateRoutingData()</emphasis> during rule creation.):</para>
            <programlisting>public List validateRoutingData(Map paramMap) {
    List errors = new ArrayList();

    String principalName = StringUtils.trim((String) paramMap.get(PRINCIPAL_NAME_FORM_FIELDNAME));
    if (isRequired() &amp;&amp; StringUtils.isBlank(principalName)) {
        errors.add(new WorkflowServiceErrorImpl("principalName is required", "accountattribute.principalName.required"));
    }

    if (!StringUtils.isBlank(principalName)) {
        KimPrincipalInfo principal = KIMServiceLocator.getIdentityService().getPrincipalByPrincipalName(principalName);
        if (principal == null) {
            errors.add(new WorkflowServiceErrorImpl("unable to retrieve user for principalName '" + principalName + "'", "accountattribute.principalName.invalid"));
        }
    }
    if ( errors.size() == 0 ) {
        _principalName = principalName;
    }
    return errors;
}</programlisting>
        </sect2>
        <sect2>
            <title>Build PostProcessor and Services</title>
            <para>The PostProcessor class should implement the interface:</para>
            <programlisting>org.kuali.rice.kew.postprocessor.PostProcessorRemote</programlisting>
            <para>You should use this interface for business logic that should execute when the
                document transitions to a new status or when actions are taken on the document. The
                PostProcessor for the Travel Request Client is the class: </para>
            <programlisting>org.kuali.rice.kns.workflow.postprocessor.KualiPostProcessor</programlisting>
            <para>that implements the doRouteStatusChange() method to update the status of the
                travel document in the Travel database. The KualiPostProcessor in this case is the
                standard PostProcessor used on all documents that are built on the KNS
                framework.</para>
        </sect2>
        <sect2>
            <title>Package PlugIn</title>
            <para>Depending on how the application has been developed (i.e. embedded workflow engine
                vs. using the engine as a remote service) it may be necessary to package components
                like the PostProcessor into a plug-in. See the Workflow PlugIn Guide for details on
                how to do this.</para>
        </sect2>
        <sect2>
            <title>Client Web Application Steps</title>
            <sect3>
                <title>Build the Web Application</title>
                <para>Begin to build a Kuali Enterprise Workflow the same as you build any other
                    Java-enabled web application. You build it with all the business logic for the
                    application and, for example, communication to the workflow engine using web
                    services.</para>
                <para>As an example, the Travel Request Client Web Application uses Struts, Spring, and
                    OJB.</para>
            </sect3>
            <sect3>
                <title>Build the Service that Connects to the Workflow Engine</title>
                <para>For the rest of this section, this guide refers to the Java application
                    communicating with the Kuali Enterprise Workflow as the <emphasis role="italic"
                        >Client Application</emphasis>. The Client Application needs a service that
                    will interact with the workflow system. This service will perform actions such
                    as locating a document in the workflow system and routing the document. </para>
                <para>Below are examples from the Travel Request Sample Client. The methods in the
                        <emphasis role="italic">TravelDocumentService</emphasis> class find a
                        <emphasis role="italic">TravelDocument</emphasis> in the workflow system,
                    save and route a <emphasis role="italic">TravelDocument</emphasis>, and validate
                    a <emphasis role="italic">TravelDocument</emphasis>.</para>
                <para><emphasis role="bold">findByDocHeaderId()</emphasis> - Finds a Document in the
                workflow engine:</para>
                <programlisting>public TravelDocument findByDocHeaderId(Long docHeaderId, String principalId) {
    if (docHeaderId == null) {
        throw new IllegalArgumentException("invalid (null) docHeaderId");
    }
    TravelDocument result = travelDocumentDao.findByDocHeaderId(docHeaderId);
    if (result != null) {
        // convert DocAccountJoins into FinancialAccounts
        ArrayList accounts = new ArrayList();
        for (Iterator joins = result.getDocAccountJoins().iterator(); joins.hasNext();) {
            DocumentAccountJoin join = (DocumentAccountJoin) joins.next();

            FinancialAccount account = financialAccountService.findByAccountNumber(join.getAccountNumber());

            accounts.add(account);
        }
        result.setFinancialAccounts(accounts);
        try {
            WorkflowDocument document = new WorkflowDocument( principalId, result.getDocHeaderId());
        } catch (WorkflowException e) {
            LOG.error("caught WorkflowException: ", e);
            throw new RuntimeException(e);
        }
    }
    return result;
}                </programlisting>
                <para>The <emphasis role="bold">TravelDocumentServiceImpl</emphasis> class populates
                    the attribute values on the workflow document (Employee, Account) that will be
                    used for future routing. It does this by calling its <emphasis role="italic"
                        >getEmployeeAttribute</emphasis>() and <emphasis role="italic"
                        >getAccountAttribute</emphasis>() methods and adding the results to the
                    workflow document by calling the <emphasis role="italic"
                        >addAttributeDefinition</emphasis>() method.</para>
                <programlisting>private WorkflowAttributeDefinitionVO getEmployeeAttribute(TravelDocument travelDocument) {
    WorkflowAttributeDefinitionDTO attrDef = new WorkflowAttributeDefinitionDTO("edu.sampleu.travel.workflow.EmployeeAttribute");
    String principalName = travelDocument.getTravelerUsername();
    attrDef.addConstructorParameter(principalName);
    return attrDef;
}



private List getAccountAttributes(TravelDocument travelDocument) {
    List accounts = travelDocument.getFinancialAccounts();
    List accountAttributes = new ArrayList();
    for (Iterator accountIterator = accounts.iterator(); accountIterator.hasNext();) {
        WorkflowAttributeDefinitionDTO attrDef = new WorkflowAttributeDefinitionDTO("edu.sampleu.travel.workflow.AccountAttribute");
        FinancialAccount account = (FinancialAccount)accountIterator.next();
        attrDef.addConstructorParameter(account.getAccountNumber());
        accountAttributes.add(attrDef);
    }
    return accountAttributes;
}
</programlisting>
            </sect3>
            <sect3>
                <title>Build the Action Class with Workflow Lifecycle Methods</title>
                <para>In the Travel Request Sample Client, the <emphasis role="bold"
                        >WorkflowDocHandlerAction</emphasis> struts action class calls the workflow
                    lifecycle methods (approve, acknowledge, etc.) on the workflow document.</para>
                <para><emphasis role="bold">WorkflowDocHandlerAction</emphasis> - Take approve
                    action. (Each workflow action - acknowledge, complete, etc. - is like
                    this):</para>
                <programlisting>public ActionForward approve(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) throws Exception {
    LOG.info("entering approve() method ...");
    DocHandlerForm docHandlerForm = (DocHandlerForm) form;
    WorkflowDocument document = docHandlerForm.getWorkflowDocument()
 document.approve(docHandlerForm.getAnnotation());
    saveDocumentActionMessage("general.routing.approved", request);
    LOG.info("forwarding to actionTaken from approve()");
    return mapping.findForward("actionTaken");

}
</programlisting>
                <para>Set up the <emphasis role="bold">WorkflowDocument</emphasis> in the <emphasis
                        role="bold">initializeBaseFormState()</emphasis> method of the <emphasis
                        role="bold">DispatchActionBase</emphasis> from which the Struts action
                    classes inherit. Obtain the workflow document with this line of code:</para>
                <programlisting>String principalId = getUserSession(request).getPrincipalId();
WorkflowDocument document = new WorkflowDocument(principalId, docId);
</programlisting>
            </sect3>
            <sect3>
                <title>Package the Web Application</title>
                <para>Package the Client Application (client web application) for deployment the way
                    you normally package web applications. The Travel Request Sample Web Application
                    does this with an Ant build script. The <emphasis role="italic">dist</emphasis>
                    step of the<emphasis role="italic"> build.xml</emphasis> script builds the
                        <emphasis role="italic">SampleWorkflowClient.war</emphasis> file.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Final Steps</title>
            <sect3>
                <title>Deploy the PlugIn</title>
                <para>Deploy the plugin to your workflow installation. Copy the plugin directory
                    structure to your application plugins directory. Please see the Workflow Plugin
                    Guide for more information.</para>
            </sect3>
            <sect3>
                <title>Deploy the Client Web Application</title>
                <para>Deploy the Client Web Application to your Application server the way you
                    normally deploy web applications.</para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>KEW Configuration</title>
        <sect2>
            <title>KEW Integration Options</title>
            <para>The following integration options are available to applications integrating with KEW:<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Embedded</emphasis> - The KEW engine is embedded
                            into a Java application. The Standalone Rice Server is required. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Bundled</emphasis> - Same as Embedded mode except
                            that the entire KEW web application is also embedded into the Java
                            application. The Standalone Rice Server is not required. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Remote Java Client</emphasis> – A Java client is
                            used which relies on the service bus to communicate with a Standalone Rice
                            Server’s KEW services. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Thin Java Client</emphasis> - A thin Java client is
                            used which communicates with a Standalone Rice Server over remote service
                            calls. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Web Services</emphasis> - Interacts directly with
                            web services on a Standalone Rice Server.</para> 
                    </listitem>
            </itemizedlist></para>
            <para><table frame="none">
                <title>Advantages/Disadvantages of KEW Integration Options</title>
                <tgroup cols="3">
                    <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                    <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                    <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                    <thead>
                        <row>
                            <entry>Integration Option</entry>
                            <entry>Advantages</entry>
                            <entry>Disadvantages</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>Embedded</entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Integration of database transactions between client
                                                application and embedded KEW (via JTA) </para>
                                        </listitem>
                                        <listitem>
                                            <para>Performance - Embedded client talks directly to
                                                database </para>
                                        </listitem>
                                        <listitem>
                                            <para>No need for application plug-ins on the server </para>
                                        </listitem>
                                        <listitem>
                                            <para>Great for Enterprise deployment, there is still a
                                                single shared Standalone Rice web application but
                                                scalability is increased because of multiple Workflow
                                                Engines </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Can only be used by Java clients </para>
                                        </listitem>
                                        <listitem>
                                            <para>More library dependencies than the Thin Client model
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>Requires client application to establish connections
                                                to Kuali Rice database </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                        </row>
                        <row>
                            <entry>Bundled</entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>All the advantages of Embedded Mode </para>
                                        </listitem>
                                        <listitem>
                                            <para> No need to deploy a standalone Rice server </para>
                                        </listitem>
                                        <listitem>
                                            <para>Ideal for development or "quickstart" applications
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>Application can be bundled with Rice for ease of
                                                development/distribution </para>
                                        </listitem>
                                        <listitem>
                                            <para>Can switch to Embedded Mode for deployment in an
                                                Enterprise environment </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Not desirable for Enterprise deployment where more
                                                than one application is integrated with Rice and KEW
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>More library dependencies than the Thin Client model
                                                and Embedded Mode (additional web libraries) </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                        </row>
                        <row>
                            <entry>Remote Java Client</entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Relatively simple configuration </para>
                                        </listitem>
                                        <listitem>
                                            <para>Client can access more external KEW services from the
                                                Standalone Rice Server than the Thin Java Client, and
                                                yet the client does not need to have an embedded KEW
                                                engine </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Requires client application to be KSB-enabled, unlike
                                                the Thin Java Client</para>
                                        </listitem>
                                        <listitem>
                                            <para>Cannot be used by KNS-enabled client applications
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                        </row>
                        <row>
                            <entry>Thin Java Client</entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Relatively simple configuration </para>
                                        </listitem>
                                        <listitem>
                                            <para>Fewer Library Dependencies </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>No transactional integration between client and server
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>Plug-ins must be deployed to the server if custom
                                                routing components are needed </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                        </row>
                        <row>
                            <entry>Web Services</entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>Any language which supports web services can be used
                                            </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                            <entry>
                                    <itemizedlist>
                                        <listitem>
                                            <para>No transactional integration between client and server
                                            </para>
                                        </listitem>
                                        <listitem>
                                            <para>Plug-ins must be deployed to the server if custom
                                                routing components are needed </para>
                                        </listitem>
                                        <listitem>
                                            <para> Web Services can be slower than other integration
                                                options </para>
                                        </listitem>
                                    </itemizedlist>
                                </entry>
                        </row>
                    </tbody>
                </tgroup>
            </table></para>                
            <sect3>
                <title>Standalone Server</title>
                <para>To effectively use any of the KEW integration modes besides bundled, a
                    Standalone Rice Server will need to be deployed.</para>
            </sect3>
            <sect3>
                <title>Embedded Deployment Diagram</title>
                <para>Here is a diagram illustrating what a sample embedded deployment might look
                    look.</para>
                <para><figure>
                    <title>Sample KEW embedded deployment</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/kew_embedded_deployment.png"/>
                        </imageobject>
                    </mediaobject>
                    </figure>
                </para>
            </sect3>
        </sect2>    
        <sect2>
            <title>Bundling the KEW Application</title>
            <sect3>
                <title>web.xml</title>
                <para><emphasis role="bold">Bundled</emphasis> mode is the same as <emphasis
                        role="italic">embedded</emphasis> mode except that the client application
                    embeds the entire Kuali Rice system within it (including the web application).
                    The embedding of the web application portion is accomplished by utilizing Struts
                    Modules. </para>
                <para>Configuration is the same as <emphasis role="italic">embedded</emphasis> mode,
                    with the exception of loading the web application portions in the <emphasis
                        role="bold">web.xml</emphasis>:</para>
                <programlisting>&lt;filter>
    &lt;filter-name>UserLoginFilter&lt;/filter-name>
    &lt;filter-class>org.kuali.rice.kew.web.UserLoginFilter&lt;/filter-class>

&lt;/filter>


&lt;filter-mapping>
    &lt;filter-name>UserLoginFilter&lt;/filter-name>
    &lt;servlet-name>action&lt;/servlet-name>
&lt;/filter-mapping>



&lt;servlet>
    &lt;servlet-name>action&lt;/servlet-name>
    &lt;servlet-class>org.apache.struts.action.ActionServlet&lt;/servlet-class>
    .. other struts configuration if applicable
    &lt;init-param>
        &lt;param-name>config/en&lt;/param-name>
        &lt;param-value>/en/WEB-INF/struts-config.xml&lt;/param-value>
    &lt;/init-param>
    &lt;load-on-startup>0&lt;/load-on-startup>
&lt;/servlet>


&lt;servlet>
    &lt;servlet-name>remoting&lt;/servlet-name>
    &lt;servlet-class>org.kuali.rice.ksb.messaging.servlet.KSBDispatcherServlet&lt;/servlet-class>
    &lt;load-on-startup>1&lt;/load-on-startup>
&lt;/servlet>



&lt;servlet>
    &lt;servlet-name>export&lt;/servlet-name>
    &lt;servlet-class>org.kuali.rice.kew.export.web.ExportServlet&lt;/servlet-class>
&lt;/servlet>


&lt;servlet>
    &lt;servlet-name>attachment&lt;/servlet-name>
    &lt;servlet-class>org.kuali.rice.kew.notes.web.AttachmentServlet&lt;/servlet-class>
&lt;/servlet>



&lt;servlet>
    &lt;servlet-name>edoclite&lt;/servlet-name>
    &lt;servlet-class>org.kuali.rice.kew.edl.EDLServlet&lt;/servlet-class>
&lt;/servlet>



&lt;servlet-mapping>
    &lt;servlet-name>remoting&lt;/servlet-name>
    &lt;url-pattern>/remoting/*&lt;/url-pattern>
&lt;/servlet-mapping>


&lt;servlet-mapping>
    &lt;servlet-name>action&lt;/servlet-name>
    &lt;url-pattern>*.do&lt;/url-pattern>
&lt;/servlet-mapping>

&lt;servlet-mapping>


    &lt;servlet-name>export&lt;/servlet-name>
    &lt;url-pattern>/export/*&lt;/url-pattern>
&lt;/servlet-mapping>


&lt;servlet-mapping>
  
    &lt;servlet-name>attachment&lt;/servlet-name>
    &lt;url-pattern>/en/attachment/*&lt;/url-pattern>
&lt;/servlet-mapping>


&lt;servlet-mapping>
    &lt;servlet-name>edoclite&lt;/servlet-name>
    &lt;url-pattern>/en/EDocLite&lt;/url-pattern>
&lt;/servlet-mapping>
</programlisting>
                <para><emphasis role="bold">org.kuali.rice.kew.web.UserLoginFilter</emphasis> – This
                    filter is used to assist the KEW bundled web application in determining who the
                    authenticated user is. Specifically, the login filter invokes the KIM identity
                    management service to determine the identity of the authenticated user. </para>
                <para>Typically, a previously executed filter will challenge the user on entry to a
                    Rice web page for their authentication credentials using CAS or some other form
                    of single sign on (SSO) authentication system.</para>
                <para>For development and testing purposes, Rice provides a simple filter
                    implementation that will present a simple sign on screen. This screen displays
                    only a single login entry field and submit button. The user can enter their
                    username (no password) and press the submit button, and the system authenticates
                    the user for entry into the system.</para>
                <para>This can be configured as follows in the <emphasis role="bold"
                        >web.xml</emphasis>: </para>
                <programlisting>&lt;filter>
    &lt;filter-name>LoginFilter&lt;/filter-name>
    &lt;filter-class>org.kuali.rice.kew.web.UserLoginFilter&lt;/filter-class>

&lt;/filter>



&lt;filter-mapping>
    &lt;filter-name>LoginFilter&lt;/filter-name>
    &lt;servlet-name>action&lt;/servlet-name>
&lt;/filter-mapping>
</programlisting>
                <para>and in the <emphasis role="bold">rice-config.xml</emphasis>:</para>
                <programlisting>&lt;param name="filter.login.class">org.kuali.rice.kew.web.DummyLoginFilter&lt;/param>
&lt;param name="filtermapping.login.1">/*&lt;/param>
</programlisting>
                <para><emphasis role="bold">org.apache.struts.action.ActionServlet </emphasis>- The
                    Struts servlet which loads the KEW Struts module. The module name should be
                    'en'. Struts only allows a single Action Servlet so if you are using Struts in
                    your application, all of your Struts modules will need to be configured using
                    the init-param elements in this servlet definition.</para>
                <para><emphasis role="bold"
                        >org.kuali.rice.ksb.messaging.servlet.KSBDispatcherServlet</emphasis> - A
                    servlet which dispatches http requests for the Kuali Service Bus (see KSB
                    documentation for more details). The servlet mapping here should correspond to
                    the <emphasis role="bold">serviceServletUrl</emphasis> configuration parameter
                    for the KSBConfigurer.</para>
                <para><emphasis role="bold">org.kuali.rice.kew.export.web.ExportServlet</emphasis> -
                    serves exports of lookup results as XML files</para>
                <para><emphasis role="bold"
                        >org.kuali.rice.kew.notes.web.AttachmentServlet</emphasis> - serves
                    attachments that have been attached to documents using the KEW Notes and
                    Attachments framework</para>
                <para><emphasis role="bold">org.kuali.rice.kew.edl.EDLServlet</emphasis> - The
                    servlet used to interact with eDocLite documents. See eDocLite documentation for
                    more information.</para>
            </sect3>
            <sect3>
                <title>Bundled Deployment Diagram</title>
                <figure>
                    <title>Bundled deployment diagram</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/bundled_deployment_diagram.png"/>
                        </imageobject>
                    </mediaobject>
                    </figure>
            </sect3>
        </sect2>
        <sect2>
            <title>Using the Remote Java Client</title>
            <para>Along with the previous embedded configurations, KEW also allows for Remote Java
                Clients, which communicate with KEW services that are available on the service bus.
                Configuration of the remote client is similar to that of the embedded client, except
                that no embedded KEW engine gets set up; instead, the client relies on the service
                bus for accessing the KEW services of the Standalone Rice Server.</para>
            <caution>
                <para>Limitations of Remote KEW Java Clients: </para>
                <para>At present, KNS-enabled Java clients cannot be used as Remote KEW Java Clients. </para>
            </caution>
        </sect2>
        <sect2>
            <title>Using the Thin Java Client</title>
            <para>In addition to the embedded configurations discussed previously, KEW also provides
                a thin java client which can be used to talk directly to two KEW services exposed on
                the service bus. </para>
            <para>These KEW services are:<itemizedlist>
                    <listitem>
                        <para>WorkflowDocumentService - provides methods for creating, loading,
                            approving and querying documents </para>
                    </listitem>
                    <listitem>
                        <para>WorkflowUtilityService - provides methods for querying for various
                            pieces of information about the KEW system </para>
                    </listitem>
                </itemizedlist></para>
            <para>Additionally, access to two KIM services is required, as Principal and Group
                information is needed to use many of the methods in the KEW services above.</para>
            <para>These KIM services are:<itemizedlist>
                    <listitem>
                        <para>kimIdentityService - provides methods to query for Principal and
                            Entity information </para>
                    </listitem>
                    <listitem>
                        <para>kimGroupService - provides methods to query for Group information
                        </para>
                    </listitem>
                </itemizedlist></para>
            <para>Of course, this configuration requires Standalone Rice Server deployment. The
                workflow engine deployed within Standalone Rice Server is used for processing
                documents that integrate using a thin client.</para>
            <para>These services are exposed on the KSB as Java services, meaning they use Java
                Serialization over HTTP to communicate. Optionally, the KEW services can also be
                secured to provide access to only those callers with authorized digital signatures
                (note that secure access is required for the KIM services). In order to configure
                the thin client, the following configuration properties need to be defined.</para>
            <sect3>
                <title>Required Thin Client Configuration Properties</title>
                <para>
                    <table frame="none">
                        <title>Required Thin Client Configuration Properties</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                            <thead>
                                <row>
                                    <entry>Property </entry>
                                    <entry>Description </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>encryption.key</entry>
                                    <entry>The secret key used by the encryption service; Must match
                                        the setting on the standalone server</entry>
                                </row>
                                <row>
                                    <entry>keystore.alias </entry>
                                    <entry>Alias of the application's key within the
                                        keystore</entry>
                                </row>
                                <row>
                                    <entry>keystore.file </entry>
                                    <entry>Path to the application's keystore file</entry>
                                </row>
                                <row>
                                    <entry>keystore.password </entry>
                                    <entry>Password to the keystore and the key with the configured
                                        alias</entry>
                                </row>
                                <row>
                                    <entry>workflowdocument.javaservice.endpoint</entry>
                                    <entry>Endpoint URL for the Workflow Document service </entry>
                                </row>
                                <row>
                                    <entry>workflowutility.javaservice.endpoint </entry>
                                    <entry>Endpoint URL for the Workflow Utility service</entry>
                                </row>
                                <row>
                                    <entry>identity.javaservice.endpoint</entry>
                                    <entry>Endpoint URL for the KIM identity service</entry>
                                </row>
                                <row>
                                    <entry>group.javaservice.endpoint</entry>
                                    <entry>Endpoint URL for the KIM group service</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <note><para>It is simplest to use an identical keystore file and configuration in your thin client
                        application to that on your standalone server.</para></note>
            </sect3>
            <sect3>
                <title>Optional Thin Client Configuration Properties</title>
                <para>
                    <table frame="none">
                        <title>Optional Thin Client Configuration Properties</title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                            <thead>
                                <row>
                                    <entry>Property </entry>
                                    <entry>Description </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>secure.workflowdocument.javaservice.endpoint </entry>
                                    <entry>true/false value indicating if endpoint is secured
                                        (defaults to true); Must match the setting on the standalone
                                        server</entry>
                                </row>
                                <row>
                                    <entry>secure.workflowutility.javaservice.endpoint </entry>
                                    <entry>true/false value indicating if endpoint is secured
                                        (defaults to true); Must match the setting on the standalone
                                        server</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
            </sect3>
            <sect3>
                <title>Thin Client Spring Configuration</title>
                <para>Here is the Spring configuration for a thin client in <emphasis role="bold"
                        >ThinClientSpring.xml</emphasis>:</para>
                <programlisting>&lt;!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

&lt;beans>
    &lt;!-- point Rice to the file containing your configuration params -->
    &lt;bean id="config" class="org.kuali.rice.core.config.spring.ConfigFactoryBean">
        &lt;property name="configLocations">
            &lt;list>
                &lt;value>classpath: yourThinClientApp-config.xml&lt;/value>
            &lt;/list>
        &lt;/property>
    &lt;/bean>
    &lt;!-- Pull your configuration params out as Properties -->
    &lt;bean id="configProperties" 
class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        &lt;property name="targetObject" ref="config" />
        &lt;property name="targetMethod" value="getProperties" />
    &lt;/bean>
    &lt;!-- expose configuration params to Spring -->
    &lt;bean class=
"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        &lt;property name="properties" ref="configProperties" />
    &lt;/bean>
    &lt;!-- The RiceConfigurer that sets up thin client mode -->
    &lt;bean id="rice" class="org.kuali.rice.kew.config.ThinClientKEWConfigurer">
        &lt;!-- inject the "config" bean into our configurer -->
        &lt;property name="rootConfig" ref="config" />
    &lt;/bean>
&lt;/beans>  
</programlisting>
            </sect3>
            <sect3>
                <title>Endpoint URLs</title>
                <para>Since KEW and KIM use the KSB to expose their services, the endpoint URLs are
                    the same as those exported by the KSB.</para>
                <para>An example configuration for these might be:</para>
                <programlisting>&lt;param name=
"workflowdocument.javaservice.endpoint">http://yourlocalip/kr-dev/remoting/WorkflowDocumentActionsService&lt;/param>
&lt;param name=
"workflowutility.javaservice.endpoint">http://yourlocalip/kr-dev/remoting/WorkflowUtilityService&lt;/param>
&lt;param name=
"identity.javaservice.endpoint">http://yourlocalip/kr-dev/remoting/kimIdentityService&lt;/param>
&lt;param name=
"group.javaservice.endpoint">http://yourlocalip/kr-dev/remoting/kimGroupService&lt;/param>
</programlisting>
            </sect3>
            <sect3>
                <title>Thin Client Deployment Diagram</title>
                <para>Here is a diagram showing what a thin client deployment might look
                    like.</para>
                <figure>
                    <title>Thin client deployment diagram</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/thin_client_deployment_diagram.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </sect3>
        </sect2>
        <sect2>
            <title>Picture of an Enterprise Deployment</title>
            <para>As can be seen from the various integration options described, a KEW Enterprise
                Deployment (and Kuali Rice in general) might very well be a distributed environment
                with multiple systems communicating with each other.</para>
            <para>The diagram below shows what a typical Enterprise deployment of Kuali Rice might
                look like.</para>
            <figure>
                <title>Typical enterprise deployment of Kuali Rice</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="../images/enterprise_deployment.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </sect2>
        <sect2>
            <title>KEW Core Parameters</title>
            <para>The display below includes those basic set of parameters for <emphasis role="bold"
                    >rice-config.xml</emphasis> as the minimal parameters to startup the Rice
                software. These parameters are a beginning reference to you for modification to your
                    <emphasis role="bold">rice-config.xml</emphasis>. </para>
            <note><para>Please verify that your application.url and database username/password are set
                correctly.</para></note>
            <para>
                <table frame="none">
                    <title>KEW Core Parameters</title>
                    <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Core </entry>
                                <entry>Description</entry>
                                <entry>Examples\Values</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>workflow.url </entry>
                                <entry>URL to the KEW web module (i.e., ${application.url}/en) </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>plugin.dir </entry>
                                <entry>Directory from which plugins will be loaded </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>attachment.dir.location </entry>
                                <entry>Directory where attachments will be stored </entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
            <para>As a minimum, you must enable the dummy login filter by adding these lines to the
            rice-config.xml file for default login screen:</para>
            <programlisting>&lt;param name="filter.login.class">org.kuali.rice.kew.web.DummyLoginFilter&lt;/param>
&lt;param name="filtermapping.login.1">/*&lt;/param>
</programlisting>
        </sect2>
        <sect2>
            <title>KEW Configuration Properties</title>
            <para>
                <table frame="none">
                    <title>KEW Configuration Properties</title>
                    <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Property </entry>
                                <entry>Description </entry>
                                <entry>Default</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>actionlist.outbox</entry>
                                <entry>Determines if the KEW actionlist "outbox" (ie, the actions
                                    already completed) will be viewable by users of the Rice
                                    application.</entry>
                                <entry>false</entry>
                            </row>
                            <row>
                                <entry>actionlist.outbox.default.preference.on</entry>
                                <entry>Determines if the KEW actionlist "outbox" is the default mode
                                    for viewing the action list.</entry>
                                <entry>false</entry>
                            </row>
                            <row>
                                <entry>base.url </entry>
                                <entry>Base URL under which Action List and other KEW screens can be
                                    found</entry>
                                <entry>Example: if your action list URL is <link
                                        xlink:href="http://yourlocalip/en/ActionList.do"
                                        >http://yourlocalip/en/ActionList.do</link>, set this
                                    property to <link xlink:href="http://yourlocalip/"
                                        >http://yourlocalip/</link></entry>
                            </row>
                            <row>
                                <entry>client.protocol </entry>
                                <entry>Same as clientProtocol property on KEWConfigurer, this
                                    property can be configured in either place </entry>
                                <entry>embedded </entry>
                            </row>
                            <row>
                                <entry>data.xml.root.location</entry>
                                <entry>The temporary location of files being processed by the KEW
                                    XmlPollingService</entry>
                                <entry>${java.io.tmpdir}/${environment}/kew/xml</entry>
                            </row>
                            <row>
                                <entry>document.lock.timeout</entry>
                                <entry>Used by the Oracle database platform to determine how long
                                    database locks on the document header are used</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>email.reminder.lifecycle.enabled</entry>
                                <entry>If true, turns on timed job to send out regular e-mails to
                                    remind users of actions still waiting in their action
                                    list</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>extra.classes.dir</entry>
                                <entry>Directory where classes for KEW plugins are located</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>extra.lib.dir</entry>
                                <entry>Directory where libraries for KEW plugins are located</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>kew.mode</entry>
                                <entry>The mode that KEW will run in; choices are "local",
                                    "embedded", "remote", or "thin"</entry>
                                <entry>local</entry>
                            </row>
                            <row>
                                <entry>kew.url</entry>
                                <entry>The base URL of KEW services and pages</entry>
                                <entry>${application.url}/kew</entry>
                            </row>
                            <row>
                                <entry>plugin.dir </entry>
                                <entry>Directory to load plugins from if the Plugin Registry is
                                    enabled </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>plugin.registry.enabled </entry>
                                <entry>If set to true, then the Plugin Registry will be enabled and
                                    any available plugins will be loaded (see Workflow Plugin Guide) </entry>
                                <entry>false</entry>
                            </row>
                            <row>
                                <entry>attachment.dir.location </entry>
                                <entry>When using the attachments system, this is the directory
                                    where attachments will be stored</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>data.xml.loaded.location </entry>
                                <entry>Directory path where the XML Loader will store successfully
                                    loaded XML files </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>data.xml.pending.location </entry>
                                <entry>Directory path where the XML Loader will look for files to
                                    ingest </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>data.xml.pollIntervalSecs </entry>
                                <entry>Interval in seconds that the XML Loader will poll the pending
                                    directory for new XML files to load</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>data.xml.problem.location </entry>
                                <entry>Directory path where the XML Loader will put XML files it
                                    failed to load </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>datasource.platform </entry>
                                <entry>The fully qualified class name of an implementation of the
                                    org.kuali.rice.core.database.platform.Platform interface</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>default.note.class </entry>
                                <entry>The fully qualified class name of the default implementation
                                    of org.kuali.rice.kew.notes.CustomNoteAttribute to use for the
                                    Notes system </entry>
                                <entry>org.kuali.rice.kew.notes.CustomNoteAttributeImpl </entry>
                            </row>
                            <row>
                                <entry>edl.config.loc </entry>
                                <entry>Location to load the EDocLite component configuration from </entry>
                                <entry>classpath:META-INF/EDLConfig.xml </entry>
                            </row>
                            <row>
                                <entry>embedded.server </entry>
                                <entry>Indicates if an embedded instance is supposed to behave like
                                    a standalone server. See additional notes below under
                                    embedded.server</entry>
                                <entry>false </entry>
                            </row>
                            <row>
                                <entry>Identity.useRemoteServices </entry>
                                <entry><para>Configuration parameter that governs whether a number of
                                    common identity services (user and group service) are exported
                                    or retrieved via the bus. If this flag is set to true then:</para>
                                    <orderedlist>
                                        <listitem>
                                            <para>user and group service will NOT be published the
                                                bus, and </para>
                                        </listitem>
                                        <listitem>
                                            <para>CoreResourceLoader will short-circuit the resource
                                                loader stack lookup and go directly to the bus to
                                                obtain these services, circumventing any beans that
                                                may be defined by local modules. </para>
                                        </listitem>
                                    </orderedlist></entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>initialDelaySecs </entry>
                                <entry>Delay in seconds after system starts up to begin the XML
                                    Loader polling </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>rice.kew.enableKENNotification</entry>
                                <entry>Determines if KCB notifications should be sent for KEW events
                                    when Action Item events occur</entry>
                                <entry>true</entry>
                            </row>
                            <row>
                                <entry>rice.kew.struts.config.files</entry>
                                <entry>The struts-config.xml configuration file that the KEW portion
                                    of the Rice application will use</entry>
                                <entry>/kew/WEB-INF/struts-config.xml</entry>
                            </row>
                            <row>
                                <entry>workflow.documentsearch.base.url</entry>
                                <entry>The URL for the document search page</entry>
                                <entry>${workflow.url}/DocumentSearch.do?docFormKey=88888888&amp;amp;returnLocation=${application.url}/portal.do&amp;amp;hideReturnLink=true</entry>
                            </row>
                            <row>
                                <entry>xml.pipeline.lifecycle.enabled</entry>
                                <entry>If set to true, will poll a directory for new Rice
                                    configuration XML and ingest any new XML placed in that
                                    directory</entry>
                                <entry>false</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
            <sect3>
                <title>The ‘embedded.server’ Parameter</title>
                <para>If embedded.server parameter is enabled (set to true), then two additional
                    features will be loaded when KEW is started:<orderedlist>
                        <listitem>
                            <para>XML Loader </para>
                        </listitem>
                        <listitem>
                            <para>Email Reminders </para>
                        </listitem>
                    </orderedlist></para>
                <para>The XML Loader will poll a directory for XML files to ingest into the system
                    (as configured by the data.xml.* properties).</para>
                <para>The Email Reminders will handle sending Daily and Weekly batch emails for
                    users that have their preferences set accordingly.</para>
            </sect3>
            <sect3>
                <title>The ‘datasource.platform’ Parameter</title>
                <para>KEW requires and uses the database platform implementation in order to
                    function. These may be be implemented differently for each support database
                    management system. </para>
                <para>The current functional implementations of this platform are:<itemizedlist>
                        <listitem>
                            <para>org.kuali.rice.core.database.platform.OraclePlatform </para>
                        </listitem>
                        <listitem>
                            <para>org.kuali.rice.core.database.platform.Oracle9iPlatform (deprecated
                                and just an alias for the OraclePlatform) </para>
                        </listitem>
                        <listitem>
                            <para>org.kuali.rice.core.database.platform.MySQLPlatform </para>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
            <sect3>
                <title>Custom Servlet Filters</title>
                <para>When running a Standalone Rice Server, you may want to implement your own
                    filters for authentication purposes. The system comes with a special filter that
                    will read filter definitions and mappings from the configuration system. </para>
                <para>The Bootstrap Filter is a generic filter that is applied to all web requests,
                    which then delegates to any filters and are setup through the default
                    configuration. This mechanism allows registration of institution-specific
                    filters without the necessity of modifying the web application configuration
                    file (/WEB-INF/web.xml) within the standalone webapp.</para>
                <para>Filter syntax is as follows:</para>
                <programlisting>&lt;param name="filter.filter name.class">class name of filter&lt;/param></programlisting>
                <para>filter name is an arbitrary name for your filter:</para>
                <programlisting>&lt;param name="filter.myfilter.class">edu.institution.organization.MyFilter&lt;/param></programlisting>
                <para>Any number of configuration parameters may be defined for a given filter as
                    follows:</para>
                <programlisting>&lt;param name="filter.filter name.filter param name">filter param value&lt;/param></programlisting>
                <para>For example:</para>
                <programlisting>&lt;param name="filter.myfilter.color">red&lt;/param>

&lt;param name="filter.myfilter.shape">square&lt;/param>
</programlisting>
                <para>For custom filters to be invoked, they must first be mapped to requests. That
                    is done via the filter mapping parameter:</para>
                <programlisting>&lt;param name="filtermapping.filter name.optional order index">path matching expression&lt;/param></programlisting>
                <para><emphasis role="italic">filter name</emphasis> is the name of your previously
                    defined filter, <emphasis role="italic">optional order index</emphasis> is an
                    optional integer used to specify the position of the filter in the invocation
                    order, and <emphasis role="italic">path matching expression</emphasis> is a
                    Servlet-specification-compatible url pattern. </para>
                <programlisting>&lt;param name="filtermapping.myfilter.1">/special/path/&lt;/param></programlisting>
                <para>If an order index is not specified, it is assumed to be 0. Filters with
                    equivalent order are ordered arbitrarily with relation to each other (not in
                    order of filter or mapping definition). A full example follows:</para>
                <programlisting>&lt;param name="filter.myfilter.class">edu.institution.organization.MyFilter&lt;/param>

&lt;param name="filter.myfilter.color">red&lt;/param>

&lt;param name="filter.myfilter.shape">square&lt;/param>
&lt;param name="filter.securityfilter.class">edu.institution.organization.SecurityFilter&lt;/param>

&lt;param name="filter.securityfilter.secretKey">abracadabra&lt;/param>

&lt;param name="filter.compressionfilter.class">edu.institution.organization.CompressionFilter&lt;/param>
&lt;param name="filter.compressionfilter.compressLevel">5&lt;/param>
&lt;param name="filtermapping.securityfilter.1">/secure/&lt;/param>

&lt;param name="filtermapping.myfilter.2">/special/path/&lt;/param>

&lt;param name="filtermapping.compressionfilter.3">/*&lt;/param>
</programlisting>
            </sect3>
        </sect2>
        <sect2>
            <title>Email Configuration</title>
            <para>KEW can send emails to notify users about items in their Action List (depending on
                user preferences). Email in KEW uses the JavaMail library. In order to configure
                email, you will need to configure the appropriate JavaMail properties. A list of
                those properties can be found at the end of the page at the following url: <link
                    xlink:href="http://java.sun.com/products/javamail/javadocs/javax/mail/package-summary.html"
                    >http://java.sun.com/products/javamail/javadocs/javax/mail/package-summary.html</link></para>
            <para>In addition to these standard JavaMail properties, you can also set the following
                optional properties to configure simple SMTP authentication.</para>
            <para>
                <table frame="none">
                    <title>Optional Properties to Configure Simple SMTP Authentication</title>
                    <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Property </entry>
                                <entry>Description </entry>
                                <entry>Examples/Values</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>mail.transport.protocol</entry>
                                <entry>The protocol used to sending mail</entry>
                                <entry>smtp</entry>
                            </row>
                            <row>
                                <entry>mail.smtp.host</entry>
                                <entry>This is the host name of the SMTP</entry>
                                <entry>smtp.secureserver.net</entry>
                            </row>
                            <row>
                                <entry>mail.smtp.username </entry>
                                <entry>The username used for access to the SMTP server </entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>mail.smtp.password </entry>
                                <entry>The password used for access to the SMTP server </entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
            <para>Of course, if the authentication required by your mail server is beyond the
                abilities of the above configuration, it is possible to override the <emphasis
                    role="italic">enEmailService</emphasis> loaded by the KEW module and implement a
                custom email service. </para>
            <para>In order for KEW to send out emails, several steps need to be done. In order to
                have KEW send out any emails, the “SEND_EMAIL_NOTIFICATION_IND” KNS System Parameter
                needs to be set to ‘Y’. For emails to real people, the environment code must be set
                to ‘prd’. If this is not set to ‘prd’, an email can still be sent out to a test
                address. This test address is set by the KNS System Parameter,
                “EMAIL_NOTIFICATION_TEST_ADDRESS”. Emails sent in a test system will only be sent to
                the address specified by the EMAIL_NOTIFICATION_TEST_ADDRESS. The “from” address may
                also be set with a System Parameter. To do this, set the “FROM_ADDRESS” System
                Parameter to the email address you want the KEW emails sent from. If the
                FROM_ADDRESS parameter doesn’t exist or isn’t set, it will default to
                “admin@localhost”.</para>
        </sect2>
        <sect2>
            <title>Periodic Email Reminders</title>
            <para>KEW can send emails on a nightly or weekly basis to remind users about items in
                their Action List (depending on user preferences). The following set of parameters
                configures whether the processes to send these reminders will run, and at what
                time(s) of day they will do so.</para>
            <para>
                <table frame="none">
                    <title>Configuration Parameters for Email Reminders</title>
                    <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Property </entry>
                                <entry>Description </entry>
                                <entry>Examples/Values</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>email.reminder.lifecycle.enabled</entry>
                                <entry>Enable periodic KEW reminder emails</entry>
                                <entry>true</entry>
                            </row>
                            <row>
                                <entry>dailyEmail.active</entry>
                                <entry>Enable daily reminder emails</entry>
                                <entry>true</entry>
                            </row>
                            <row>
                                <entry>dailyEmail.cronExpression</entry>
                                <entry>Configures the schedule on which the daily reminder emails
                                    are sent – see org.quartz.CronExpression, org.quartz.CronTrigger
                                    for information about the format for this parameter</entry>
                                <entry>0 0 1 * * ?</entry>
                            </row>
                            <row>
                                <entry>weeklyEmail.active</entry>
                                <entry>Enable weekly reminder emails</entry>
                                <entry>true</entry>
                            </row>
                            <row>
                                <entry>weeklyEmail.cronExpression</entry>
                                <entry>Configures the schedule on which the weekly reminder emails
                                    are sent – see org.quartz.CronExpression, org.quartz.CronTrigger
                                    for information about the format for this parameter</entry>
                                <entry>0 0 2 ? * 2</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>Workflow Preferences Configuration</title>
            <para>Workflow users have the ability to update their preferences by going to the “User
                Preferences” page. The default values for many of these preferences can now be
                configured.</para>
            <para>For example, institutions will commonly override the default action list email
                preference. By default it’s set to “immediate,” but it can be configured to “no”,
                “daily”, “weekly”, or “immediate.” The user will still be able to override the
                defaults on their User Preferences screen.</para>
            <para>Here a list of workflow preferences that can be configured:</para>
            <programlisting>&lt;!-- Default Option for Action List User Preferences. -->

&lt;param name="userOptions.default.color">white&lt;/param>
&lt;!-- email options: no, daily, weekly, immediate -->
&lt;param name="userOptions.default.email" >immediate&lt;/param>
&lt;param name="userOptions.default.notifyPrimary" >yes&lt;/param>
&lt;param name="userOptions.default.notifySecondary" >no&lt;/param>
&lt;param name="userOptions.default.openNewWindow" >yes&lt;/param>
&lt;param name="userOptions.default.actionListSize" >10&lt;/param>
&lt;param name="userOptions.default.refreshRate" >15&lt;/param>
&lt;param name="userOptions.default.showActionRequired" >yes&lt;/param>

&lt;param name="userOptions.default.showDateCreated" >yes&lt;/param>
&lt;param name="userOptions.default.showDocumentType" >yes&lt;/param>
&lt;param name="userOptions.default.showDocumentStatus" >yes&lt;/param>
&lt;param name="userOptions.default.showInitiator" >yes&lt;/param>
&lt;param name="userOptions.default.showDelegator" >yes&lt;/param>
&lt;param name="userOptions.default.showTitle" >yes&lt;/param>
&lt;param name="userOptions.default.showWorkgroupRequest" >yes&lt;/param>
&lt;param name="userOptions.default.showClearFYI" >yes&lt;/param>
&lt;param name="userOptions.default.showLastApprovedDate" >no&lt;/param>
&lt;param name="userOptions.default.showCurrentNode" >no&lt;/param>
&lt;param name="userOptions.default.useOutBox" >yes&lt;/param>
&lt;!-- delegatorFilterOnActionList: "Secondary Delegators on Action List Page" or "Secondary Delegators only on Filter Page" -->
&lt;param name="userOptions.default.delegatorFilterOnActionList" >Secondary Delegators on Action List Page&lt;/param>
&lt;param name="userOptions.default.primaryDelegatorFilterOnActionList" >Primary Delegates on Action List Page&lt;/param>
</programlisting>
        </sect2>
        <sect2>
            <title>Outbox Configuration</title>
            <para>The <emphasis role="bold">Outbox</emphasis> is a standard feature on the <emphasis
                    role="bold">Action List</emphasis> and is visible to the user in the UI by
                default. When the Outbox is turned on, users can access it from the Outbox hyperlink
                at the top of the Action List.</para>
            <para>The Outbox is implemented by heavily leveraging existing Action List code. When an
                    <emphasis role="bold">Action Item</emphasis> is deleted from the Action Item
                table as the result of a user action, the item is stored in the <emphasis
                    role="bold">KEW_OUT_BOX_ITM_T</emphasis> table, using the <emphasis role="bold"
                    >org.kuali.rice.kew.actionitem.OutboxItemActionListExtension</emphasis> object.
                This object is an extension of the <emphasis role="bold"
                    >ActionItemActionListExtension</emphasis>. The separate object exists to provide
                a bean for OJB mapping.</para>
            <para>The Workflow Preferences determine if the Outbox is visible and functioning for
                each user. The preference is called <emphasis role="bold">Use Outbox</emphasis>. In
                addition, you can configure the Outbox at the KEW level using the parameter
                tag:</para>
            <programlisting>&lt;param name="actionlist.outbox">true&lt;/param></programlisting>
            <para>When the Outbox is set to <emphasis role="italic">false</emphasis>, the preference
                for individual users to configure the Outbox is turned off. By default, the Outbox
                is set to true at the KEW level. You can turn the Outbox off (to hide it from users)
                by setting the property below to <emphasis role="italic">false</emphasis>:</para>
            <programlisting>&lt;param name="actionlist.outbox.default.preference.on">false&lt;/param></programlisting>
            <para>This provides backwards compatibility with applications that used earlier versions
                of KEW. </para>
            <para>Notes on the Outbox: <itemizedlist>
                    <listitem>
                        <para>Actions on saved documents are not displayed in the Outbox. </para>
                    </listitem>
                    <listitem>
                        <para>The Outbox responds to all saved Filters and Action List Preferences.
                        </para>
                    </listitem>
                    <listitem>
                        <para>A unique instance of a document only exists in the Outbox. If a user
                            has a document in the Outbox and that user takes action on the document,
                            then the original instance of that document remains in the Outbox.
                        </para>
                    </listitem>
                </itemizedlist></para>
        </sect2>
        <sect2>
            <title>Implementing KEW at your institution</title>
            <para>In addition to the previous discussion of KEW configuration, there are a few other
                aspects relevant to implementing KEW at your institution.</para>
            <sect3>
                <title>Bootstrap data</title>
                <para>Because the operation of parts of KEW is dependent on a set of Document Types
                    and Attributes being available within the system, there is some bootstrap XML
                    that you will want to import. The easiest way to do this is to import the files
                    in the following locations using the XML Ingester:<itemizedlist>
                        <listitem>
                            <para>kns/src/main/config/xml/RiceSampleAppWorkflowBootstrap.xml </para>
                        </listitem>
                        <listitem>
                            <para>kew/src/main/config/bootstrap/edlstyle.xml </para>
                        </listitem>
                        <listitem>
                            <para>kew/src/main/config/bootstrap/widgets.xml </para>
                        </listitem>
                    </itemizedlist></para>
                <para>These files include the following:<itemizedlist>
                        <listitem>
                            <para>Application constants: cluster-wide configuration settings </para>
                        </listitem>
                        <listitem>
                            <para>Core document types and rules: a few primordial document types and
                                rules are required for the system to function </para>
                        </listitem>
                        <listitem>
                            <para>Default "eDocLite" styles: these are required if you wish to use
                                eDocLite </para>
                        </listitem>
                        <listitem>
                            <para>Default admin user and workgroup: these are depended upon (at the
                                moment) by the core document types and rules, as well as referred to
                                by the default application constants </para>
                        </listitem>
                    </itemizedlist></para>
                <para>Application constants you may want to change:<itemizedlist>
                        <listitem>
                            <para>Config.Application.AdminUserList: this should be set to a
                                space-delimited set of administrative user names </para>
                        </listitem>
                        <listitem>
                            <para>Workflow.AdminWorkgroup: this should be set to an institutional
                                admin workgroup; if the default KEW workgroup service is used, this
                                can be left to the default, WorkflowAdmin </para>
                        </listitem>
                        <listitem>
                            <para> Config.Mailer.FromAddress: this should be changed to an address
                                specific to your institution, e.g. kew@your-university.edu </para>
                        </listitem>
                        <listitem>
                            <para>HelpDeskActionList.helpDeskActionListName: set to an workgroup at
                                your institution </para>
                        </listitem>
                        <listitem>
                            <para>ApplicationContext: set to the context path of the KEW
                                application, if it differs from the environment default, e.g.
                                "en-prod" instead of "en-prd" </para>
                        </listitem>
                    </itemizedlist></para>
                <para>In the core document types and rules config, you will need to change:<itemizedlist>
                        <listitem>
                            <para>superUserWorkgroupName, blanketApproveWorkgroupName, and
                                exceptionWorkgroup: should be set to the administrative group at
                                your institution. If you are using the default workgroup service,
                                this can be left as WorkgroupAdmin </para>
                        </listitem>
                        <listitem>
                            <para>ensure all docHandler elements, if they specify a URL, specify:
                                "${base.url}/en-dev/Workgroup.do?methodToCall=docHandler", and
                                ensure that the base.url config parameter is specified in your
                                configuration (as mentioned above) </para>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>KEW Administration Guide</title>
        <para>This guide provides information on administering a Kuali Enterprise Workflow (KEW)
            installation. Out of the box, KEW comes with a default setup that works well in
            development and test environments. However, when moving to a production environment,
            this setup requires adjustments. This document discusses basic administration as well as
            instructions for working with some of KEW’s administration tools.</para>
        <sect2>
            <title>Configuration Overview</title>
            <para>You configure KEW primarily through the <emphasis role="bold"
                    >workflow.xml</emphasis> file. Please see the KEW Configuration Parameters guide
                for more information on initial configuration of a KEW installation.</para>
        </sect2>
        <sect2>
            <title>Application Constants</title>
            <para>Application Constants are the configuration elements in KEW. Each constant is
                modifiable at system runtime; any changes take effect immediately in KEW.
                Application Constants are stored in a cluster-safe cache and propagated across all
                machines when change occurs. For more information about Application Constants,
                please refer to Application Constants.</para>
        </sect2>
        <sect2>
            <title>Production Environments</title>
            <para>When rolling KEW out into a production environment, there are application
                constants which you may need to change:<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">ActionList.sendEmailNotification</emphasis> -
                            This is usually set to false in test environments so emails aren’t
                            generated during testing. Usually, this is set this to true in a
                            production environment to allow email notifications. You also need to
                            ensure that your email service is configured properly to allow KEW to
                            send notifications. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">ApplicationContext</emphasis> - In a production
                            environment, this is usually something like en-prd. You must set this
                            value correctly so that KEW’s email notifications contain valid links.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Backdoor.ShowbackDoorLogin</emphasis> - The
                            backdoor login allows users to masquerade as other users for testing
                            purposes. It is recommended that you set this value to false in a
                            production environment. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">RouteManagerPool.numWorkers</emphasis> – The
                            appropriate value for this depends on the capabilities of your
                            production hardware. If it's set too high, KEW may use so much of the
                            CPU that other applications running on the same machine are adversely
                            impacted. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">RouteManagerQueue.waitTime</emphasis> - In test
                            environments, users tend to be more sensitive to immediate feedback
                            since they may be testing processes over the course of a couple minutes
                            that, in practice, occur over a number of days. In test environments, it
                            is recommended that you keep this value low. In a production
                            environment, you can reasonably increase this value without affecting
                            the speed at which documents are routed. This reduces thrashing on the
                            route queue. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">RouteQueue.isRoutingByIPNumber</emphasis> - If
                            you are running your production KEW system in a clustered environment,
                            set this value to false. This allows processing of documents in the
                            queue to be distributed across the entire cluster, which enhances
                            routing performance and facilitates load balancing. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">RouteQueue.maxRetryAttempts</emphasis> - As with
                            the <emphasis role="italic">RouteManagerQueue.waitTime</emphasis>
                            constant, in a test environment it is important to find out as quickly
                            as possible if a document is going to go into exception routing (usually
                            indicating a problem in that document's routing setup). In a production
                            environment, it may make sense to allow a longer period before a
                            document goes into exception routing. This constant, in combination with
                            the <emphasis role="italic">RouteQueue.timeIncrement</emphasis>
                            constant, determines how long it takes a document to be put into
                            exception routing. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">RouteQueue.timeIncrement</emphasis> - Increasing
                            this value results in a longer time before a document goes into
                            exception routing. </para>
                    </listitem>
                </itemizedlist></para>
        </sect2>
        <sect2>
            <title>XML Ingestion</title>
            <para>KEW relies on XML for data population and routing configuration. <emphasis
                    role="bold">XML Ingester</emphasis> is available from the <emphasis role="bold"
                    >Administrator</emphasis> channel in the portal. This allows import of various
                KEW components from XML, such as DocumentTypes, RuleAttributes, Rules, Workgroups,
                and more.</para>
            <sect3>
                <title>Uploading an eDocLite form</title>
                <para>To upload XML, go to <emphasis role="italic">Ingester UI</emphasis> and select
                    the XML file that you want to import:</para>
                <figure><title>Ingester</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/ingester.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>After upload, notice the red arrow and the statement, <emphasis role="italic"
                        >Ingested xml doc: &lt;name of file></emphasis>:</para>
                <figure><title>Ingestion Complete</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/ingestion_complete.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
            </sect3>
        </sect2>
        <sect2>
            <title>Route Queue Administration</title>
            <para>The Route Queue is the main scheduling mechanism in KEW. You use it to schedule
                documents for asynchronous routing and to queue arbitrary units of work. The
                database polls for new entries depending on the value set for the <emphasis
                    role="italic">RouteQueue.waitTime</emphasis> constant. When KEW places a
                document into exception routing, it may become stuck after a series of failed
                attempts. You can use the Route Queue UI to resolve this issue, as well as to fix
                new entries, if needed.</para>
            <sect3>
                <title>Examining the Route Queue</title>
                <para>The main Route Queue screen:</para>
                <figure>
                    <title>Route Queue Screen</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/route_queue_screen.png"/>
                        </imageobject>
                    </mediaobject>
                    </figure>
                <para>Examining this sample screen, we see there are five entries in the route
                    queue, one on each row. The columns display information about each entry:<itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">Route Queue Id</emphasis> - The primary key
                                of this route queue entry in the data store </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Route Header Id</emphasis> - The identifier
                                of the document that is being processed by this entry. If this value
                                is -1, it means the entry doesn't pertain to a specific document.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Queue Priority</emphasis> - The priority of
                                the entry in the queue, where entries with the lowest number are
                                processed first </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Queue Status</emphasis> – The entry can be
                                in a state of QUEUED, ROUTING, or EXCEPTION:<itemizedlist>
                                    <listitem>
                                        <para> A QUEUED entry is waiting for a worker thread to pick
                                            it up. </para>
                                    </listitem>
                                    <listitem>
                                        <para>A ROUTING entry currently has a worker working on it.
                                        </para>
                                    </listitem>
                                    <listitem>
                                        <para>An EXCEPTION entry has a problem and the route manager
                                            cannot access it. An administrator manually sets an
                                            EXCEPTION status to suspend a route queue entry until a
                                            problem can be diagnosed. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Queue Date</emphasis> - The date that KEW
                                should process this queue entry. If the queue checker runs and
                                discovers the queue date for an entry is equal to or earlier than
                                the current time, it processes that entry. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Retry Count</emphasis> - The number of times
                                KEW has attempted to process the entry </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">IP Number</emphasis> - The IP address of the
                                machine on which the entry was created. In the environment pictured,
                                we have three machines in our cluster. The IP number shows from
                                which machine each entry was queued up. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Processor Class Name</emphasis> - The name
                                of the Route Queue processor with which this entry will be
                                processed. If empty, this defaults to the Route Queue processor that
                                submits the document to the Routing Engine for processing. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Processor Value</emphasis> - The parameters
                                to be passed to the Route Queue processor </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Action</emphasis> - The Edit link in the
                                Action column allows you to edit the route queue entry. </para>
                        </listitem>
                    </itemizedlist></para>
                <para>Once a queue entry has been successfully processed, it is deleted from the
                    queue.</para>
                <para>In the screen shot above, we see two entries with special Processors. One of
                    these special Processors is sending daily email reminders. The other one is
                    sending weekly email reminders. When these entries are picked up from the queue,
                    they do their work and then queue themselves back up for a day (or a week)
                    later. Therefore, these entries never really leave the queue.</para>
                <para>Of the other three entries, we can see that two have a status of <emphasis
                        role="bold">ROUTING</emphasis> while one has a status of <emphasis
                        role="bold">QUEUED</emphasis>. What this means is that, at the instant that
                    this screen shot was taken, the two that are <emphasis role="bold"
                        >ROUTING</emphasis> have been picked up by the route manager and are being
                    processed. The one that is <emphasis role="bold">QUEUED</emphasis> will be
                    picked up the next time that the route manager checks the queue.</para>
            </sect3>
            <sect3>
                <title>Diagnosing and Fixing Problems</title>
                <para>Sometimes it is necessary to manually edit a route queue entry that is
                        <emphasis>halted inside of the queue</emphasis>. This situation
                    might happen when:<itemizedlist>
                        <listitem>
                            <para>KEW encounters an error trying to put the document into exception
                                routing. This could occur if there is a database error or the
                                document's <emphasis role="italic">PostProcessor</emphasis> throws
                                an exception when it's notified of a status change </para>
                        </listitem>
                        <listitem>
                            <para>KEW is improperly shut down in the middle of an entry being
                                processed </para>
                        </listitem>
                        <listitem>
                            <para>The database goes down while an entry is being processed </para>
                        </listitem>
                    </itemizedlist></para>
                <para>In all cases, the status of the entry is <emphasis role="bold"
                        >ROUTING</emphasis>, but there is no longer a worker thread processing the
                    entry. Currently, KEW doesn't implement any auto-detection of failure cases. To
                    put one of these entries in a state where it can be picked up by the route
                    manager again, simply click the <emphasis role="bold">Edit</emphasis> link and
                    set the entry’s status back to <emphasis role="bold">QUEUED</emphasis>. Here's a
                    screen shot of the <emphasis role="bold">Route Queue Entry - Edit</emphasis>
                    screen:</para>
                <figure>
                    <title>Route Queue Entry Edit Screen</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/route_queue_entry_edit.png"/>
                        </imageobject>
                    </mediaobject>
                    </figure>
                <para>Use the Queue Status dropdown list to change the status of the entry. You may
                    also want to set the Retry Count to zero to allow you to diagnose the problem
                    before the document goes into exception routing.</para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>KEW System Parameters</title>
        <sect2>
            <title>System Parameters Covered</title>
            <para>
                <table frame="none">
                    <title>KEW System Parameters</title>
                    <tgroup cols="3">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Value</entry>
                                <entry>Description</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>MAX_MEMBERS_PER_PAGE</entry>
                                <entry>20</entry>
                                <entry>The maximum number of role or group members to display at
                                    once on their documents. If the number is above this value, the
                                    document will switch into a paging mode with only this many rows
                                    displayed at a time.</entry>
                            </row>
                            <row>
                                <entry>PREFIXES</entry>
                                <entry>Ms;Mrs;Mr;Dr</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>SUFFIXES</entry>
                                <entry>Jr;Sr;Mr;Md</entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>CHECK_ENCRYPTION_SERVICE_OVERRIDE_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag for enabling/disabling (Y/N) the demonstration
                                    encryption check.</entry>
                            </row>
                            <row>
                                <entry>DATE_TO_STRING_FORMAT_FOR_FILE_NAME</entry>
                                <entry>yyyyMMdd</entry>
                                <entry>A single date format string that the DateTimeService will use
                                    to format dates to be used in a file name when
                                    DateTimeServiceImpl.toDateStringForFilename(Date) is called. For
                                    a more technical description of how characters in the parameter
                                    value will be interpreted, please consult the Java Documentation
                                    for java.text.SimpleDateFormat. Any changes will be applied when
                                    the application is restarted.</entry>
                            </row>
                            <row>
                                <entry>DATE_TO_STRING_FORMAT_FOR_USER_INTERFACE</entry>
                                <entry>MM/dd/yyyy</entry>
                                <entry>A single date format string that the DateTimeService will use
                                    to format a date to be displayed on a web page. For a more
                                    technical description of how characters in the parameter value
                                    will be interpreted, please consult the Java Documentation for
                                    java.text.SimpleDateFormat. Any changes will be applied when the
                                    application is restarted.</entry>
                            </row>
                            <row>
                                <entry>DEFAULT_COUNTRY</entry>
                                <entry>US</entry>
                                <entry>Used as the default country code when relating records that
                                    do not have a country code to records that do have a country
                                    code, e.g. validating a zip code where the country is not
                                    collected.</entry>
                            </row>
                            <row>
                                <entry>ENABLE_DIRECT_INQUIRIES_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag for enabling/disabling direct inquiries on screens that
                                    are drawn by the nervous system (i.e. lookups and maintenance
                                    documents)</entry>
                            </row>
                            <row>
                                <entry>ENABLE_FIELD_LEVEL_HELP_IND</entry>
                                <entry>N</entry>
                                <entry>Indicates whether field level help links are enabled on
                                    lookup pages and documents.</entry>
                            </row>
                            <row>
                                <entry>MAX_FILE_SIZE_DEFAULT_UPLOAD</entry>
                                <entry>5M</entry>
                                <entry>Maximum file upload size for the application. Must be an
                                    integer, optionally followed by "K", "M", or "G". Only used if
                                    no other upload limits are in effect.</entry>
                            </row>
                            <row>
                                <entry>SENSITIVE_DATA_PATTERNS</entry>
                                <entry>[0-9]{9};[0-9]{3}-[0-9]{2}-[0-9]{4}</entry>
                                <entry>A semi-colon delimited list of regular expressions that
                                    identify potentially sensitive data in strings. These patterns
                                    will be matched against notes, document explanations, and
                                    routing annotations.</entry>
                            </row>
                            <row>
                                <entry>STRING_TO_DATE_FORMATS</entry>
                                <entry>MM/dd/yy;MM-dd-yy;MMMM dd, yyyy;MMddyy</entry>
                                <entry>A semi-colon delimited list of strings representing date
                                    formats that the DateTimeService will use to parse dates when
                                    DateTimeServiceImpl.convertToSqlDate(String) or
                                    DateTimeServiceImpl.convertToDate(String) is called. Note that
                                    patterns will be applied in the order listed (and the first
                                    applicable one will be used). For a more technical description
                                    of how characters in the parameter value will be interpreted,
                                    please consult the Java Documentation for
                                    java.text.SimpleDateFormat. Any changes will be applied when the
                                    application is restarted.</entry>
                            </row>
                            <row>
                                <entry>STRING_TO_TIMESTAMP_FORMATS</entry>
                                <entry>MM/dd/yyyy hh:mm a</entry>
                                <entry>A semi-colon delimited list of strings representing date
                                    formats that the DateTimeService will use to parse date and
                                    times when DateTimeServiceImpl.convertToDateTime(String) or
                                    DateTimeServiceImpl.convertToSqlTimestamp(String) is called.
                                    Note that patterns will be applied in the order listed (and the
                                    first applicable one will be used). For a more technical
                                    description of how characters in the parameter value will be
                                    interpreted, please consult the Java Documentation for
                                    java.text.SimpleDateFormat. Any changes will be applied when the
                                    application is restarted.</entry>
                            </row>
                            <row>
                                <entry>TIMESTAMP_TO_STRING_FORMAT_FOR_FILE_NAME</entry>
                                <entry>yyyyMMdd-HH-mm-ss-S</entry>
                                <entry>A single date format string that the DateTimeService will use
                                    to format a date and time string to be used in a file name when
                                    DateTimeServiceImpl.toDateTimeStringForFilename(Date) is called.
                                    For a more technical description of how characters in the
                                    parameter value will be interpreted, please consult the Java
                                    Documentation for java.text.SimpleDateFormat. Any changes will
                                    be applied when the application is restarted.</entry>
                            </row>
                            <row>
                                <entry>TIMESTAMP_TO_STRING_FORMAT_FOR_USER_INTERFACE</entry>
                                <entry>MM/dd/yyyy hh:mm a</entry>
                                <entry>A single date format string that the DateTimeService will use
                                    to format a date and time to be displayed on a web page. For a
                                    more technical description of how characters in the parameter
                                    value will be interpreted, please consult the Java Documentation
                                    for java.text.SimpleDateFormat. Any changes will be applied when
                                    the application is restarted.</entry>
                            </row>
                            <row>
                                <entry>ACTIVE_FILE_TYPES</entry>
                                <entry>collectorInputFileType; procurementCardInputFileType;
                                    enterpriseFeederFileSetType; assetBarcodeInventoryInputFileType;
                                    customerLoadInputFileType</entry>
                                <entry>Batch file types that are active options for the file upload
                                    screen.</entry>
                            </row>
                            <row>
                                <entry>SCHEDULE_ADMIN_GROUP</entry>
                                <entry>KR-WKFLW:WorkflowAdmin</entry>
                                <entry>The workgroup to which a user must be assigned to modify
                                    batch jobs.</entry>
                            </row>
                            <row>
                                <entry>DEFAULT_CAN_PERFORM_ROUTE_REPORT_IND</entry>
                                <entry>N</entry>
                                <entry>If Y, the Route Report button will be displayed on the
                                    document actions bar if the document is using the default
                                    DocumentAuthorizerBase.getDocumentActionFlags to set the
                                    canPerformRouteReport property of the returned
                                    DocumentActionFlags instance.</entry>
                            </row>
                            <row>
                                <entry>EXCEPTION_GROUP</entry>
                                <entry>KR-WKFLW:WorkflowAdmin</entry>
                                <entry>The workgroup to which a user must be assigned to perform
                                    actions on documents in exception routing status.</entry>
                            </row>
                            <row>
                                <entry>MAX_FILE_SIZE_ATTACHMENT</entry>
                                <entry>5M</entry>
                                <entry>Maximum attachment uploads size for the application. Used by
                                    KualiDocumentFormBase. Must be an integer, optionally followed
                                    by "K", "M", or "G".</entry>
                            </row>
                            <row>
                                <entry>PESSIMISTIC_LOCK_ADMIN_GROUP</entry>
                                <entry>KFS:KUALI_ROLE_SUPERVISOR</entry>
                                <entry>Workgroup which can perform admin deletion and lookup
                                    functions for Pessimistic Locks.</entry>
                            </row>
                            <row>
                                <entry>SEND_NOTE_WORKFLOW_NOTIFICATION_ACTIONS</entry>
                                <entry>K</entry>
                                <entry>Some documents provide the functionality to send notes to
                                    another user using a workflow FYI or acknowledge functionality.
                                    This parameter specifies the default action that will be used
                                    when sending notes. This parameter should be one of the
                                    following 2 values: "K" for acknowledge or "F" for "fyi".
                                    Depending on the notes and workflow service implementation,
                                    other values may be possible.</entry>
                            </row>
                            <row>
                                <entry>SESSION_TIMEOUT_WARNING_MESSAGE_TIME</entry>
                                <entry>5</entry>
                                <entry>The number of minutes before a session expires. That user
                                    should be warned when a document uses pessimistic
                                    locking.</entry>
                            </row>
                            <row>
                                <entry>SUPERVISOR_GROUP</entry>
                                <entry>KR-WKFLW:WorkflowAdmin</entry>
                                <entry>Workgroup which can perform almost any function within
                                    Kuali.</entry>
                            </row>
                            <row>
                                <entry>MULTIPLE_VALUE_RESULTS_EXPIRATION_SECONDS</entry>
                                <entry>86400</entry>
                                <entry>Lookup results may continue to be persisted in the DB long
                                    after they are needed. This parameter represents the maximum
                                    amount of time, in seconds, that the results will be allowed to
                                    persist in the DB before they are deleted from the DB.</entry>
                            </row>
                            <row>
                                <entry>MULTIPLE_VALUE_RESULTS_PER_PAGE</entry>
                                <entry>100</entry>
                                <entry>Maximum number of rows that will be displayed on a look-up
                                    results screen.</entry>
                            </row>
                            <row>
                                <entry>RESULTS_DEFAULT_MAX_COLUMN_LENGTH</entry>
                                <entry>70</entry>
                                <entry>If a maxLength attribute has not been set on a lookup result
                                    field in the data dictionary, then the result column's max
                                    length will be the value of this parameter. Set this parameter
                                    to 0 for an unlimited default length or a positive value (i.e.
                                    greater than 0) for a finite max length.</entry>
                            </row>
                            <row>
                                <entry>RESULTS_LIMIT</entry>
                                <entry>200</entry>
                                <entry>Maximum number of results returned in a look-up
                                    query.</entry>
                            </row>
                            <row>
                                <entry>MAX_AGE</entry>
                                <entry>86400</entry>
                                <entry>Pending attachments are attachments that do not yet have a
                                    permanent link with the associated Business Object (BO). These
                                    pending attachments are stored in the
                                    attachments.pending.directory (defined in the configuration
                                    service). If the BO is never persisted, then this attachment
                                    will become orphaned (i.e. not associated with any BO), but will
                                    remain in this directory. The PurgePendingAttachmentsStep batch
                                    step deletes these pending attachment files that are older than
                                    the value of this parameter. The unit of this value is seconds.
                                    Do not set this value too short, as this will cause problems
                                    attaching files to BOs.</entry>
                            </row>
                            <row>
                                <entry>NUMBER_OF_DAYS_SINCE_LAST_UPDATE</entry>
                                <entry>1</entry>
                                <entry>Determines the age of the session document records that the
                                    step will operate on, e.g. if this parameter is set to 4, the
                                    rows with a last update timestamp older that 4 days prior to
                                    when the job is running will be deleted.</entry>
                            </row>
                            <row>
                                <entry>CUTOFF_TIME</entry>
                                <entry>02:00:00:AM</entry>
                                <entry>Controls when the daily batch schedule should terminate. The
                                    scheduler service implementation compares the start time of the
                                    schedule job from quartz with this time on day after the
                                    schedule job started running.</entry>
                            </row>
                            <row>
                                <entry>CUTOFF_TIME_NEXT_DAY_IND</entry>
                                <entry>Y</entry>
                                <entry>Controls whether when the system is comparing the schedule
                                    start day &amp; time with the scheduleStep_CUTOFF_TIME
                                    parameter, it considers the specified time to apply to the day
                                    after the schedule starts.</entry>
                            </row>
                            <row>
                                <entry>STATUS_CHECK_INTERVAL</entry>
                                <entry>30000</entry>
                                <entry>Time in milliseconds that the scheduleStep should wait
                                    between iterations.</entry>
                            </row>
                            <row>
                                <entry>ACTION_LIST_DOCUMENT_POPUP_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag to specify if clicking on a Document ID from the Action
                                    List will load the Document in a new window.</entry>
                            </row>
                            <row>
                                <entry>ACTION_LIST_ROUTE_LOG_POPUP_IND</entry>
                                <entry>N</entry>
                                <entry>Flag to specify if clicking on a Route Log from the Action
                                    List will load the Route Log in a new window.</entry>
                            </row>
                            <row>
                                <entry>EMAIL_NOTIFICATION_TEST_ADDRESS</entry>
                                <entry/>
                                <entry>Default email address used for testing.</entry>
                            </row>
                            <row>
                                <entry>HELP_DESK_NAME_GROUP</entry>
                                <entry>KR-WKFLW:WorkflowAdmin</entry>
                                <entry>The name of the group who has access to the "Help Desk"
                                    feature on the Action List.</entry>
                            </row>
                            <row>
                                <entry>PAGE_SIZE_THROTTLE</entry>
                                <entry/>
                                <entry>Throttles the number of results returned on all users Action
                                    Lists, regardless of their user preferences. This is intended to
                                    be used in a situation where excessively large Action Lists are
                                    causing performance issues.</entry>
                            </row>
                            <row>
                                <entry>SEND_EMAIL_NOTIFICATION_IND</entry>
                                <entry>N</entry>
                                <entry>Flag to determine whether or not to send email
                                    notification.</entry>
                            </row>
                            <row>
                                <entry>KIM_PRIORITY_ON_DOC_TYP_PERMS_IND</entry>
                                <entry>N</entry>
                                <entry>Flag for enabling/disabling document type permission checks
                                    to use KIM Permissions as priority over Document Type
                                    policies.</entry>
                            </row>
                            <row>
                                <entry>MAXIMUM_NODES_BEFORE_RUNAWAY</entry>
                                <entry/>
                                <entry>The maximum number of nodes the workflow engine will process
                                    before it determines the process is a runaway process. This is
                                    to prevent infinite "loops" in the workflow engine.</entry>
                            </row>
                            <row>
                                <entry>SHOW_ATTACHMENTS_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag to specify whether or not a file upload box is displayed
                                    for KEW notes which allows for uploading of an attachment with
                                    the note.</entry>
                            </row>
                            <row>
                                <entry>SHOW_BACK_DOOR_LOGIN_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag to show the backdoor login.</entry>
                            </row>
                            <row>
                                <entry>TARGET_FRAME_NAME</entry>
                                <entry>iframe_51148</entry>
                                <entry>Defines the target iframe name that the KEW internal portal
                                    uses for its menu links.</entry>
                            </row>
                            <row>
                                <entry>DOCUMENT_SEARCH_POPUP_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag to specify if clicking on a Document ID from Document
                                    Search will load the Document in a new window.</entry>
                            </row>
                            <row>
                                <entry>DOCUMENT_SEARCH_ROUTE_LOG_POPUP_IND</entry>
                                <entry>N</entry>
                                <entry>Flag to specify if clicking on a Route Log from Document
                                    Search will load the Route Log in a new window.</entry>
                            </row>
                            <row>
                                <entry>FETCH_MORE_ITERATION_LIMIT</entry>
                                <entry/>
                                <entry>Limit of fetch more iteration for document searches.</entry>
                            </row>
                            <row>
                                <entry>RESULT_CAP</entry>
                                <entry/>
                                <entry>Maximum number of documents to return from a search.</entry>
                            </row>
                            <row>
                                <entry>DOCUMENT_TYPE_SEARCH_INSTRUCTION</entry>
                                <entry>Enter document type information below and click
                                    search.</entry>
                                <entry>Instructions for searching document types.</entry>
                            </row>
                            <row>
                                <entry>DEBUG_TRANSFORM_IND</entry>
                                <entry>N</entry>
                                <entry>Defines whether the debug transform is enabled for
                                    eDocLite.</entry>
                            </row>
                            <row>
                                <entry>USE_XSLTC_IND</entry>
                                <entry>N</entry>
                                <entry>Defines whether XSLTC is used for eDocLite.</entry>
                            </row>
                            <row>
                                <entry>IS_LAST_APPROVER_ACTIVATE_FIRST_IND</entry>
                                <entry/>
                                <entry>A flag to specify whether the
                                    WorkflowInfo.isLastApproverAtNode(...) API method attempts to
                                    active requests first, prior to execution.</entry>
                            </row>
                            <row>
                                <entry>REPLACE_INSTRUCTION</entry>
                                <entry>Enter the reviewer to replace.</entry>
                                <entry>Instructions for replacing a reviewer.</entry>
                            </row>
                            <row>
                                <entry>FROM_ADDRESS</entry>
                                <entry>quickstart@localhost</entry>
                                <entry>Default from email address for notifications. If not set,
                                    this value defaults to admin@localhost. </entry>
                            </row>
                            <row>
                                <entry>NOTE_CREATE_NEW_INSTRUCTION</entry>
                                <entry>Create or modify note information.</entry>
                                <entry>Instructions for creating a new note.</entry>
                            </row>
                            <row>
                                <entry>RESTRICT_DOCUMENT_TYPES</entry>
                                <entry/>
                                <entry>Comma separated list of Document Types to exclude from the
                                    Rule Quicklinks.</entry>
                            </row>
                            <row>
                                <entry>CUSTOM_DOCUMENT_TYPES</entry>
                                <entry/>
                                <entry>Defines custom Document Type processes to use for certain
                                    types of routing rules.</entry>
                            </row>
                            <row>
                                <entry>DELEGATE_LIMIT</entry>
                                <entry>20</entry>
                                <entry>Specifies that maximum number of delegation rules that will
                                    be displayed on a Rule inquiry before the screen shows a count
                                    of delegate rules and provides a link for the user to show
                                    them.</entry>
                            </row>
                            <row>
                                <entry>GENERATE_ACTION_REQUESTS_IND</entry>
                                <entry>Y</entry>
                                <entry>Flag to determine whether or not a change to a routing rule
                                    should be applied retroactively to existing documents.</entry>
                            </row>
                            <row>
                                <entry>ROUTE_LOG_POPUP_IND</entry>
                                <entry>F</entry>
                                <entry>Flag to specify if clicking on a Route Log from a Routing
                                    Rule inquiry will load the Route Log in a new window.</entry>
                            </row>
                            <row>
                                <entry>RULE_CACHE_REQUEUE_DELAY</entry>
                                <entry>5000</entry>
                                <entry>Amount of time after a rule change is made before the rule
                                    cache update message is sent.</entry>
                            </row>
                            <row>
                                <entry>RULE_CREATE_NEW_INSTRUCTION</entry>
                                <entry>Please select a rule template and document type.</entry>
                                <entry>Instructions for creating a new rule.</entry>
                            </row>
                            <row>
                                <entry>RULE_LOCKING_ON_IND</entry>
                                <entry>Y</entry>
                                <entry>Defines whether rule locking it enabled.</entry>
                            </row>
                            <row>
                                <entry>RULE_SEARCH_INSTRUCTION</entry>
                                <entry>Use fields below to search for rules.</entry>
                                <entry>Instructions for the rule search.</entry>
                            </row>
                            <row>
                                <entry>RULE_TEMPLATE_CREATE_NEW_INSTRUCTION</entry>
                                <entry>Enter a rule template name and description. Please select all
                                    necessary rule attributes for this template.</entry>
                                <entry>Instructions for creating new rule templates.</entry>
                            </row>
                            <row>
                                <entry>RULE_TEMPLATE_SEARCH_INSTRUCTION</entry>
                                <entry>Use fields below to search for rule templates.</entry>
                                <entry>Instructions for the rule template search.</entry>
                            </row>
                            <row>
                                <entry>NOTIFY_EXCLUDED_USERS_IND</entry>
                                <entry/>
                                <entry><para>Defines a group name (in the format “namespace:name”) which
                                    contains members who should never receive notification action
                                    requests from KEW. Notification requests in KEW are generated
                                    when someone disapproves or blanket approves are exist to notify
                                    other approvers that these actions have taken place. </para> 
                                    <para>The most
                                    common use for this is in the case of “system” users who
                                    participate in workflow transactions. In these cases, since they
                                    aren’t actual users who would be checking their action list, it
                                    doesn’t make sense to send them requests since they won’t ever
                                    be fulfilled.</para> </entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
    </sect1>
    <sect1>
        <title>Defining Workflow Processes Using Document Types</title>
        <para>A Document Type is an object that brings workflow components together into a cohesive
            unit (routing configuration). One of its primary responsibilities is to define the
            routing path for a document. The routing path is the process definition for the
            document. It can consist of various types of nodes that perform certain actions, such as
            sending action requests to responsible parties, transmitting emails, or splitting the
            route path into parallel branches. </para>
        <para>In addition to the routing path, it contains the Post Processor which receives event
            callbacks from the engine, the DocHandler which is the access point into the client
            application from the Action List and Access Control for certain actions. It can also
            define various policies that control how documents of that type are processed by the
            workflow engine. </para>
        <para>This document has four parts:<orderedlist>
                <listitem>
                    <para>A detailed explanation of the common fields in the <emphasis role="bold"
                            >Document Type</emphasis> XML definition </para>
                </listitem>
                <listitem>
                    <para>An example of each Document Type with a description of each field in it
                    </para>
                </listitem>
                <listitem>
                    <para>Descriptions of the Document Type <emphasis role="italic"
                            >policies</emphasis>
                    </para>
                </listitem>
                <listitem>
                    <para>A description of inheritance as applied to Document Types </para>
                </listitem>
            </orderedlist></para>
        <para>There are some common attributes in every <emphasis role="bold">Document
                Type</emphasis>, but each <emphasis role="bold">Document Type</emphasis> can be
            customized to provide different functions.<itemizedlist>
                <listitem>
                    <para>Document Types </para>
                </listitem>
                <listitem>
                    <para>Document Type Policies</para>
                </listitem>
                <listitem>
                    <para>Inheritance </para>
                </listitem>
            </itemizedlist></para>
        <sect2>
            <title>Common Fields in Document Type XML Definition</title>
            <para>
                <table frame="none">
                    <title>Common Fields in Document Type XML Definition</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Field</entry>
                                <entry>Description</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>name</entry>
                                <entry>The name of the Document Type</entry>
                            </row>
                            <row>
                                <entry>parent</entry>
                                <entry>The parent Document Type of this Document Type. Each Child
                                    Document Type inherits the attributes of its parent Document
                                    Type.</entry>
                            </row>
                            <row>
                                <entry>description</entry>
                                <entry>The description of the Document Type; its primary
                                    responsibilities.</entry>
                            </row>
                            <row>
                                <entry>label</entry>
                                <entry>The label of the Document Type, how it’s recognized</entry>
                            </row>
                            <row>
                                <entry>postProcessorName</entry>
                                <entry>The name of the postProcessor that takes charge of the
                                    routing for this Document Type</entry>
                            </row>
                            <row>
                                <entry>postprocessor</entry>
                                <entry>A component that gets called throughout the routing process
                                    and handles a set of standard events that all eDocs (electronic
                                    documents) go through.</entry>
                            </row>
                            <row>
                                <entry>superUserGroupName</entry>
                                <entry>The name of a workgroup whose members are the super users of
                                    this Document Type. Super users of this Document Type can
                                    execute a super user document search on this Document
                                    Type.</entry>
                            </row>
                            <row>
                                <entry>blanketApproveGroupName</entry>
                                <entry>The name of a workgroup whose members have the blanketapprove
                                    rights over this Document Type.</entry>
                            </row>
                            <row>
                                <entry>defaultExceptionGroupName</entry>
                                <entry>The name of the workgroup whose members receive an exception
                                    notice when a document of this Document Type encounters an
                                    exception in its routing.</entry>
                            </row>
                            <row>
                                <entry>docHandler</entry>
                                <entry>The DocHandler that handles the routing of this Document
                                    Type</entry>
                            </row>
                            <row>
                                <entry>active</entry>
                                <entry>A true or false indicator for the active status of this
                                    document</entry>
                            </row>
                            <row>
                                <entry>policies</entry>
                                <entry>The policies that apply to this Document Type</entry>
                            </row>
                            <row>
                                <entry>policy</entry>
                                <entry><para>The policy that applies to this Document Type. Use this when
                                    there is only one policy for the Document Type. </para>
                                    <para><emphasis role="bold">value</emphasis>: A true or false
                                        indicator for whether the action for the policy will be
                                        taken</para>
                                </entry>
                            </row>
                            <row>
                                <entry>routingVersion</entry>
                                <entry><para><emphasis role="italic">This field exists only for backward
                                        compatibility with older versions of KEW.</emphasis>
                                    Originally, KEW only supported sequential routing paths (as
                                    opposed to those with splits and joins). The KEW <emphasis
                                        role="bold">getDocRouteLevel()</emphasis> API returns an
                                    integer that represents the numerical step in the routing
                                    process. This number only has meaning for those documents that
                                    define sequential routing.
                                    <itemizedlist>
                                        <listitem>
                                                <para>A document with a routingVersion of "1" will
                                                  keep track of the route level number.</para>
                                            </listitem>
                                            <listitem>
                                                <para> A document with a routingVersion of "2" (the
                                                  default, unless explicitly defined in the Document
                                                  Type configuration) will <emphasis role="italic"
                                                  >NOT</emphasis> keep track of the route level
                                                  number and an exception will be thrown if code
                                                  attempts to access that value. <emphasis
                                                  role="italic">New Document Type definitions do NOT
                                                  need, and should NOT have, this flag defined.
                                                  </emphasis></para>
                                            </listitem>        
                                    </itemizedlist></para></entry>
                            </row>
                            <row>
                                <entry>routePaths</entry>
                                <entry>The routing paths for this Document Type</entry>
                            </row>
                            <row>
                                <entry>routePath</entry>
                                <entry>The routing path for this Document Type. Use this field when
                                    there is just one routing path for this Document Type.</entry>
                            </row>
                            <row>
                                <entry>routeNode</entry>
                                <entry>A point or node on the routing path of this Document
                                    Type</entry>
                            </row>
                            <row>
                                <entry>routeModule</entry>
                                <entry>The most basic module; it allows KEW to generate Action
                                    Requests</entry>
                            </row>
                            <row>
                                <entry>start</entry>
                                <entry>The starting node of this Document Type during
                                    routing</entry>
                            </row>
                            <row>
                                <entry>requests</entry>
                                <entry>The requested next node in the routing of this Document
                                    Type</entry>
                            </row>
                            <row>
                                <entry>activationType</entry>
                                <entry><para>The activation type of the next node that is requested by
                                this Document Type. There are two activation types:</para>
                                    <itemizedlist>
                                        <listitem><para><emphasis role="bold">P</emphasis>: Parallel:
                                            Multiple nodes in the routing process are activated at
                                            the same time</para></listitem>
                                        <listitem><para><emphasis role="bold">S</emphasis>: Serial or
                                            Sequential: The nodes in the routing process are
                                            activated one at a time</para>
                                        </listitem>
                                    </itemizedlist></entry>
                            </row>
                            <row>
                                <entry>ruleTemplate</entry>
                                <entry>The ruleTemplate that applies to the routing node in this
                                    Document Type</entry>
                            </row>
                            <row>
                                <entry>split</entry>
                                <entry>The routing path splits into branches and can continue on any
                                    of them at a split.</entry>
                            </row>
                            <row>
                                <entry>branch</entry>
                                <entry>One of the branches in the routing path.</entry>
                            </row>
                            <row>
                                <entry>join</entry>
                                <entry>The point in the routing path where the split branches join
                                    together.</entry>
                            </row>
                            <row>
                                <entry>process</entry>
                                <entry>There is a sub-process in the routing path; in other words,
                                    some nodes in the routing path will activate a
                                    sub-process.</entry>
                            </row>
                            <row>
                                <entry>simple</entry>
                                <entry><para>A new node in the routing path</para> 
                                    <itemizedlist>
                                        <listitem><para><emphasis role="bold">type</emphasis>: The type of the new routing node</para></listitem>
                                        <listitem><para><emphasis role="bold">value</emphasis>: The value
                                            of the new routing node</para></listitem>
                                        <listitem><para><emphasis role="bold">message</emphasis>: The
                                            message associated with the new routing node</para></listitem>
                                        <listitem><para><emphasis role="bold">level</emphasis>: The
                                            routing level of the new routing node</para></listitem>
                                        <listitem><para><emphasis role="bold">log</emphasis>: The log name
                                        of the new routing node</para></listitem>
                                    </itemizedlist>
                                </entry>
                            </row>
                            <row>
                                <entry>dynamic</entry>
                                <entry>This changes the node to dynamic when it transitions to the
                                    next node in the routing path; therefore, the routing path is
                                    dynamic rather than static.</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>Document Types</title>
            <sect3>
                <title>Document Type Examples</title>
                <para><emphasis role="bold">BlanketApproveTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>BlanketApproveTest&lt;/name>
    &lt;description>BlanketApproveTest&lt;/description>
    &lt;label>BlanketApproveTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;policies>
        &lt;policy>
            &lt;name>DEFAULT_APPROVE&lt;/name>
            &lt;value>false&lt;/value>
        &lt;/policy>
    &lt;/policies>

&lt;/documentType> 
</programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Blanket Approve Test. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the Blanket Approve function. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the BlanketApproveTest type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is
                                org.kuali.rice.kew.postprocessor.DefaultPostProcessor. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the TestWorkgroup.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is _blank. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently Active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Policies</emphasis> for this Document Type
                                contains two policies: The DEFAULT_APPROVE policy is set false by
                                default. In other words, the default approve action on this type of
                                document is NOT to approve it. </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><emphasis role="bold">BlanketApproveSequentialTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>BlanketApproveSequentialTest&lt;/name>
    &lt;parent>BlanketApproveTest&lt;/parent>
    &lt;description>BlanketApproveSequentialTest&lt;/description>
    &lt;label>BlanketApproveSequentialTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW”>WorkflowAdmin&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”>WorkflowAdmin&lt;/defaultExceptionGroupName>

    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" nextNode="WorkflowDocument2" />
            &lt;requests name="WorkflowDocument2" nextNode="Acknowledge1" />
            &lt;requests name="Acknowledge1" nextNode="Acknowledge2" />
            &lt;requests name="Acknowledge2" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument2Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge1">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack1Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack2Template&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType> 
</programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Blanket Approve Sequential Test. There is a sequence of routing
                                nodes, and no routing node can be skipped. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">parent</emphasis>: The parent Document Type
                                is BlanketApproveTest. This Document Type inherits the policies that
                                BlanketApproveTest has. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the Blanket Approve Sequential function. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the blanketApproveSequentialTest type.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is
                                org.kuali.rice.kew.postprocessor.DefaultPostProcessor. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the WorkflowAdmin.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApprove right on this type
                                of document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the WorkflowAdmin will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is _blank. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routePath</emphasis>: The routing path for
                                this Document Type is: AdHoc -> WorkflowDocument ->
                                WorkflowDocument2 -> Acknowledge1 -> Acknowledge2. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routeNode</emphasis>: Based on the
                                routePath, there are five nodes in the routing of this Document
                                Type: <itemizedlist>
                                    <listitem>
                                        <para>The starting node for this Document Type is AdHoc. On
                                            the initiation of a document of this type, the
                                            postProcessor in Kuali Enterprise Workflow (KEW)
                                            activates the node, AdHoc. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                            WorkflowDocument. On request, the node is activated and
                                            applies the rules in rule template,
                                            WorkflowDocumentTemplate. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                            WorkflowDocument2. On request, the node is activated and
                                            applies the rules in rule template,
                                            WorkflowDocument2Template. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                            Acknowledge1. On request, the node is activated and
                                            applies the rules in rule template, Ack1Template.
                                        </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                            Acknowledge2. On request, the node is activated and
                                            applies the rules in rule template, Ack2Template.
                                        </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    <figure><title>BlanketApproveSequentialTest Workflow</title>
                        <mediaobject>
                            <imageobject>
                                <imagedata fileref="../images/BlanketApproveSequentialTest.png"/>
                            </imageobject>
                    </mediaobject>
                    </figure>
                </para>
                <para><emphasis role="bold">BlanketApproveParallelTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>BlanketApproveParallelTest&lt;/name>
    &lt;parent>BlanketApproveTest&lt;/parent>
    &lt;description>BlanketApproveParallelTest&lt;/description>
    &lt;label>BlanketApproveParallelTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" nextNode="Split" />
            &lt;split name="Split" nextNode="WorkflowDocumentFinal">
                &lt;branch name="B1">
                    &lt;requests name="WorkflowDocument2-B1" nextNode="WorkflowDocument3-B1" />
                    &lt;requests name="WorkflowDocument3-B1" nextNode="Join" />
                &lt;/branch>
                &lt;branch name="B2">
                    &lt;requests name="WorkflowDocument3-B2" nextNode="WorkflowDocument2-B2" />
                    &lt;requests name="WorkflowDocument2-B2" nextNode="Join" />
                &lt;/branch>
                &lt;branch name="B3">
                    &lt;requests name="WorkflowDocument4-B3" nextNode="Join" />
                &lt;/branch>
                &lt;join name="Join" />
            &lt;/split>
            &lt;requests name="WorkflowDocumentFinal" nextNode="Acknowledge1" />
            &lt;requests name="Acknowledge1" nextNode="Acknowledge2" />
            &lt;requests name="Acknowledge2" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;split name="Split" />
        &lt;requests name="WorkflowDocument2-B1">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument2Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument2-B2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument2Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument3-B1">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument3Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument3-B2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument3Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument4-B3">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument4Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;join name="Join" />
        &lt;requests name="WorkflowDocumentFinal">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentFinalTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge1">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack1Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack2Template&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType> 
</programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Blanket Approve Parallel Test. At some point in the routing, the
                                route path may split and a node can be skipped if another parallel
                                node takes action on the document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Parent</emphasis>: The parent Document Type
                                is BlanketApproveTest. This Document Type inherits the routing that
                                exists for BlanketApproveTest. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the Blanket Approve Parallel function. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the blanketApproveParallelTest type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is <emphasis role="italic"
                                    >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the TestWorkgroup.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is <emphasis role="italic">_blank</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routePath</emphasis>: The routing path for
                                this Document Type is: AdHoc -> WorkflowDocument -> split ->
                                B1\B2\B3 -> Join -> WorkflowDocumentFinal -> Acknowledge1 ->
                                Acknowledge2.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routeNode</emphasis>: Based on the
                                routePath, there are six nodes in the routing of this Document Type: <itemizedlist>
                                    <listitem>
                                        <para>The starting node for this Document Type is <emphasis
                                                role="bold">AdHoc</emphasis>. On the initiation of a
                                            document of this type, the postProcessor in KEW
                                            activates the node, <emphasis role="bold"
                                                >AdHoc</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">WorkflowDocument</emphasis>.
                                            On request, the node is activated and applies the rules
                                            in rule template, <emphasis role="bold"
                                                >WorkflowDocumentTemplate</emphasis>. Then, the
                                            routing path splits into three branches for the next
                                            node. <itemizedlist>
                                                <listitem>
                                                  <para>One branch is B1. On request, the node
                                                  <emphasis role="bold"
                                                  >WorkflowDocument2-B1</emphasis> is activated and
                                                  applies the <emphasis role="bold"
                                                  >WorkflowDocument2Template</emphasis>. The next
                                                  node in this branch is <emphasis role="bold"
                                                  >WorkflowDocument3-B1</emphasis>. On request, the
                                                  node is activated and applies the <emphasis
                                                  role="bold">WorkflowDocument3Template</emphasis>.
                                                  </para>
                                                </listitem>
                                                <listitem>
                                                  <para>One branch is B2. On request, the node
                                                  <emphasis role="bold"
                                                  >WorkflowDocument3-B2</emphasis> is activated and
                                                  applies the <emphasis role="bold"
                                                  >WorkflowDocument3Template</emphasis>. The next
                                                  node in this branch is <emphasis role="bold"
                                                  >WorkflowDocument2-B2</emphasis>. On request, the
                                                  node is activated and applies the <emphasis
                                                  role="bold">WorkflowDocument2Template</emphasis>.
                                                  </para>
                                                </listitem>
                                                <listitem>
                                                  <para>One branch is B3. On request, the node
                                                  <emphasis role="bold"
                                                  >WorkflowDocument4-B3</emphasis> is activated and
                                                  applies the <emphasis role="bold"
                                                  >WorkflowDocument4Template</emphasis>. </para>
                                                </listitem>
                                            </itemizedlist></para>
                                    </listitem>
                                    <listitem>
                                        <para>Then, the routing path joins and the route merges back
                                            together into one route. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold"
                                                >WorkflowDocumentFinal</emphasis>. On request, the
                                            node is activated and applies the rules in rule
                                            template, <emphasis role="bold"
                                                >WorkflowDocumentFinalTemplate</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">Acknowledge1</emphasis>. On
                                            request, the node is activated and applies the rules in
                                            rule template, <emphasis role="bold"
                                                >Ack1Template</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">Acknowledge2</emphasis>. On
                                            request, the node is activated and applies the rules in
                                            rule template, <emphasis role="bold"
                                                >Ack2Template</emphasis>. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    <figure><title>BlanketApproveParallelTest Workflow</title>
                        <mediaobject>
                            <imageobject>
                                <imagedata fileref="../images/BlanketApproveParallelTest.png"/>
                            </imageobject>
                        </mediaobject>
                        </figure>
                </para>
                <para><emphasis role="bold">NotificationTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>NotificationTest&lt;/name>
    &lt;description>NotificationTest&lt;/description>
    &lt;label>NotificationTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="NotifyFirst" />
            &lt;requests name="NotifyFirst" nextNode="Split" />
            &lt;split name="Split" nextNode="NotifyFinal">
                &lt;branch name="LeftBranch">
                    &lt;requests name="NotifyLeftBranch" nextNode="Join" />
                &lt;/branch>
                &lt;branch name="RightBranch">
                    &lt;requests name="NotifyRightBranch" nextNode="Join" />
                &lt;/branch>
                &lt;join name="Join" />
            &lt;/split>
            &lt;requests name="NotifyFinal" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="NotifyFirst">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>NotifyFirstTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;split name="Split" />
        &lt;requests name="NotifyLeftBranch">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>NotifyLeftBranchTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="NotifyRightBranch">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>NotifyRightBranchTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;join name="Join" />
        &lt;requests name="NotifyFinal">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>NotifyFinalTemplate&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType> 
</programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Notification Test. At some point in the routing, the route path
                                may split, and a node can be skipped if another notification node
                                takes action on the document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the notification function. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the NotificationTest type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is <emphasis role="bold"
                                    >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the TestWorkgroup.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is <emphasis role="bold">_blank</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routePath</emphasis>: The routing path for
                                this Document Type is: AdHoc -> NotifyFirst -> split ->
                                LeftBranch\RightBranch -> Join -> NotifyFinal. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routeNode</emphasis>: Based on the
                                routePath, there are four nodes in the routing of this Document
                                Type: <itemizedlist>
                                    <listitem>
                                        <para>o The starting node for this Document Type is
                                                <emphasis role="bold">AdHoc</emphasis>. On the
                                            initiation of a document of this type, the postProcessor
                                            in KEW activates the node, <emphasis role="bold"
                                                >AdHoc</emphasis>.</para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">NotifyFirst</emphasis>. On
                                            request, the node is activated and applies the rules in
                                            rule template, <emphasis role="bold"
                                                >NotifyFirstTemplate</emphasis>. Then the routing
                                            path splits into two branches for the next node. <itemizedlist>
                                                <listitem>
                                                  <para>One branch is <emphasis role="bold"
                                                  >LeftBranch</emphasis>. On request, the node is
                                                  activated and applies the <emphasis role="bold"
                                                  >NotifyLeftBranchTemplate</emphasis>. </para>
                                                </listitem>
                                                <listitem>
                                                  <para>One branch is <emphasis role="bold"
                                                  >RightBranch</emphasis>. On request, the node is
                                                  activated and applies the <emphasis role="bold"
                                                  >NotifyRightBranchTemplate</emphasis>. </para>
                                                </listitem>
                                            </itemizedlist></para>
                                    </listitem>
                                    <listitem>
                                        <para>Then the routing path joins together again. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">NotifyFinal</emphasis>. On
                                            request, the node is activated and applies the rules in
                                            rule template, <emphasis role="bold"
                                                >NotifyFinalTemplate</emphasis>
                                        </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    <figure><title>NotificationTest Workflow</title>
                        <mediaobject>
                            <imageobject>
                                <imagedata fileref="../images/NotificationTest.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </para>
                <para><emphasis role="bold">NotificationTestChild</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>NotificationTestChild&lt;/name>
    &lt;parent>NotificationTest&lt;/parent>
    &lt;description>NotificationTest&lt;/description>
    &lt;label>NotificationTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;policies>
        &lt;policy>
            &lt;name>SEND_NOTIFICATION_ON_SU_APPROVE&lt;/name>
            &lt;value>true&lt;/value>
        &lt;/policy>
    &lt;/policies>
&lt;/documentType></programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Notification Test Child. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Parent</emphasis>: The parent Document Type
                                is NotificationTest. This Document Type inherits the routing that
                                NotificationTest has. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the Notification function. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the NotificationTest type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is <emphasis role="bold"
                                    >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the TestWorkgroup.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is <emphasis role="bold">_blank</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Policy</emphasis>: There is only one policy
                                that applies to this Document Type: SEND_NOTIFICATION_ON_SU_APPROVE.
                                This policy currently applies to this Document Type. In other words,
                                a notification will be sent to the designated two users when a
                                SuperUser approves a document of this type. </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><emphasis role="bold">BlanketApproveMandatoryNodeTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>BlanketApproveMandatoryNodeTest&lt;/name>
    &lt;parent>BlanketApproveTest&lt;/parent>
    &lt;description>BlanketApproveMandatoryNodeTest&lt;/description>
    &lt;label>BlanketApproveMandatoryNodeTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" nextNode="WorkflowDocument2" />
            &lt;requests name="WorkflowDocument2" nextNode="Acknowledge1" />
            &lt;requests name="Acknowledge1" nextNode="Acknowledge2" />
            &lt;requests name="Acknowledge2" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
            &lt;mandatoryRoute>true&lt;/mandatoryRoute>
        &lt;/requests>
        &lt;requests name="WorkflowDocument2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument2Template&lt;/ruleTemplate>
            &lt;mandatoryRoute>true&lt;/mandatoryRoute>
            &lt;finalApproval>true&lt;/finalApproval>
        &lt;/requests>
        &lt;requests name="Acknowledge1">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack1Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack2Template&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType> </programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Blanket Approve Mandatory Node Test. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Parent</emphasis>: The parent Document Type
                                is BlanketApproveTest. This Document Type inherits the policies that
                                NotificationTest has. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the Blanket Approve Mandatory Node. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the BlanketApproveMandatoryNodeTest type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is <emphasis role="bold"
                                    >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the TestWorkgroup.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document.  </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is _blank. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routePath</emphasis>: The routing path for
                                this Document Type is: AdHoc -> WorkflowDocument ->
                                WorkflowDocument2 -> Acknowledge1 -> Acknowledge2. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routeNode</emphasis>: Based on the
                                routePath, there are five nodes in the routing of this Document
                                Type: <itemizedlist>
                                    <listitem>
                                        <para>The starting node for this Document Type is <emphasis
                                                role="bold">AdHoc</emphasis>. On the initiation of a
                                            document of this type, the postProcessor in KEW
                                            activates the node <emphasis role="bold"
                                                >AdHoc</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">WorkflowDocument</emphasis>.
                                            On request, the node is activated, applies the rules in
                                            rule template, <emphasis role="bold"
                                                >WorkflowDocumentTemplate</emphasis>, and sets the
                                            mandatory route as true. In other words, the document
                                            must route through this node. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">WorkflowDocument2</emphasis>.
                                            On request, the node is activated, applies the rules in
                                            rule template, <emphasis role="bold"
                                                >WorkflowDocument2Template</emphasis>, and sets the
                                            mandatory route as <emphasis role="bold"
                                            >true</emphasis>. In other words, the document must
                                            route through this node. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">Acknowledge1</emphasis>. On
                                            request, the node is activated and applies the rules in
                                            rule template, <emphasis role="bold"
                                                >Ack1Template</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">Acknowledge2</emphasis>. On
                                            request, the node is activated and applies the rules in
                                            rule template, <emphasis role="bold"
                                                >Ack2Template</emphasis>. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <figure><title>Blankte Approve Mandatory Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata
                                fileref="../images/BlanketApproveMandatoryNodeTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">SaveActionEventTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>SaveActionEventTest&lt;/name>
    &lt;description>SaveActionEventTest&lt;/description>
    &lt;label>SaveActionEventTest&lt;/label>		&lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;policies>
        &lt;policy>
            &lt;name>DEFAULT_APPROVE&lt;/name>
            &lt;value>false&lt;/value>
        &lt;/policy>
    &lt;/policies>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType> </programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Save Action Event Test. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the Blanket Approve Mandatory Node. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the SaveActionEventTest type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is <emphasis role="bold"
                                    >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: The super
                                users for this Document Type are members of the TestWorkgroup.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is <emphasis role="bold">_blank</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Policies</emphasis> for this Document Type:
                                The DEFAULT_APPROVE policy is set <emphasis role="bold"
                                    >false</emphasis> by default. In other words, the default
                                approve action on this type of document is NOT to approve it.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routePath</emphasis>: The routing path for
                                this Document Type is: AdHoc -> WorkflowDocument. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routeNode</emphasis>: Based on the
                                routePath, there are two nodes in the routing of this Document Type: <itemizedlist>
                                    <listitem>
                                        <para>The starting node for this Document Type is <emphasis
                                                role="bold">AdHoc</emphasis>. On the initiation of a
                                            document of this type, the postProcessor in KEW
                                            activates the node <emphasis role="bold"
                                                >AdHoc</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">WorkflowDocument</emphasis>.
                                            On request, the node is activated and applies the rules
                                            in rule template <emphasis role="bold"
                                                >WorkflowDocumentTemplate</emphasis>. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <figure><title>Save Action Event Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/SaveActionEventTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">SaveActionEventTestNonInitiator</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>SaveActionEventTestNonInitiator&lt;/name>
    &lt;description>SaveActionEventTest With No Initiator Only Save Required&lt;/description>
    &lt;label>SaveActionEventTestNonInitiator&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;policies>
        &lt;policy>
            &lt;name>DEFAULT_APPROVE&lt;/name>
            &lt;value>false&lt;/value>
        &lt;/policy>
        &lt;policy>
            &lt;name>INITIATOR_MUST_SAVE&lt;/name>
            &lt;value>false&lt;/value>
        &lt;/policy>
    &lt;/policies>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType></programlisting>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">name</emphasis>: This is the Document Type
                                for Save Action Event Test Non Initiator. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">description</emphasis>: This Document Type
                                is used to test the saving of an action event by non-initiator.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">label</emphasis>: This Document Type is
                                recognized as the SaveActionEventTestNonInitiator type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">postProcessorName</emphasis>: The
                                postProcessor for this Document Type is <emphasis role="bold"
                                    >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para>
                                <emphasis role="bold">superUserGroupName</emphasis>: The super users
                                for this Document Type are members of the TestWorkgroup. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The
                                members of the TestWorkgroup have blanketApproval right on this type
                                of document.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                                members of the TestWorkgroup will receive an exception notice for
                                documents of this Document Type. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for
                                this type of document is <emphasis role="bold">_blank</emphasis>.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">active</emphasis>: This Document Type is
                                currently active. In other words, it is in use. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Policies</emphasis> for this Document Type: <itemizedlist>
                                    <listitem>
                                        <para>The DEFAULT_APPROVE policy is set <emphasis
                                                role="bold">false</emphasis> by default. In other
                                            words, the default approve action on this type of
                                            document is NOT to approve it. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The INITIATOR_MUST_SAVE policy is set <emphasis
                                                role="bold">false</emphasis> by default. In other
                                            words, the initiator does NOT have to save the document
                                            for the non-initiator to save the actions on it. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routePath</emphasis>: The routing path for
                                this Document Type is: AdHoc -> WorkflowDocument. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">routeNode</emphasis>: Based on the
                                routePath, there are two nodes in the routing of this Document Type: <itemizedlist>
                                    <listitem>
                                        <para>The starting node for this Document Type is <emphasis
                                                role="bold">AdHoc</emphasis>. On the initiation of a
                                            document of this type, the postProcessor in KEW
                                            activates the node <emphasis role="bold"
                                                >AdHoc</emphasis>. </para>
                                    </listitem>
                                    <listitem>
                                        <para>The next node in the routing for this Document Type is
                                                <emphasis role="bold">WorkflowDocument</emphasis>.
                                            On request, the node is activated and applies the rules
                                            in rule template, <emphasis role="bold"
                                                >WorkflowDocumentTemplate</emphasis>. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                </para>
                <figure><title>Save Action Even Test: Non-Initiator</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata
                                fileref="../images/SaveActionEventTestNonInitiator_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">TakeWorkgroupAuthorityDoc</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>TakeWorkgroupAuthorityDoc&lt;/name>
    &lt;description>TakeWorkgroupAuthority Action Test&lt;/description>
    &lt;label>TakeWorkgroupAuthorityDoc&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;policies>
        &lt;policy>
            &lt;name>DEFAULT_APPROVE&lt;/name>
            &lt;value>false&lt;/value>
        &lt;/policy>
    &lt;/policies>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkgroupByDocument" />
            &lt;requests name="WorkgroupByDocument" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkgroupByDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkgroupByDocument&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType> 
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            Take Workgroup Authority Doc. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to decide authorized workgroups by Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as the TakeWorkgroupAuthorityDoc type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: The postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for this
                            type of document is <emphasis role="bold">_blank</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Policies</emphasis> for this Document Type: The
                            DEFAULT_APPROVE policy is set <emphasis role="bold">false</emphasis> by
                            default. In other words, the default approve action on this type of
                            document is NOT to approve it. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routePath</emphasis>: The routing path for this
                            Document Type is: AdHoc -> WorkflowDocument. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routeNode</emphasis>: Based on the routePath,
                            there are two nodes in the routing of this Document Type: <itemizedlist>
                                <listitem>
                                    <para>The starting node for this Document Type is <emphasis
                                            role="bold">AdHoc</emphasis>. On the initiation of a
                                        document of this type, the postProcessor in KEW activates
                                        the node <emphasis role="bold">AdHoc</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">WorkflowDocument</emphasis>. On
                                        request, the node is activated and applies the rules in rule
                                        template, <emphasis role="bold"
                                            >WorkflowDocumentTemplate</emphasis>. </para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </itemizedlist>
                <figure><title>Take Workgroup Authority</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/TakeWorkgroupAuthorityDoc_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">MoveSequentialTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>MoveSequentialTest&lt;/name>
    &lt;parent>BlanketApproveTest&lt;/parent>
    &lt;description>Move Sequential Test&lt;/description>
    &lt;label>Move Sequential Test&lt;/label>

    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" nextNode="WorkflowDocument2" />
            &lt;requests name="WorkflowDocument2" nextNode="Acknowledge1" />
            &lt;requests name="Acknowledge1" nextNode="Acknowledge2" />
            &lt;requests name="Acknowledge2" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument2Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge1">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack1Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="Acknowledge2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>Ack2Template&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType>
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            Move Sequential Test. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Parent</emphasis>: The parent Document Type is
                            BlanketApproveTest. This Document Type inherits the policies that
                            BlanketApproveTest has. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to test Move Sequence. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as MoveSequentialTest type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: The postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for this
                            type of document is <emphasis role="bold">_blank</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routePath</emphasis>: The routing path for this
                            Document Type is: AdHoc -> WorkflowDocument -> WorkflowDocument2 ->
                            Acknowledge1 -> Acknowledge2. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routeNode</emphasis>: Based on the routePath,
                            there are five nodes in the routing of this Document Type: <itemizedlist>
                                <listitem>
                                    <para>The starting node for this Document Type is <emphasis
                                            role="bold">AdHoc</emphasis>. On the initiation of a
                                        document of this type, the postProcessor in KEW activates
                                        the node <emphasis role="bold">AdHoc</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">WorkflowDocument</emphasis>. On
                                        request, the node is activated, applies the rules in rule
                                        template, <emphasis role="bold"
                                            >WorkflowDocumentTemplate</emphasis>, and sets the
                                        mandatory route as <emphasis role="bold">true</emphasis>. In
                                        other words, the document must route through this node.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">WorkflowDocument2</emphasis>. On
                                        request, the node is activated, applies the rules in rule
                                        template, <emphasis role="bold"
                                            >WorkflowDocument2Template</emphasis>, and sets the
                                        mandatory route as <emphasis role="bold">true</emphasis>. In
                                        other words, the document must route through this node.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">Acknowledge1</emphasis>. On
                                        request, the node is activated and applies the rules in rule
                                        template, <emphasis role="bold">Ack1Template</emphasis>.
                                    </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">Acknowledge2</emphasis>. On
                                        request, the node is activated and applies the rules in rule
                                        template, <emphasis role="bold">Ack2Template</emphasis>.
                                    </para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </itemizedlist>
                <figure><title>Move Sequential Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/MoveSequentialTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">MoveInProcessTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>MoveInProcessTest&lt;/name>
    &lt;parent>BlanketApproveTest&lt;/parent>
    &lt;description>Move In Process Test&lt;/description>
    &lt;label>Move In Process Test&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="WorkflowDocument" />
            &lt;requests name="WorkflowDocument" nextNode="MyRadSubProcess" />
            &lt;process name="MyRadSubProcess" nextNode="WorkflowDocumentFinal" />
            &lt;requests name="WorkflowDocumentFinal" />
        &lt;/routePath>
        &lt;routePath processName="MyRadSubProcess" initialNode="WorkflowDocument2">
            &lt;requests name="WorkflowDocument2" nextNode="WorkflowDocument3" />
            &lt;requests name="WorkflowDocument3" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="WorkflowDocument">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;process name="MyRadSubProcess" />
        &lt;requests name="WorkflowDocument2">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument2Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocument3">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocument3Template&lt;/ruleTemplate>
        &lt;/requests>
        &lt;requests name="WorkflowDocumentFinal">
            &lt;activationType>P&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentFinalTemplate&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType>
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            Move In Process Test. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Parent</emphasis>: The parent Document Type for
                            this Document Type is BlanketApproveTest. This Document Type inherits
                            the policies that BlanketApproveTest has. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to test Move In Process. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as the MoveInProcessTest type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: The postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for this
                            type of document is <emphasis role="bold">_blank</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routePath</emphasis>: The routing path for this
                            Document Type is: AdHoc -> WorkflowDocument -> MyRadSub Process ->
                            WorkflowDocument2 -> WorkflowDocument3 -> WorkflowDocumentFinal. There
                            is a sub-process MyRadSubProcess in this path. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routeNode</emphasis>: As can be seen from the
                            routePath, there are five nodes in the routing of this Document Type: <itemizedlist>
                                <listitem>
                                    <para>The starting node for this Document Type is <emphasis
                                            role="bold">AdHoc</emphasis>. On the initiation of a
                                        document of this type, the postProcessor in KEW activates
                                        the node <emphasis role="bold">AdHoc</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">WorkflowDocument</emphasis>. On
                                        request, the node is activated, applies the rules in rule
                                        template, <emphasis role="bold"
                                            >WorkflowDocumentTemplate</emphasis>, and initiates a
                                        sub process MyRadSubProcess. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in MyRadSubProcess for this Document Type is
                                            <emphasis role="bold">WorkflowDocument2</emphasis>. On
                                        request, the node is activated and applies the rules in rule
                                        template, <emphasis role="bold"
                                            >WorkflowDocument2Template</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in MyRadSubProcess for this Document Type is
                                            <emphasis role="bold">WorkflowDocument3</emphasis>. O
                                        the request, the node is activated and applies the rules in
                                        rule template, <emphasis role="bold"
                                            >WorkflowDocument3Template</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">WorkflowDocumentFinal</emphasis>.
                                        On request, the node is activated and applies the rules in
                                        rule template <emphasis role="bold"
                                            >WorkflowDocumentFinalTemplate</emphasis>. </para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </itemizedlist>
                <figure><title>Move In Process Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/MoveInProcessTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">AdhocRouteTest</emphasis></para>
                <programlisting>&lt;documentType>
	&lt;name>AdhocRouteTest&lt;/name>
	&lt;description>AdhocRouteTest&lt;/description>
	&lt;label>AdhocRouteTest&lt;/label>

	&lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
	&lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
	&lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
	&lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
	&lt;docHandler>_blank&lt;/docHandler>
	&lt;active>true&lt;/active>
	&lt;routePaths>
		&lt;routePath>
			&lt;start name="AdHoc" nextNode="One" />
			&lt;requests name="One" />
		&lt;/routePath>
	&lt;/routePaths>
	&lt;routeNodes>
		&lt;start name="AdHoc">
			&lt;activationType>P&lt;/activationType>
		&lt;/start>
		&lt;requests name="One">
			&lt;activationType>S&lt;/activationType>
			&lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
		&lt;/requests>
	&lt;/routeNodes>
&lt;/documentType>
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            Adhoc Route Test. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to test Ad Hoc Route. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as the AdhocRouteTest type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: the postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for this
                            type of document is <emphasis role="bold">_blank</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routePath</emphasis>: The routing path for this
                            Document Type is: AdHoc -> One. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routeNode</emphasis>: Based on the routePath,
                            there are two nodes in the routing of this Document Type: <itemizedlist>
                                <listitem>
                                    <para>The starting node for this Document Type is <emphasis
                                            role="bold">AdHoc</emphasis>. On the initiation of a
                                        document of this type, the postProcessor in KEW activates
                                        the node <emphasis role="bold">AdHoc</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">One</emphasis>. On request, the
                                        node is activated by the type <emphasis role="bold"
                                            >S</emphasis> and applies the rules in rule template,
                                            <emphasis role="bold"
                                            >WorkflowDocumentTemplate</emphasis>. </para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </itemizedlist>
                <figure><title>Adhoc Route Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/AdhocRouteTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">PreApprovalTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>PreApprovalTest&lt;/name>
    &lt;description>PreApprovalTest&lt;/description>
    &lt;label>PreApprovalTest&lt;/label>
    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="PreApprovalTestOne" />
            &lt;requests name="PreApprovalTestOne" />
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;requests name="PreApprovalTestOne">
            &lt;activationType>S&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
    &lt;/routeNodes>
&lt;/documentType>
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            PreApprovalTest. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to test Pre-Approval. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as the PreApprovalTest type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: The postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. • docHandler: The Doc Handler for this
                            type of document is <emphasis role="bold">_blank</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routePath</emphasis>: The routing path for this
                            Document Type is: AdHoc -> PreApprovalTestOne. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routeNode</emphasis>: Based on the routePath,
                            there are two nodes in the routing of this Document Type: <itemizedlist>
                                <listitem>
                                    <para>The starting node for this Document Type is <emphasis
                                            role="bold">AdHoc</emphasis>. On the initiation of a
                                        document of this type, the postProcessor in KEW activates
                                        the node <emphasis role="bold">AdHoc</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">PreApprovalTestOne</emphasis>. On
                                        request, the node is activated by the type <emphasis
                                            role="bold">S</emphasis> and applies the rules in rule
                                        template, <emphasis role="bold"
                                            >WorkflowDocumentTemplate</emphasis>. </para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </itemizedlist>
                <figure><title>PreApproval Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/PreApprovalTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">VariablesTest</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>VariablesTest&lt;/name>
    &lt;description>VariablesTest&lt;/description>
    &lt;label>VariablesTest&lt;/label>

    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;routePaths>
        &lt;routePath>
            &lt;start name="AdHoc" nextNode="setStartedVar" />
            &lt;simple name="setStartedVar" nextNode="setCopiedVar"/>
            &lt;simple name="setCopiedVar" nextNode="PreApprovalTestOne"/>
            &lt;requests name="PreApprovalTestOne" nextNode="setEndedVar"/>
            &lt;simple name="setEndedVar" nextNode="setGoogleVar"/>
            &lt;simple name="setGoogleVar" nextNode="setXPathVar"/>
            &lt;simple name="setXPathVar" nextNode="resetStartedVar"/>
            &lt;simple name="resetStartedVar" nextNode="logNode"/>
            &lt;simple name="logNode" nextNode="logNode2"/>
            &lt;simple name="logNode2"/>
        &lt;/routePath>
    &lt;/routePaths>
    &lt;routeNodes>
        &lt;start name="AdHoc">
            &lt;activationType>P&lt;/activationType>
        &lt;/start>
        &lt;simple name="setStartedVar">
            &lt;type>org.kuali.rice.kew.engine.node.var.SetVarNode&lt;/type>
            &lt;name>started&lt;/name>
            &lt;value>startedVariableValue&lt;/value>
        &lt;/simple>
        &lt;simple name="setCopiedVar">
            &lt;type>org.kuali.rice.kew.engine.node.var.SetVarNode&lt;/type>
            &lt;name>copiedVar&lt;/name>
            &lt;value>var:started&lt;/value>
        &lt;/simple>
        &lt;requests name="PreApprovalTestOne">
            &lt;activationType>S&lt;/activationType>
            &lt;ruleTemplate>WorkflowDocumentTemplate&lt;/ruleTemplate>
        &lt;/requests>
        &lt;simple name="setEndedVar">
            &lt;type>org.kuali.rice.kew.engine.node.var.SetVarNode&lt;/type>
            &lt;name>ended&lt;/name>
            &lt;value>endedVariableValue&lt;/value>
        &lt;/simple>
        &lt;simple name="setGoogleVar">
            &lt;type>org.kuali.rice.kew.engine.node.var.SetVarNode&lt;/type>
            &lt;name>google&lt;/name>
            &lt;value>url:http://google.com&lt;/value>
        &lt;/simple>
        &lt;simple name="setXPathVar">
            &lt;type>org.kuali.rice.kew.engine.node.var.SetVarNode&lt;/type>
            &lt;name>xpath&lt;/name>
            &lt;value>xpath:concat(local-name(//documentContent),$ended)&lt;/value>
        &lt;/simple>
        &lt;simple name="resetStartedVar">
            &lt;type>org.kuali.rice.kew.engine.node.var.SetVarNode&lt;/type>
            &lt;name>started&lt;/name>
            &lt;value>aNewStartedVariableValue&lt;/value>
        &lt;/simple>
        &lt;simple name="logNode">
            &lt;type>org.kuali.rice.kew.engine.node.LogNode&lt;/type>
            &lt;message>var:xpath&lt;/message>
        &lt;/simple>
        &lt;simple name="logNode2">
            &lt;type>org.kuali.rice.kew.engine.node.LogNode&lt;/type>
            &lt;level>ErRoR&lt;/level>
            &lt;log>Custom.Logger.Name&lt;/log>
            &lt;message>THAT'S ALL FOLKS&lt;/message>
        &lt;/simple>
    &lt;/routeNodes>
&lt;/documentType>
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            VariablesTest. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to test Variables. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as the VariablesTest type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: The postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for this
                            type of document is <emphasis role="bold">_blank</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routePath</emphasis>: The routing path for this
                            Document Type is: AdHoc -> setStartedVar -> setCopiedVar ->
                            preApprovalTestOne -> setEndedVar -> setGoogleVar -> setXPathVar ->
                            resetStartedVar -> logNode -> logNode2. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">routeNode</emphasis>: Based on the routePath,
                            there are ten nodes in the routing of this Document Type: <itemizedlist>
                                <listitem>
                                    <para>The starting node for this Document Type is <emphasis
                                            role="bold">AdHoc</emphasis>. On the initiation of a
                                        document of this type, the postProcessor in KEW activates
                                        the node <emphasis role="bold">AdHoc</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">setStartedVar</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.var.SetVarNode</emphasis>
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its name is <emphasis role="bold"
                                                  >started</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its value is <emphasis role="bold"
                                                  >startedVariableValue</emphasis>. </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">setCopiedVar</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.var.SetVarNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its name is <emphasis role="bold"
                                                  >copiedVar</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>The value that it is copying is var:<emphasis
                                                  role="bold">started</emphasis>. </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">preApprovalTestOne</emphasis>. On
                                        request, the node is activated by the type <emphasis
                                            role="bold">S</emphasis> and applies the rules in rule
                                        template <emphasis role="bold"
                                            >WorkflowDocumentTemplate</emphasis>. </para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">setEndedVar</emphasis>
                                        <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.var.SetVarNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its name is <emphasis role="bold"
                                                  >ended</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its value is <emphasis role="bold"
                                                  >endedVariableValue</emphasis>. </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">setGoogleVar</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.var.SetVarNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its name is <emphasis role="bold"
                                                  >google</emphasis>. It links to <emphasis
                                                  role="bold">http://google.com</emphasis>. </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">setXpathVar</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.var.SetVarNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its name is <emphasis role="bold"
                                                  >xpath</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>It adds <emphasis role="bold"
                                                  >//documentContent</emphasis> to the current path.
                                                </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">resetStartedVar</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.var.SetVarNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its name is <emphasis role="bold"
                                                  >started</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>It resets the started node at a new node,
                                                  <emphasis role="bold"
                                                  >aNewStartedVariableValue</emphasis>.</para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">logNode</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.LogNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>It sends a message about the xpath of the
                                                  variables at <emphasis role="bold"
                                                  >var:xpath</emphasis>. </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                                <listitem>
                                    <para>The next node in the routing for this Document Type is
                                            <emphasis role="bold">logNode2</emphasis>. <itemizedlist>
                                            <listitem>
                                                <para>Its type is <emphasis role="bold"
                                                  >org.kuali.rice.kew.engine.node.LogNode</emphasis>.
                                                </para>
                                            </listitem>
                                            <listitem>
                                                <para>Its level is <emphasis role="bold"
                                                  >ErRoR</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>It opens the log <emphasis role="bold"
                                                  >Custom.Logger.Name</emphasis>. </para>
                                            </listitem>
                                            <listitem>
                                                <para>It returns a message <emphasis role="bold"
                                                  >THAT'S ALL FOLKS</emphasis>. </para>
                                            </listitem>
                                        </itemizedlist></para>
                                </listitem>
                            </itemizedlist></para>
                    </listitem>
                </itemizedlist>
                <figure><title>Variables Test</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/VariablesTest_workflow.png"/>
                        </imageobject>
                    </mediaobject>
                </figure>
                <para><emphasis role="bold">SUApproveDocumentNotifications</emphasis></para>
                <programlisting>&lt;documentType>
    &lt;name>SUApproveDocumentNotifications&lt;/name>
    &lt;parent>SUApproveDocument&lt;/parent>
    &lt;description>SUApproveDocumentNotifications&lt;/description>
    &lt;label>SUApproveDocumentNotifications&lt;/label>

    &lt;postProcessorName>org.kuali.rice.kew.postprocessor.DefaultPostProcessor&lt;/postProcessorName>
    &lt;superUserGroupName namespace=”KR-WKFLW” >TestWorkgroup&lt;/superUserGroupName>
    &lt;blanketApproveGroupName namespace=”KR-WKFLW”>TestWorkgroup&lt;/blanketApproveGroupName>
    &lt;defaultExceptionGroupName namespace=”KR-WKFLW”> TestWorkgroup&lt;/defaultExceptionGroupName>
    &lt;docHandler>_blank&lt;/docHandler>
    &lt;active>true&lt;/active>
    &lt;policies>
        &lt;policy>
            &lt;name>SEND_NOTIFICATION_ON_SU_APPROVE&lt;/name>
            &lt;value>true&lt;/value>
        &lt;/policy>
    &lt;/policies>
&lt;/documentType>
</programlisting>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">name</emphasis>: This is the Document Type for
                            SuperUser Approve Document Notifications. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">description</emphasis>: This Document Type is
                            used to test the SuperUser Approve Document Notifications. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">label</emphasis>: This Document Type is
                            recognized as the SUApproveDocumentNotifications type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">postProcessorName</emphasis>: The postProcessor
                            for this Document Type is <emphasis role="bold"
                                >org.kuali.rice.kew.postprocessor.DefaultPostProcessor</emphasis>.</para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">superUserGroupName</emphasis>: The super users
                            for this Document Type are members of the TestWorkgroup. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">blanketApproveGroupName</emphasis>: The members
                            of the TestWorkgroup have blanketApproval right on this type of
                            document. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">defaultExceptionGroupName</emphasis>: The
                            members of the TestWorkgroup will receive an exception notice for
                            documents of this Document Type. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">docHandler</emphasis>: The Doc Handler for this
                            type of document is _blank. </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">active</emphasis>: This Document Type is
                            currently active. In other words, it is in use. </para>
                    </listitem>
                    <listitem>
                        <para>There is just one <emphasis role="bold">policy</emphasis> for this
                            Document Type: The SEND_NOTIFICATION_ON_SU_APPROVE policy is set true by
                            default. In other words, notifications will be automatically sent on
                            SuperUser's approval. </para>
                    </listitem>
                </itemizedlist>
            </sect3>
        </sect2>
        <sect2>
            <title>Document Type Policies</title>
            <para>Current Document Type polices:<itemizedlist>
                    <listitem>
                        <para>DISAPPROVE </para>
                    </listitem>
                    <listitem>
                        <para>DEFAULT_APPROVE </para>
                    </listitem>
                    <listitem>
                        <para>INITIATOR_MUST_ROUTE </para>
                    </listitem>
                    <listitem>
                        <para>INITIATOR_MUST_SAVE </para>
                    </listitem>
                    <listitem>
                        <para>INITIATOR_MUST_CANCEL </para>
                    </listitem>
                    <listitem>
                        <para>INITIATOR_MUST_BLANKET_APPROVE </para>
                    </listitem>
                    <listitem>
                        <para>LOOK_FUTURE </para>
                    </listitem>
                    <listitem>
                        <para>SEND_NOTIFICATION_ON_SU_APPROVE </para>
                    </listitem>
                    <listitem>
                        <para>SUPPORTS_QUICK_INITIATE </para>
                    </listitem>
                    <listitem>
                        <para>NOTIFY_ON_SAVE </para>
                    </listitem>
                    <listitem>
                        <para>blanketApprovePolicy </para>
                    </listitem>
                    <listitem>
                        <para>ALLOW_SU_POST_PROCESSOR_OVERIDE</para>
                    </listitem>
                </itemizedlist></para>
            <para>Document Type Policies defined in the Document Type XML have this
                structure:</para>
            <programlisting>&lt;documentType>
    &lt;name>...&lt;/name>
    &lt;policies>
        &lt;policy>
            &lt;name>DEFAULT_APPROVE&lt;/name>
            &lt;value>true&lt;/value>
        &lt;/policy>
        &lt;policy>
            &lt;name>LOOK_FUTURE&lt;/name>
            &lt;value>false&lt;/value>
        &lt;policy>
    &lt;/policies>
&lt;/documentType>
</programlisting>
            <sect3>
                <title>DISAPPROVE</title>
                <para>The <emphasis role="bold">DISAPPROVE</emphasis> policy determines whether a
                    document will discontinue routing (transactions). When a document has been
                    disapproved, the document initiator and previous approvers will receive notice
                    of this disapproval action.</para>
            </sect3>
            <sect3>
                <title>DEFAULT_APPROVE</title>
                <para>The <emphasis role="bold">DEFAULT_APPROVE</emphasis> policy determines whether
                    a document will continue processing with or without any approval requests. If a
                    document is set to have no approval requests, its put into exception routing.
                    Then, the document will continue to route to the exception workgroup associated
                    with the last route node or to the workgroup defined in the <emphasis
                        role="bold">defaultExceptionWorkgroupname</emphasis>.</para>
            </sect3>
            <sect3>
                <title>INITIATOR_MUST_ROUTE</title>
                <para>The <emphasis role="bold">INITIATOR_MUST_ROUTE</emphasis> policy sets the rule
                    that the user who initiates the document must route it.</para>
            </sect3>
            <sect3>
                <title>INITIATOR_MUST_SAVE</title>
                <para>The <emphasis role="bold">INITIATOR_MUST_SAVE</emphasis> policy sets the rule
                    that the user who initiated the document will be the only one authorized to
                        <emphasis role="bold">save</emphasis> the document.</para>
            </sect3>
            <sect3>
                <title>INITIATOR_MUST_CANCEL</title>
                <para>The <emphasis role="bold">INITIATOR_MUST_CANCEL</emphasis> policy sets the
                    rule that the user who initiated the document will be the only one authorized to
                        <emphasis role="bold">cancel</emphasis> the document.</para>
            </sect3>
            <sect3>
                <title>INITIATOR_MUST_BLANKET_APPROVE</title>
                <para>The <emphasis role="bold">INITIATOR_MUST_BLANKET_APPROVE</emphasis> policy
                    sets the rule that the user who initiated the document is the only one
                    authorized to <emphasis role="bold">blanket approve</emphasis> the
                    document.</para>
            </sect3>
            <sect3>
                <title>LOOK_FUTURE</title>
                <para>The <emphasis role="bold">LOOK_FUTURE</emphasis> policy determines whether the
                    document can be brought into a simulated route from the route log. This policy
                    simulates where the document would end up if it completed the route.</para>
            </sect3>
            <sect3>
                <title>SEND_NOTIFICATION_ON_SU_APPROVE</title>
                <para>The <emphasis role="bold">SEND_NOTIFICATION_ON_SU_APPROVE</emphasis> policy
                    indicates to KEW that it is to send a notification on SuperUser approval.</para>
            </sect3>
            <sect3>
                <title>SUPPORTS_QUICK_INITIATE</title>
                <para>The <emphasis role="bold">SUPPORTS_QUICK_INITIATE</emphasis> policy indicates
                    whether the Document Type is displayed on the Quick Links, so that users can
                    quickly initiate instances of the document.</para>
            </sect3>
            <sect3>
                <title>NOTIFY_ON_SAVE</title>
                <para>The <emphasis role="bold">NOTIFY_ON_SAVE</emphasis> policy indicates whether a
                    notification should be sent in when a save action is applied to this Document
                    Type.</para>
            </sect3>
            <sect3>
                <title>blanketApprovePolicy</title>
                <para>The <emphasis role="bold">blanketApprovePolicy</emphasis> policy indicates who
                    can <emphasis role="bold">blanket approve</emphasis> a workflow document. Its
                    values are either ANY or NONE. <itemizedlist>
                        <listitem>
                            <para>ANY means that anybody can blanket approve the document. </para>
                        </listitem>
                        <listitem>
                            <para>NONE means that no one can blanket approve the document. </para>
                        </listitem>
                    </itemizedlist></para>
                <para>Alternatively, the configuration of the document can be set up to specify a
                    blanketApproveWorkgroupName. blanketApproveWorkgroupName indicates that members
                    of that workgroup can blanket approve the document. You can specify either
                    blanketApprovePolicy OR blanketApproveWorkgroupName in the Document Type.</para>
                <para>Since the blanket approve policy is not a true/false policy (like the others),
                it is specified as an element in the Document Type XML:</para>
                <programlisting>&lt;documentType>
    &lt;name>...&lt;/name>
    .
    .
    .
    &lt;blanketApprovePolicy>NONE&lt;/blanketApprovePolicy>
&lt;/documentType>
</programlisting>
            </sect3>
            <sect3>
                <title>ALLOW_SU_POST_PROCESSOR_OVERIDE</title>
                <para>There is currently the ability to override the "Perform Post Processor Logic"
                    on the "Super User Action on Action Requests" page. This functionality is
                    configurable by document type and as such allows for inheritance. </para>
                <para>By default, the ALLOW_SU_POST_PROCESSOR_OVERIDE it's set to true. The checkbox
                    appears on the super user screen as:</para>
                <figure><title>Super User Action on Requests</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/super_user_action_on_action_requests.png"
                            />
                        </imageobject>
                    </mediaobject>
                </figure>
                <para>In order to turn off the post processor check box, you would add this to the
                documentType definition: </para>
                <programlisting>&lt;policies>
    &lt;policy>
        &lt;name>ALLOW_SU_POSTPROCESSOR_OVERRIDE&lt;/name>
        &lt;value>false&lt;/value>
    &lt;/policy>
&lt;/policies>
</programlisting>
            </sect3>
        </sect2>
        <sect2>
            <title>Inheritance</title>
            <para>Document Types can specify a parent Document Type. This allows them to be included
                in a Document Type hierarchy from which certain behavior can be inherited from their
                parent Document Type.</para>
            <sect3>
                <title>Inheritable Fields</title>
                <para>These fields are inherited:<itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">superUserGroupName</emphasis>: Indicates
                                members of the workgroup who can perform SuperUser actions on the
                                document </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">blanketApproveGroupName</emphasis>:
                                Indicates members of the workgroup that can blanket approve the
                                document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">notificationFromAddress</emphasis>: Sends a
                                notice to the sender when the transfer of the document is completed.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">messageEntity</emphasis>: A head and body of
                                the message. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">policies</emphasis>: Indicates a set of
                                rule(s) applied in the document. For each policy, True means policy
                                DOES apply, False means policy does NOT apply. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">searchable attributes</emphasis>:
                                Constraint(s) assigned as the searchable criteria for a document.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">route paths/route nodes</emphasis>:
                                Designated traveling points before the document reaches its
                                destination in a routing process. </para>
                        </listitem>
                    </itemizedlist></para>
                <para>Special notes about inheritance:<orderedlist>
                        <listitem>
                            <para><emphasis role="bold">Policies</emphasis>: In the Policies
                                section, there are multiple Document Type policies
                                (INITAITOR_MUST_ROUTE, DEFAULT_APPROVE, etc). Each policy can be
                                overridden on an <emphasis role="bold">individual basis</emphasis>.
                                In contrast to the route path, there is no need to override the
                                entire <emphasis role="bold">policies</emphasis> section for a
                                Document Type. For more detailed information about Document Type
                                policies, please see Document Type Policies (above) in this
                                document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Route paths/ route nodes</emphasis>: To
                                override the route path and route node definitions of a parent
                                Document Type, you must override ALL route node and route path
                                definitions. You cannot inherit and use just part of a route path;
                                it's all or nothing. </para>
                        </listitem>
                    </orderedlist></para>
            </sect3>
            <sect3>
                <title>Document Type hierarchy and the Rules Engine</title>
                <para>The Rules Engine follows these rules to determine its rule evaluation set for
                    a Document Type at a particular node:<orderedlist>
                        <listitem>
                            <para>The Rules Engine looks at the Rule Template name of the current
                                node and selects all rules with that template and that document's
                                Document Type. It adds those rules to the rule evaluation set.
                            </para>
                        </listitem>
                        <listitem>
                            <para>If the Document Type has a parent Document Type, it selects all
                                rules with that template and that parent Document Type and adds
                                those to the rule evaluation set. </para>
                        </listitem>
                        <listitem>
                            <para>Its repeats step two until it reaches the root of the Document
                                Type hierarchy. </para>
                        </listitem>
                        <listitem>
                            <para>The final rule evaluation set includes all of these rules. </para>
                        </listitem>
                    </orderedlist></para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>KEW Routing Components and Configuration Guide</title>
        <para>KEW has several components that you can use to configure routing. Typically a single
            application will write a set of these components for reuse across multiple Document
            Types. These components are wired together using an XML configuration file that you need
            to import into KEW. See Importing XML Files to KEW for more information. </para>
        <para>This document looks at defining the routing components available in KEW and how to use
            these components to make a cohesive routing setup.<itemizedlist>
                <listitem>
                    <para><emphasis role="bold">RouteModule</emphasis> - The most basic module; it
                        allows KEW to generate Action Requests </para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">RuleAttribute</emphasis> - A component that fits
                        into KEW's rule system. These rules are used to build routing paths for
                        documents. They function for users across the organization and for multiple
                        applications. </para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">XML RuleAttribute</emphasis> – Similar in
                        functionality to a RuleAttribute but built using XML only </para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">RoleAttribute</emphasis> - A component that fits
                        into KEW's rule system, but which is a pointer to outside data. See Built-in
                        Roles and Nodes for more information on implementing a RoleAttribute.
                    </para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">PostProcessor</emphasis> - A component that gets
                        called throughout the routing process and handles a set of standard events
                        that all eDocs (electronic documents) go through. </para>
                </listitem>
            </itemizedlist></para>
        <para>These components are contained in a Document Type that is defined in XML. A Document
            Type is the prototype for eDocs. Below is the Document Type configuration that explains
            how KEW uses the eDoc rule:</para>
        <programlisting>&lt;?XML version="1.0" encoding="UTF-8"?>
&lt;data XMLns="ns:workflow" XMLns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;documentTypes XMLns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        &lt;documentType>
            &lt;name>YOURSERVICE-DOCS.RuleDocument&lt;/name>
            &lt;parent>YOURSERVICE-DOCS&lt;/parent>
            &lt;description>Add/Modify Workflow rules&lt;/description>
            &lt;label>Add/Modify Workflow rules&lt;/label>
            &lt;postProcessorName>your.package.routetemplate.RulePostProcessor&lt;/postProcessorName>
            &lt;superUserGroupName>WorkflowAdmin&lt;/superUserGroupName>
            &lt;blanketApproveGroupName>IU-WORKFLOW-RULE-BLANKET-APPROVERS&lt;/blanketApproveGroupName>
            &lt;defaultExceptionGroupName>YOUR_EXCEPTION_TEAM&lt;/defaultExceptionGroupName>
            &lt;docHandler>https://yourlocalIP/en-prd/Rule.do?methodToCall=docHandler&lt;/docHandler>
            &lt;notificationFromAddress>...@yourEmailServerIP.edu&lt;/notificationFromAddress>
            &lt;active>true&lt;/active>
            &lt;routingVersion>1&lt;/routingVersion>
            &lt;routePaths>
                &lt;routePath>
                    &lt;start name="Adhoc Routing" nextNode="Rule routing Route Level" />
                    &lt;requests name="Rule routing Route Level" />
                &lt;/routePath>
            &lt;/routePaths>
            &lt;routeNodes>
                &lt;start name="Adhoc Routing">
                    &lt;activationType>S&lt;/activationType>
                    &lt;mandatoryRoute>false&lt;/mandatoryRoute>
                    &lt;finalApproval>false&lt;/finalApproval>
                &lt;/start>
                &lt;requests name="Rule routing Route Level">
                    &lt;activationType>S&lt;/activationType>
                    &lt;ruleTemplate>RuleRoutingTemplate&lt;/ruleTemplate>
                    &lt;mandatoryRoute>true&lt;/mandatoryRoute>
                    &lt;finalApproval>false&lt;/finalApproval>
                &lt;/requests>
            &lt;/routeNodes>
        &lt;/documentType>
    &lt;/documentTypes>
&lt;/data>
</programlisting>
        <sect2>
            <title>Configuration Steps</title>
            <para>Let's go through the configuration step-by-step and explain what all the pieces
                mean:</para>
            <sect3>
                <title>DocumentTypeName Definition</title>
                <programlisting>&lt;name>YOURSERVICE-DOCS.RuleDocument&lt;/name>
&lt;parent>YOURSERVICE-DOCS&lt;/parent>
&lt;description>Add/Modify Workflow rules&lt;/description>
&lt;label>Add/Modify Workflow rules&lt;/label>
</programlisting>
                <para>The section above defines the Document Type's name, its <emphasis role="bold"
                        >parent</emphasis>, <emphasis role="bold">description</emphasis>, and
                        <emphasis role="bold">label</emphasis>. The <emphasis role="bold"
                        >name</emphasis> is used by the client application’s API to communicate with
                    KEW. Here is a sample of code from the client application’s API communicating
                    with KEW:</para>
                <programlisting>WorkflowDocument document = new WorkflowDocument(new NetworkIdVO("username"), "DocumentTypeName");
document.routeDocument("user inputted annotation");
</programlisting>
                <para>The above code will route a document in KEW. <itemizedlist>
                        <listitem>
                            <para>The string <emphasis role="bold">DocumentTypeName</emphasis>
                                exists in KEW and you define it using the <emphasis role="bold"
                                    >&lt;name></emphasis> element. </para>
                        </listitem>
                        <listitem>
                            <para>The <emphasis role="bold">parent</emphasis> element gives the
                                Document Type a parent Document Type. Use this for inheritance of
                                routing configuration and policies. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Description</emphasis> is defined as shown.
                                The document’s <emphasis role="italic">Description</emphasis> is
                                displayed on the Document Type report. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Label</emphasis> is typically the
                                forward-facing name for the Document Type. The label is displayed to
                                the user when an eDoc is in their Action List and they use it when
                                they search for an eDoc using DocSearch. </para>
                        </listitem>
                    </itemizedlist></para>                
            </sect3>
            <sect3>
                <title>PostProcessor Class</title>
                <programlisting>&lt;postProcessorName>your.package.routetemplate.RulePostProcessor&lt;/postProcessorName></programlisting>
                <para>The element above determines which class to use for the PostProcessor for this
                    particular Document Type. This component receives event notifications as eDocs
                    travel through routing.</para>
            </sect3>
            <sect3>
                <title>Managed Workgroups</title>
                <programlisting>&lt;superUserWorkgroupName>WorkflowAdmin&lt;/superUserWorkgroupName>
&lt;blanketApproveWorkgroupName>WorkgroupBlanketApprovers&lt;/blanketApproveWorkgroupName>

&lt;defaultExceptionWorkgroupName>WorkflowAdmin&lt;/defaultExceptionWorkgroupName>
</programlisting>
                <para>This section sets KEW managed workgroups in several roles in the Document
                    Type. <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">SuperUserWorkgroupName</emphasis> defines
                                the workgroup that determines whether a person is allowed to take
                                Super User Actions on a document through the Super User interface.
                            </para>
                        </listitem>
                        <listitem>
                            <para>The content of element <emphasis role="bold"
                                    >blanketApproveWorkgroupName</emphasis> determines which people
                                have access to blanket approve a document. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">defaultExceptionWorkgroup</emphasis>
                                determines to which workgroup to send an eDoc of this type if it
                                goes into exception routing. This is an optional element. You can
                                also define Exception Workgroups with a route node. </para>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
            <sect3>
                <title>docHandler</title>
                <programlisting>&lt;docHandler>https://yourlocalIP/en-prd/Rule.do?methodToCall=docHandler&lt;/docHandler></programlisting>
                <para>The docHandler tells KEW where to forward users when they click an eDoc link.
                    See Document Search for more information. </para>
            </sect3>
            <sect3>
                <title>notificationFromAddress</title>
                <programlisting>&lt;notificationFromAddress>...@yourEmailServerIP&lt;/notificationFromAddress></programlisting>
                <para>When KEW sends an email notification to a user regarding a document of this
                    type, the From address on the message is the address specified here. This is
                    helpful because users will often reply to the messages they receive from KEW,
                    and this allows their responses to go to an appropriate address for the Document
                    Type. This is an optional element. If it is not defined here, KEW uses the
                    default From address. See the Installation Guide for more detail.</para>
            </sect3>
            <sect3>
                <title>active</title>
                <programlisting>&lt;active>true&lt;/active></programlisting>
                <para>Use active to define the activeness of a Document Type. KEW does not allow
                    anyone to create eDocs of an inactive Document Type.</para>
            </sect3>
            <sect3>
                <title>routePaths</title>
                <programlisting>&lt;routePaths>
    &lt;routePath>
        &lt;start name="Adhoc Routing" nextNode="Rule routing Route Level" />
        &lt;requests name="Rule routing Route Level" />
    &lt;/routePath>
&lt;/routePaths>
</programlisting>
                <para>The above defines the path an eDoc will travel as it progresses through its
                    life. <emphasis role="bold">Start</emphasis> and <emphasis role="bold"
                        >Requests</emphasis> are some of the standard node types used. There is only
                    one stop each eDoc must make as it travels through workflow. The eDoc starts at
                    the step <emphasis role="bold">Adhoc Routing</emphasis> and then progresses to
                    the request node named <emphasis role="bold">Rule routing Route
                    Level</emphasis>. </para>
                <para>This section only defines the path the eDocs will travel. The nodes themselves
                    are defined below.</para>
            </sect3>
            <sect3>
                <title>Node Definition XML</title>
                <programlisting>&lt;routeNodes>
    &lt;start name="Adhoc Routing">
        &lt;activationType>S&lt;/activationType>
        &lt;mandatoryRoute>false&lt;/mandatoryRoute>
        &lt;finalApproval>false&lt;/finalApproval>
    &lt;/start>
    &lt;requests name="Rule routing Route Level">
        &lt;activationType>S&lt;/activationType>
        &lt;ruleTemplate>RuleRoutingTemplate&lt;/ruleTemplate>
        &lt;mandatoryRoute>true&lt;/mandatoryRoute>
        &lt;finalApproval>false&lt;/finalApproval>
    &lt;/requests>
&lt;/routeNodes>
</programlisting>
                <para>This is the node definition XML. This determines certain behaviors each node
                    can have. </para>
                <para><emphasis role="bold">Activation Type</emphasis> determines if Approve
                    requests are activated all at once or one at a time. Any given requests node can
                    generate multiple rules that can then generate multiple requests. The
                    ActivationType value specifies if <emphasis role="italic">all</emphasis> action
                    requests generated for <emphasis role="italic">all</emphasis> fired rules are
                    activated immediately (P = <emphasis role="italic">parallel</emphasis>
                    activation), or if the set of action requests generated by each rule are
                    activated one after the other, according to rule order (S = <emphasis
                        role="italic">sequential</emphasis> activation). Activation type is only
                    relevant when multiple rules are generated.</para>
                <para>
                    <figure>
                    <title>Activation Type</title>
                        <mediaobject>
                            <imageobject>
                                <imagedata fileref="../images/activation_type.png"/>
                            </imageobject>
                        </mediaobject>
                    </figure>
                </para>
                <para>The <emphasis role="bold">mandatoryRoute</emphasis> key determines if it’s
                    mandatory to generate approval requests. If a route node is <emphasis
                        role="italic">mandatory</emphasis> and it doesn't generate an <emphasis
                        role="italic">approve</emphasis> request, the document is put in exception
                    routing. </para>
                <para>The <emphasis role="bold">finalapproval</emphasis> key determines if this node
                    should be the last node that has an <emphasis role="italic">approve</emphasis>
                    request. If approvals are generated after this step, the document is thrown into
                    exception routing. </para>
                <para>Finally, there is a request node named <emphasis role="italic">Rule routing
                        Route Level</emphasis> with a key called <emphasis role="bold"
                        >ruleTemplate</emphasis>. This is our hook into the rule system for
                    KEW:</para>
                <programlisting>&lt;ruleTemplate>RuleRoutingTemplate&lt;/ruleTemplate></programlisting>
                <para>And this is our hook into a route module:</para>
                <programlisting>&lt;routeModule>package.your.ARouteModule&lt;/routeModule></programlisting>
                <para>KEW contacts the route module when the document enters that route node and the
                    route module returns Action Requests for KEW to deliver.</para>
            </sect3>
            <sect3>
                <title>Rule Attributes</title>
                <para>If the application integrating with KEW is using Rules to contain the routing
                    data and <emphasis role="bold">RuleAttributes</emphasis> for document
                    evaluation, then the routing configuration requires more XML. Below is an XML
                    snippet that defines <emphasis role="bold">RuleAttribute</emphasis>; this is
                    written in Java.</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleAttributes XMLns="ns:workflow/RuleAttribute" xsi:schemaLocation="ns:workflow/RuleAttribute resource:RuleAttribute">
        &lt;ruleAttribute>
            &lt;name>RuleRoutingAttribute&lt;/name>
            &lt;className>org.kuali.rice.kew.rule.RuleRoutingAttribute&lt;/className>
            &lt;label>RuleRoutingAttribute&lt;/label>
            &lt;description>RuleRoutingAttribute&lt;/description>
            &lt;type>RuleAttribute&lt;/type>
        &lt;/ruleAttribute>
    &lt;/ruleAttributes>
&lt;/data>
</programlisting>
                <para>The above defines a <emphasis role="bold">RuleAttribute</emphasis> called
                        <emphasis role="italic">RuleRoutingAttribute</emphasis>. <emphasis
                        role="italic">RuleRoutingAttribute</emphasis> maps to the Java class
                        <emphasis role="bold"
                        >org.kuali.rice.kew.rule.RuleRoutingAttribute</emphasis>. The <emphasis
                        role="italic">type</emphasis> of this attribute is a <emphasis role="bold"
                        >RuleAttribute</emphasis>; essentially this means the RuleAttribute's
                    behavior is determined in a Java class. There are also RuleAttributes made
                    entirely from XML, but programming attributes is outside the scope of this
                    Guide. </para>
            </sect3>
            <sect3>
                <title>Rule Templates</title>
                <para>Finally, we need to tie the <emphasis role="bold">RuleAttribute</emphasis> to
                    the Document Type. This is done using the <emphasis role="bold"
                        >RuleTemplate</emphasis> and it is defined using XML. The <emphasis
                        role="bold">RuleTemplate</emphasis> schema below provides further
                    explanation:</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>

&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleTemplates XMLns="ns:workflow/RuleTemplate" xsi:schemaLocation="ns:workflow/RuleTemplate resource:RuleTemplate">
        &lt;ruleTemplate>
            &lt;name>RuleRoutingTemplate&lt;/name>
            &lt;description>RuleRoutingTemplate&lt;/description>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>RuleRoutingAttribute&lt;/name>
                    &lt;required>true&lt;/required>
                &lt;/attribute>
            &lt;/attributes>
        &lt;/ruleTemplate>
    &lt;/ruleTemplates>
&lt;/data>
</programlisting>
                <note><para>Notice that the name of this RuleTemplate, <emphasis role="italic"
                        >RuleRoutingTemplate</emphasis>, matches the name given in the <emphasis
                        role="bold">ruleTemplate</emphasis> element in the Document Type route node
                    declaration. Also, notice that the <emphasis role="bold"
                        >RuleAttribute</emphasis> made above is referenced in the <emphasis
                        role="bold">RuleTemplate</emphasis> above in the <emphasis role="italic"
                        >attributes</emphasis> section.</para></note>
                <programlisting>&lt;attributes>
    &lt;attribute>
        &lt;name>RuleRoutingAttribute&lt;/name>
        &lt;required>true&lt;/required>
    &lt;/attribute>
&lt;/attributes>
</programlisting>
                <para>The <emphasis role="bold">RuleTemplate</emphasis> is the join between
                        <emphasis role="bold">RuleAttributes</emphasis> and Document Types. In this
                    way, we can reuse the same attribute declaration (and therefore Java logic)
                    across Document Types.</para>
                <para>Once the XML, condensed into a single file, is uploaded into KEW, eDocs of
                    this type can be created and routed from a client application. </para>
                <para>All the content in the code examples above is aggregated into a single file
                    below with a single surrounding data tag:</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleAttributes xmlns="ns:workflow/RuleAttribute" xsi:schemaLocation="ns:workflow/RuleAttribute resource:RuleAttribute">
        &lt;ruleAttribute>
            &lt;name>RuleRoutingAttribute&lt;/name>
            &lt;className>org.kuali.rice.kew.rule.RuleRoutingAttribute&lt;/className>
            &lt;label>foo&lt;/label>
            &lt;description>foo&lt;/description>
            &lt;type>RuleAttribute&lt;/type>
        &lt;/ruleAttribute>
    &lt;/ruleAttributes>
    &lt;ruleTemplates xmlns="ns:workflow/RuleTemplate" xsi:schemaLocation="ns:workflow/RuleTemplate resource:RuleTemplate">
        &lt;ruleTemplate>
            &lt;name>RuleRoutingTemplate&lt;/name>
            &lt;description>RuleRoutingTemplate&lt;/description>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>RuleRoutingAttribute&lt;/name>
                    &lt;required>true&lt;/required>
                &lt;/attribute>
            &lt;/attributes>
        &lt;/ruleTemplate>
    &lt;/ruleTemplates>
    &lt;documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        &lt;documentType>
            &lt;name>EDENSERVICE-DOCS.RuleDocument&lt;/name>
            &lt;parent>EDENSERVICE-DOCS&lt;/parent>
            &lt;description>Add/Modify Workflow rules&lt;/description>
            &lt;label>Add/Modify Workflow rules&lt;/label>
            &lt;postProcessorName>org.kuali.rice.kew.postprocessor.RulePostProcessor&lt;/postProcessorName>
            &lt;superUserGroupName namespace=KR-WKFLW”>WorkflowAdmin&lt;/superUserGroupName>
            &lt;blanketApproveGroupName namespace=KR-WKFLW”>WorkflowAdmin&lt;/blanketApproveGroupName>
            &lt;defaultExceptionGroupName>&lt;/defaultExceptionGroupName>
            &lt;docHandler>https://uisapp2.iu.edu/en-prd/Rule.do?methodToCall=docHandler&lt;/docHandler>
            &lt;active>true&lt;/active>
            &lt;routingVersion>1&lt;/routingVersion>
            &lt;routePaths>
                &lt;routePath>
                    &lt;start name="Adhoc Routing" nextNode="Rule routing Route Level" />
                    &lt;requests name="Rule routing Route Level" />
                &lt;/routePath>
            &lt;/routePaths>
            &lt;routeNodes>
                &lt;start name="Adhoc Routing">
                    &lt;activationType>S&lt;/activationType>
                    &lt;mandatoryRoute>false&lt;/mandatoryRoute>
                &lt;/start>
                &lt;requests name="Workflow Document Routing">
                    &lt;activationType>S&lt;/activationType>
                    &lt;ruleTemplate>RuleRoutingTemplate&lt;/ruleTemplate>
                    &lt;mandatoryRoute>true&lt;/mandatoryRoute>
                &lt;/requests>
            &lt;/routeNodes>
        &lt;/documentType>
    &lt;/documentTypes>
&lt;/data>
</programlisting>
            </sect3>
        </sect2>
        <sect2>
            <title>Routing Rules</title>
            <para>There is a separate User Guide on how to use the Rule UI. This will show you how
                to create a Rule as well as modify and delete.</para>
        </sect2>
        <sect2>
            <title>InitiatorRoleAttribute</title>
            <para><emphasis role="italic">InitiatorRoleAttribute</emphasis> is a RoleAttribute that
                exposes an INITIATOR abstract role that resolves to the initiator of the
                document.</para>
            <para>
                <table frame="none">
                    <title>InitiatorRoleAttribute</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>InitiatorRoleAttribute</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.rule</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.rule.InitiatorRoleAttribute</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>RoutedByUserRoleAttribute</title>
            <para><emphasis role="italic">RoutedByUserRoleAttribute</emphasis> is a RoleAttribute
                that exposes the user who routed the document.</para>
            <para>
                <table frame="none">
                    <title>RoutedByUserRoleAttribute</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>RoutedByUserRoleAttribute</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.rule</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.rule.RoutedByUserRoleAttribute</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>NoOpNode</title>
            <para><emphasis role="italic">NoOpNode </emphasis> is a SimpleNode implementation that
                is a code structure example, but has no functionality.</para>
            <para>
                <table frame="none">
                    <title>NoOpNode</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>NoOpNode</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.engine.node</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.engine.node.NoOpNode</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>RequestActivationNode</title>
            <para><emphasis role="italic">RequestActivationNode</emphasis> is a SimpleNode that
                activates any requests on it. It returns true when there are no more requests that
                require activation.</para>
            <para>In <emphasis role="italic">RequestActivationNode</emphasis>, the <emphasis
                    role="italic">activateRequests</emphasis> method activates the Action Requests
                that are pending at this route level of the document. The requests are processed by
                Priority and then by Request ID. The requests are activated implicitly according to
                the route level.</para>
            <para>Acknowledgement Requests do not cause processing to stop. Only Action Requests for
                Approval or Completion cause processing to stop at the current document's route
                level. Inactive requests at a lower level cause a routing exception.</para>
            <para>
                <table frame="none">
                    <title>RequestActivationNode</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>RequestActivationNode</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.engine.node</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.engine.node.RequestActivationNode</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>NetworkIdRoleAttribute</title>
            <para><emphasis role="italic">NetworkIdRoleAttribute</emphasis> is a RoleAttribute that
                routes the request to a NetworkID specified in the document content.</para>
            <para>
                <table frame="none">
                    <title>NetworkIdRoleAttribute</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>NetworkIdRoleAttribute</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.engine.node</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.engine.node.NetworkIdRoleAttribute</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>UniversityIdRoleAttribute</title>
            <para><emphasis role="italic">UniversityIdRoleAttribute</emphasis> is a RoleAttribute
                that routes requests to an Empl ID specified in the document content.</para>
            <para>
                <table frame="none">
                    <title>UniversityIdRoleAttribute</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>UniversityIdRoleAttribute</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.engine.node</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.engine.node.UniversityIdRoleAttribute</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
        <sect2>
            <title>SetVarNode</title>
            <para><emphasis role="italic">SetVarNode</emphasis> is a SimpleNode that allows you to
                set document variables.</para>
            <para>The definition of <emphasis role="italic">SetVarnode</emphasis> takes these
                configuration parameter elements:<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Name</emphasis>: The name of the variable to set
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Value</emphasis>: The value to which to set the
                            variable. This value is parsed according to Property/PropertyScheme
                            syntax. The default <emphasis role="italic">PropertyScheme</emphasis> is
                                <emphasis role="italic">LiteralScheme</emphasis>, which evaluates
                            the value simply as a literal; it won't do anything but return the
                            value. </para>
                    </listitem>
                </itemizedlist></para>
            <para>
                <table frame="none">
                    <title>SetVarNode</title>
                    <tgroup cols="2">
                        <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                        <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                        <thead>
                            <row>
                                <entry>Name</entry>
                                <entry>Address</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>Class</entry>
                                <entry>SetVarNode</entry>
                            </row>
                            <row>
                                <entry>Package</entry>
                                <entry>org.kuali.rice.kew.engine.node.var</entry>
                            </row>
                            <row>
                                <entry>Full</entry>
                                <entry>org.kuali.rice.kew.engine.node.var.SetVarNode</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </para>
        </sect2>
    </sect1>
    <sect1>
        <title>Routing Configuration using KIM Responsibilities</title>
        <para>In addition to routing workflow based on users and workgroups using routing rules, you
            can also route workflow based on KIM responsibilities. This allows you to utilize group
            membership and role assignments to manage who is permitted to perform approvals.</para>
        <sect2>
            <title>Route Node Definition</title>
            <para>In review, you define a rule-based routing node with XML similar to:</para>
            <programlisting>&lt;requests name="Rule routing Route Level">
    &lt;activationType>S&lt;/activationType>
    &lt;ruleTemplate>RuleRoutingTemplate&lt;/ruleTemplate>
    &lt;mandatoryRoute>true&lt;/mandatoryRoute>
    &lt;finalApproval>false&lt;/finalApproval>
&lt;/requests></programlisting>
            <para>A routing node that uses KIM responsibilities can replace a rule-based routing
                    node. You define it with XML similar to:</para>
            <programlisting>&lt;role name="Purchasing">
    &lt;qualifierResolverClass>
org.kuali.rice.kns.workflow.attribute.DataDictionaryQualifierResolver
&lt;/qualifierResolverClass>
    &lt;activationType>P&lt;/activationType>
&lt;/role>           </programlisting>
            <sect3>
                <title>Node Name</title>
                <para>You name the routing node with the name attribute, just like for a rule-based
                    routing node.</para>
            </sect3>    
            <sect3>
                <title>Qualifier Resolver</title>
                <para>The qualifier resolver finds any qualifiers that need to be used while
                    matching the responsibility. You can specify it in either of two ways:<itemizedlist>
                        <listitem>
                            <para><emphasis role="bold"
                                    >&lt;qualifierResolver>name&lt;/qualifierResolver></emphasis>
                                names a rule attribute which identifies the class to use </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold"
                                    >&lt;qualifierResolverClass>class.name&lt;/qualifierResolverClass></emphasis>
                                provides the fully-qualified name of the Java class to use </para>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
            <sect3>
                <title>Other Options</title>
                <para>You can specify <emphasis role="bold"
                        >&lt;responsibilityTemplateName>name&lt;/responsibilityTemplateName></emphasis>
                    to identify the responsibility template to use. This option is not usually used
                    since all of the responsibilities provided with KIM use a template named
                        <emphasis role="bold">Review</emphasis>.</para>
                <para>You can specify <emphasis role="bold"
                        >&lt;namespace>name&lt;/namespace></emphasis> to identify the name space for
                    the responsibility. This option is usually not used since all of the
                    responsibilities provided with KIM use a name space of <emphasis role="bold"
                        >KR-WKFLW</emphasis>.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Matching Routing Nodes to Responsibilities</title>
            <para>The KIM responsibility template <emphasis role="bold">Review</emphasis> defines
                two details:<itemizedlist>
                    <listitem>
                        <para>The name of the document type </para>
                    </listitem>
                    <listitem>
                        <para>The name of the routing node </para>
                    </listitem>
                </itemizedlist></para>
            <para>When you define a responsibility in KIM using this template, you specify a value
                for each of these details. When a document is routed using responsibility-based
                routing nodes, KIM receives the type of the document being routed and the name of
                the node; it then locates any responsibilities which have the same routing node name
                and either the same document type name or the name of a parent document type (all
                the way up to the top of the hierarchy). The list of people who gets the request
                consists of anyone who has been assigned a role with any of the matching
                responsibilities.</para>
        </sect2>
    </sect1>
    <sect1>
        <title>Using the Workflow Document API</title>
        <sect2>
            <title>Overview</title>
            <para>This document explains features of the workflow document API. There are two
                interfaces in KEW that allow you to create a document for delivery through workflow.
                The <emphasis role="bold">WorkflowDocument</emphasis> interface is designed to
                create a new document in the workflow system once an action has been taken, such as
                sending ad hoc requests. The <emphasis role="bold">WorkflowInfo</emphasis> interface
                is actually a convenience class for client applications that query workflow. Both
                classes assist with implementing connections to KEW. </para>
        </sect2>
        <sect2>
            <title>WorkflowDocument</title>
            <para>The process for this section of the API involves creating the initial <emphasis
                    role="bold">WorkflowDocument</emphasis> using a constructor to create a new
                routable document in KEW. Once the object is defined, it initializes by loading an
                existing <emphasis role="italic">routeHeaderId</emphasis> or by constructing an
                empty document of a specified <emphasis role="italic">documentType</emphasis>. A
                number of methods can be invoked once initialization is complete and details of how
                those methods would be invoked are outlined primarily in the Java Documentation at
                    <link xlink:href="https://test.kuali.org/rice/rice-api-1.0-javadocs/"
                    >https://test.kuali.org/rice/rice-api-1.0-javadocs/</link>.</para>
            <para>Document content methods modify the properties of a document’s content. A specific
                case is <emphasis role="italic">addAttributeDefinition()</emphasis>, where a
                    <emphasis role="italic">WorkflowAttribute</emphasis> is used to generate
                attribute document content that will be appended to the existing document content.
                Another case is adding a searchable attribute definition with the <emphasis
                    role="italic">addSearchableDefinition()</emphasis> method. More information on
                the various constructors, methods, and objects relating to the WorkflowDocument
                class is available in the Java documentation found at <link
                    xlink:href="https://test.kuali.org/rice/rice-api-1.0-javadocs/org/kuali/rice/kew/service/WorkflowDocument.html"
                    >https://test.kuali.org/rice/rice-api-1.0-javadocs/org/kuali/rice/kew/service/WorkflowDocument.html</link>. </para>
        </sect2>
        <sect2>
            <title>WorkflowInfo</title>
            <para>This class is the second client interface to KEW. The first time this object is
                initialized, the client configuration is accessed to determine how to connect to
                KEW. Methods invoked from this class can grab the routing header information based
                on the principleId, or return a set of Action Requests for a document that’s in
                route based on the <emphasis role="italic">routeHeaderId</emphasis>, the <emphasis
                    role="italic">nodeName</emphasis> and the <emphasis role="italic"
                    >principalId</emphasis>. More information on the various constructors, methods,
                and objects relating to the <emphasis role="italic">WorkflowInfo</emphasis> class is
                available in the Java documentation found at <link
                    xlink:href="https://test.kuali.org/rice/rice-api-1.0-javadocs/org/kuali/rice/kew/service/WorkflowInfo.html"
                    >https://test.kuali.org/rice/rice-api-1.0-javadocs/org/kuali/rice/kew/service/WorkflowInfo.html</link>.</para>
        </sect2>
    </sect1>
    <sect1>
        <title>Creating an eDocLite Application</title>
        <sect2>
            <title>Overview</title>
            <para>eDocLite is a simple, form-based system that is built into Kuali Enterprise
                Workflow (KEW). It facilitates rapid development and implementation of simple
                documents and validation rules using XML. Use it for simple documents with simple
                route paths. You can integrate it with larger applications using a database layer
                post-processor component. </para>
            <para>eDocLite uses an XSLT style sheet for custom presentation and XML to define form
                fields. The actual form display is called an EDL. This diagram shows how these
                objects are related:</para>
            <para>Key Ideas:<itemizedlist>
                    <listitem>
                        <para>Rapid implementation and development solution for simpler documents
                        </para>
                    </listitem>
                    <listitem>
                        <para>Easily re-configured </para>
                    </listitem>
                    <listitem>
                        <para>Easily manageable </para>
                    </listitem>
                    <listitem>
                        <para>Entirely web-based from design/development and user perspectives
                        </para>
                    </listitem>
                    <listitem>
                        <para>No java code required for developments; only XML with optional
                            javascript for client side editing (workflow handles execution) </para>
                    </listitem>
                    <listitem>
                        <para>Some validation javascript is automatically generated like regular
                            expression editing and 'required field checking'. </para>
                    </listitem>
                </itemizedlist></para>
            <para><figure>
                <title>EDL Controller Chain</title>
                    <mediaobject>
                        <imageobject>
                            <imagedata fileref="../images/edl_controller_chain.png"/>
                        </imageobject>
                    </mediaobject>
            </figure>
            </para>
        </sect2>
        <sect2>
            <title>Components</title>
            <sect3>
                <title>Field Definitions</title>
                <para>You need to define eDocLite fields to capture data that is passed to the
                    server for storage. </para>
                <para>Key Information about eDocLite fields:<itemizedlist>
                        <listitem>
                            <para>Save eDocLite data fields as key value pairs in two columns of a
                                single database table. </para>
                        </listitem>
                        <listitem>
                            <para>Use the xml element name as the key. </para>
                        </listitem>
                        <listitem>
                            <para>You do not need to make any database-related changes when building
                                eDocLite web applications. </para>
                        </listitem>
                        <listitem>
                            <para>Store documents by document number. </para>
                        </listitem>
                        <listitem>
                            <para>Make all field names unique within a document type. </para>
                        </listitem>
                    </itemizedlist></para>
                <para>The code example below focuses on the EDL section of the eDocLite form
                    definition. The file Edoclite.xsd found in source under the
                    impl/src/main/resources/schema/ directory describes the xml rules for this
                    section.</para>
                <para>Note that the first few lines proceeding <emphasis role="italic">&lt;edl
                        name="eDoc.Example1.Form"</emphasis> relate to namespace definitions. These
                    are common across all eDocLites, so this guide does not discuss them. </para>
                <para>In this example, any XML markup that has no value shown or that is not
                    explained offers options that are not important at this time.</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;edoclite xmlns="ns:workflow/eDocLite " xsi:schemaLocation="ns:workflow/eDocLite  resource:eDocLite ">

    &lt;edl name="eDoc.Example1.Form" title="Example 1">
        &lt;security />
        &lt;createInstructions>** Questions with an asterisk are required.&lt;/createInstructions>
        &lt;instructions>** Questions with an asterisk are required.&lt;/instructions>
        &lt;validations />
        &lt;attributes />
        &lt;fieldDef name="userName" title="Full Name">
            &lt;display>
                &lt;type>text&lt;/type>
                &lt;meta>
                    &lt;name>size&lt;/name>
                    &lt;value>40&lt;/value>
                &lt;/meta>
            &lt;/display>
            &lt;validation required="true">
                &lt;message>Please enter your full name&lt;/message>
            &lt;/validation>
        &lt;/fieldDef>
        &lt;fieldDef name="rqstDate" title="Requested Date of Implementation:">
            &lt;display>
                &lt;type>text&lt;/type>
            &lt;/display>
            &lt;validation required="true">
                &lt;regex>^[0-1]?[0-9](/|-)[0-3]?[0-9](/|-)[1-2][0-9][0-9][0-9]$&lt;/regex>
                &lt;message>Enter a valid date in the format mm/dd/yyyy.&lt;/message>
            &lt;/validation>
        &lt;/fieldDef>
        &lt;fieldDef name="requestType" title="Request Type:">
            &lt;display>
                &lt;type>radio&lt;/type>
                &lt;values title="New">New&lt;/values>
                &lt;values title="Modification">Modification&lt;/values>
            &lt;/display>
            &lt;validation required="true">
                &lt;message>Please select a request type.&lt;/message>
            &lt;/validation>
        &lt;/fieldDef>
        &lt;fieldDef attributeName="EDL.Campus.Example" name="campus" title="Campus:">
            &lt;display>
                &lt;type>select&lt;/type>
                &lt;values title="IUB">IUB&lt;/values>
                &lt;values title="IUPUI">IUPUI&lt;/values>
            &lt;/display>
            &lt;validation required="true">
                &lt;message>Please select a campus.&lt;/message>
            &lt;/validation>
        &lt;/fieldDef>
        &lt;fieldDef name="description" title="Description of Request:">
            &lt;display>
                &lt;type>textarea&lt;/type>
                &lt;meta>
                    &lt;name>rows&lt;/name>
                    &lt;value>5&lt;/value>
                &lt;/meta>
                &lt;meta>
                    &lt;name>cols&lt;/name>
                    &lt;value>60&lt;/value>
                &lt;/meta>
                &lt;meta>
                    &lt;name>wrap&lt;/name
                    &lt;value>hard&lt;/value>
                &lt;/meta>
            &lt;/display>
            &lt;validation required="false" />
        &lt;/fieldDef>
        &lt;fieldDef name="fundedBy" title="My research/sponsored program work is funded by NIH or NSF.">
            &lt;display>
                &lt;type>checkbox&lt;/type>
                &lt;values title="My research/sponsored program work is funded by NIH or NSF.">nihnsf&lt;/values
            &lt;/display>
        &lt;/fieldDef>
        &lt;fieldDef name="researchHumans" title="My research/sponsored program work involves human subjects.">
            &lt;display>
                &lt;type>checkbox&lt;/type>
                &lt;values title="My research/sponsored program work involves human subjects.">humans&lt;/values>
            &lt;/display>
        &lt;/fieldDef>
    &lt;/edl>
    &lt;/eDocLite>
&lt;/data></programlisting>
                <para>In the EDL XML file, field definition is embodied in the <emphasis role="bold"
                        >edl</emphasis> element. This element has a <emphasis role="bold"
                        >name</emphasis> attribute that is used to identify this file as a
                    definition of an EDL form. It often has a <emphasis role="bold">title</emphasis>
                    for display purposes.</para>
                <para>Examination of this code shows that <itemizedlist>
                        <listitem>
                            <para>Individual fields have names, titles, and types. The types closely
                                match html types. </para>
                        </listitem>
                        <listitem>
                            <para>You can easily use simple validation attributes and sub-attributes
                                to ensure that a field is entered if required and that an
                                appropriate error message is presented if no value is provided by
                                the web user. </para>
                        </listitem>
                        <listitem>
                            <para>Regular expressions enhance the edit criteria without using custom
                                JavaScript. (There are several ways that you can invoke custom
                                JavaScript for a field, but they are not shown in this example.)
                            </para>
                        </listitem>
                        <listitem>
                            <para>An important field named campus has syntax that defines the value
                                used to drive the routing destination. (In more complex documents,
                                several fields are involved in making the routing decision.) </para>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
            <sect3>
                <title>XSLT Style Sheet</title>
                <para>The next section of the EDL XML file is the XSLT style sheet. It renders the
                    EDL that the browser will present and contains logic to determine how data is
                    rendered to the user.</para>
                <para>A major workhorse of the XSLT code is contained in a style sheet library
                    called <emphasis role="bold">widgets.xml</emphasis>. In the example below, it's
                    included in the style sheet using an <emphasis role="italic"
                        >xsl:include</emphasis> directive.</para>
                <para>Workflow Java classes have API’s that offer methods that supply valuable
                    information to the XSLT style sheet logic. XML allows you to interrogate the
                    current value of <emphasis role="italic">EDL</emphasis>-defined fields, and it
                    provides a variety of built-in functions.</para>
                <para>Together, these helpers allow the eDocLite style sheet programmer to focus on
                    rendering fields and titles using library (widget) calls and to perform
                    necessary logic using the constructs built into the XML language(<emphasis
                        role="bold">if</emphasis>, <emphasis role="bold">choose…when</emphasis>,
                    etc.).</para>
                <para>This is the area of eDocLite development that takes the longest and is the
                    most tedious. Much of what the eDocLite style sheet programmer writes focuses on
                    which fields and titles appear, in what order, to which users, and whether the
                    fields are <emphasis role="italic">readOnly</emphasis>, <emphasis role="italic"
                        >editable</emphasis>, or <emphasis role="italic">hidden</emphasis>.</para>
                <para>Below is the style sheet section of the EDL XML form for our example. It
                    contains embedded comments.</para>
                <programlisting>&lt;!-- widgets is simply more xslt that contains common functionality that greatly simplifies html rendering 
It is somewhat complicated but does not require changes or full understanding unless enhancements are required.  -->
&lt;xsl:include href="widgets" />
&lt;xsl:output indent="yes" method="html" omit-xml-declaration="yes" version="4.01" />

&lt;!-- variables in the current version of xslt cannot be changed once set. Below they are set to various values often fed by java classes or to
values contained in workflow xml. Not all of these are used in this form but are shown because often they can be useful
The ones prefixed with my-class are methods that are exposed by workflow to eDocLite .-->
&lt;xsl:variable name="actionable" select="/documentContent/documentState/actionable" />
&lt;xsl:variable name="docHeaderId" select="/documentContent/documentState/docId" />
&lt;xsl:variable name="editable" select="/documentContent/documentState/editable" />
&lt;xsl:variable name="globalReadOnly" select="/documentContent/documentState/editable != 'true'" />
&lt;xsl:variable name="docStatus" select="//documentState/workflowDocumentState/status" />
&lt;xsl:variable name="isAtNodeInitiated" select="my-class:isAtNode($docHeaderId, 'Initiated')" />
&lt;xsl:variable name="isPastInitiated" select="my-class:isNodeInPreviousNodeList('Initiated', $docHeaderId)" />
&lt;xsl:variable name="isUserInitiator" select="my-class:isUserInitiator($docHeaderId)" />
&lt;!-- &lt;xsl:variable name="workflowUser" select="my-class:getWorkflowUser().authenticationUserId().id()" /> This has a unique implementation at IU -->
&lt;xsl:param name="overrideMain" select="'true'" />

&lt;!-- mainForm begins here. Execution of stylesheet begins here. It calls other templates which can call other templates.
Position of templates beyond this point do not matter. -->
&lt;xsl:template name="mainForm">
    &lt;html xmlns="">
        &lt;head>
            &lt;script language="javascript" />
            &lt;xsl:call-template name="htmlHead" />
        &lt;/head>
        &lt;body onload="onPageLoad()">
            &lt;xsl:call-template name="errors" />
            &lt;!-- the header is useful because it tells the user whether they are in 'Editing' mode or 'Read Only' mode. -->
            &lt;xsl:call-template name="header" />
            &lt;xsl:call-template name="instructions" />
            &lt;xsl:variable name="formTarget" select="'eDocLite '" />
            &lt;!-- validateOnSubmit is a javascript function (file: edoclite1.js) which supports edoclite forms and can be somewhat complicated 
                 but does not
 require modification unless enhancements are required. -->
            &lt;form action="{$formTarget}" enctype="multipart/form-data" id="edoclite" method="post" onsubmit="return validateOnSubmit(this)">
                &lt;xsl:call-template name="hidden-params" />
                &lt;xsl:call-template name="mainBody" />
                &lt;xsl:call-template name="notes" />
                &lt;br />
                &lt;xsl:call-template name="buttons" />
                &lt;br />
            &lt;/form>
            &lt;xsl:call-template name="footer" />
        &lt;/body>
    &lt;/html>
&lt;/xsl:template>

&lt;!-- mainBody template begins here. It calls other templates which can call other templates. Position of templates do not matter. -->
&lt;xsl:template name="mainBody">
    &lt;!-- to debug, or see values of previously created variables, one can use the following format.
         for example, uncomment the following line to see value of $docStatus. It will be rendered at the top of the main body form. -->
    &lt;!-- $docStatus=&lt;xsl:value-of select="$docStatus" /> -->
    &lt;!-- rest of this all is within the form table -->
    &lt;table xmlns="" align="center" border="0" cellpadding="0" cellspacing="0" class="bord-r-t" width="80%">
        &lt;tr>
            &lt;td align="left" border="3" class="thnormal" colspan="1">
&lt;br />
&lt;h3>
My Page
&lt;br />
EDL EDoclite Example
&lt;/h3>
&lt;br />
&lt;/td>
            &lt;td align="center" border="3" class="thnormal" colspan="2">
&lt;br />
&lt;h2>eDocLite Example 1 Form&lt;/h2>&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="headercell5" colspan="100%">
&lt;b>User Information&lt;/b>
&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="thnormal">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'userName'" />
                    &lt;xsl:with-param name="renderCmd" select="'title'" />
                &lt;/xsl:call-template>
                &lt;font color="#ff0000">*&lt;/font>
            &lt;/td>
            &lt;td class="datacell">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'userName'" />
                    &lt;xsl:with-param name="renderCmd" select="'input'" />
                    &lt;xsl:with-param name="readOnly" select="$isPastInitiated" />
                &lt;/xsl:call-template>
            &lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="headercell5" colspan="100%">
&lt;b>Other Information&lt;/b>
&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="thnormal">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'rqstDate'" />
                    &lt;xsl:with-param name="renderCmd" select="'title'" />
                &lt;/xsl:call-template>
                &lt;font color="#ff0000">*&lt;/font>
            &lt;/td>
            &lt;td class="datacell">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'rqstDate'" />
                    &lt;xsl:with-param name="renderCmd" select="'input'" />
                    &lt;xsl:with-param name="readOnly" select="$isPastInitiated" />
                &lt;/xsl:call-template>
            &lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="thnormal">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'campus'" />
                    &lt;xsl:with-param name="renderCmd" select="'title'" />
                &lt;/xsl:call-template>
                &lt;font color="#ff0000">*&lt;/font>
            &lt;/td>
            &lt;td class="datacell">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'campus'" />
                    &lt;xsl:with-param name="renderCmd" select="'input'" />
                    &lt;xsl:with-param name="readOnly" select="$isPastInitiated" />
                &lt;/xsl:call-template>
            &lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="thnormal">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'description'" />
                    &lt;xsl:with-param name="renderCmd" select="'title'" />
                &lt;/xsl:call-template>
            &lt;/td>
            &lt;td class="datacell">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'description'" />
                    &lt;xsl:with-param name="renderCmd" select="'input'" />
                    &lt;xsl:with-param name="readOnly" select="$isPastInitiated" />
                &lt;/xsl:call-template>
            &lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="thnormal" colspan="2">
&lt;b>(Check all that apply)&lt;/b>
&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="datacell" colspan="2">
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'fundedBy'" />
                    &lt;xsl:with-param name="renderCmd" select="'input'" />
                    &lt;xsl:with-param name="readOnly" select="$isPastInitiated" />
                &lt;/xsl:call-template>
                &lt;br />
                &lt;xsl:call-template name="widget_render">
                    &lt;xsl:with-param name="fieldName" select="'researchHumans'" />
                    &lt;xsl:with-param name="renderCmd" select="'input'" />
                    &lt;xsl:with-param name="readOnly" select="$isPastInitiated" />
                &lt;/xsl:call-template>
                &lt;br />
            &lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="headercell1" colspan="100%">
&lt;b>Supporting Materials&lt;/b>&lt;/td>
        &lt;/tr>
        &lt;tr>
            &lt;td class="thnormal" colspan="100%">Use the Create Note box below to attach supporting materials to your request. Notes may be added with or without attachments. Click the red 'save' button on the right.&lt;/td>
        &lt;/tr>
    &lt;/table>
    &lt;br xmlns="" />
&lt;/xsl:template>
&lt;xsl:template name="nbsp">
    &lt;xsl:text disable-output-escaping="yes">&amp;amp;nbsp;&lt;/xsl:text>
&lt;/xsl:template>
&lt;/xsl:stylesheet>
&lt;/style>
</programlisting>
                <para>The beginning portion of this style sheet defines some XSL variables that are
                    often useful to drive logic choices. For simplicity, this example uses very
                    little logic. </para>
                <para>The <emphasis role="italic">isPastInitiated</emphasis> variable drives whether
                    a user-defined EDL field renders readOnly or not. </para>
                <para>The <emphasis role="italic">mainform</emphasis> often serves to call some
                    common widget templates that add canned functionality. The <emphasis
                        role="italic">mainform</emphasis> then calls the <emphasis role="italic"
                        >mainBody</emphasis> template, which creates the html to render the
                    EDL-defined fields. The <emphasis role="italic">mainform</emphasis> then
                    (optional) calls the notes, buttons, and footer templates.</para>
                <para>The majority of your programming effort goes into the <emphasis role="italic"
                        >mainBody</emphasis>, where calls to <emphasis role="italic"
                        >widget_render</emphasis> generate much of the field-specific title and
                    value information. Various options can be passed into <emphasis role="italic"
                        >widgets_render</emphasis> to allow client events to be executed. The
                        <emphasis role="italic">mainBody</emphasis> is usually one or more html
                    tables and sometimes makes calls to programmer-defined sub-templates. The XSLT
                    stylesheet generates the HTML rendered by the browser.</para>
                <para>The main and repeating theme of the example involves calling <emphasis
                        role="italic">widget_render</emphasis> with the title of an EDL field,
                    followed by calling <emphasis role="italic">widget_render</emphasis> again with
                    the input field. Widgets are a wrapper for XSLT stylesheets that offer the
                    ability to create HTML. Paramters offer different ways to render HTML when
                    making calls to widgets. Note that the variable value <emphasis role="italic"
                        >$isPastInitiated</emphasis> is passed as a parameter to widgets_render so
                    that the html <emphasis role="italic">readOnly</emphasis> attribute is generated
                    when the form is past the initiator’s node.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Lazy importing of EDL Styles</title>
            <para>You can configure Rice to lazily import an eDocLite style into the database on
                demand by setting a custom configuration parameter.<itemizedlist>
                    <listitem>
                        <para>Create a custom stylesheet file, e.g. myricestyle.xml containing a
                            style with a unique name, e.g. "xyzAppStyle" and store it in a location
                            that is locally accessible to your application server. </para>
                    </listitem>
                    <listitem>
                        <para>Set a configuration parameter named <emphasis role="bold"
                                >edl.style.&lt;style-name></emphasis> with the value being a path to
                            the file containing your style. Following the example above, you would
                            name your parameter "edl.style.xyzAppStyle". </para>
                    </listitem>
                </itemizedlist></para>
            <para>The stylesheet file could referenced could contain a full EDL, or be a standalone
                EDL style. On first use of that named style by an EDL, the file will be parsed and
                the named style will be imported into the database. The following example contains
                just an eDocLite XSL stylesheet:</para>
            <programlisting>&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;edoclite xmlns="ns:workflow/EDocLite" xsi:schemaLocation="ns:workflow/EDocLite resource:EDocLite">
        &lt;style name="xyzAppStyle">
            &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:wf="http://xml.apache.org/xalan/java/org.kuali.rice.kew.edoclite.WorkflowFunctions">
                &lt;!-- your custom stylesheet -->
            &lt;/xsl:stylesheet>
        &lt;/style>
    &lt;/edoclite>

&lt;/data>
</programlisting>
            <para>Note that in a default Rice installation (starting in version 1.0.2), the
                "widgets" style is lazily imported using this mechanism. In
                common-config-defaults.xml (which is located in the rice-impl jar), the following
                parameter is defined:</para>
            <programlisting>&lt;param name="edl.style.widgets" override="false">classpath:org/kuali/rice/kew/edl/default-widgets.xml&lt;/param></programlisting>
            <para>If you wanted to override that file, you could define your own parameter in your
                Rice XML configuration file using the above example as a template, but removing the
                override="false" attribute.</para>
            <sect3>
                <title>Document Type</title>
                <para>A <emphasis role="italic">document type</emphasis> defines the workflow
                    process for an eDocLite. You can create hierarchies where Child document types
                    inherit attributes of their Parents. At some level, a document type specifies
                    routing information. The document type definition for our first example follows.
                    It contains routing information that describes the route paths possible for a
                    document.</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        &lt;documentType>
            &lt;name>eDoc.Example1Doctype&lt;/name>
            &lt;parent>eDoc.Example1.ParentDoctype&lt;/parent>
            &lt;description>eDoc.Example1 Request DocumentType&lt;/description>
            &lt;label>eDoc.Example1 Request DocumentType&lt;/label>
            &lt;postProcessorName>org.kuali.rice.kew.edl.EDocLitePostProcessor&lt;/postProcessorName>
            &lt;superUserGroupName namespace="KUALI">eDoc.Example1.SuperUsers&lt;/superUserGroupName>
            &lt;blanketApprovePolicy>NONE&lt;/blanketApprovePolicy>
            &lt;defaultExceptionGroupName namespace="KUALI">eDoc.Example1.defaultExceptions&lt;/defaultExceptionGroupName>
            &lt;docHandler>${workflow.url}/EDocLite&lt;/docHandler>
            &lt;active>true&lt;/active>
            &lt;routingVersion>2&lt;/routingVersion>
            &lt;routePaths>
                &lt;routePath>
                    &lt;start name="Initiated" nextNode="eDoc.Example1.Node1" />
                    &lt;requests name="eDoc.Example1.Node1" />
                &lt;/routePath>
            &lt;/routePaths>
            &lt;routeNodes>
                &lt;start name="Initiated">
                    &lt;activationType>P&lt;/activationType>
                    &lt;mandatoryRoute>false&lt;/mandatoryRoute>
                    &lt;finalApproval>false&lt;/finalApproval>
                &lt;/start>
                &lt;requests name="eDoc.Example1.Node1">
                    &lt;activationType>P&lt;/activationType>
                    &lt;ruleTemplate>eDoc.Example1.Node1&lt;/ruleTemplate>
                    &lt;mandatoryRoute>false&lt;/mandatoryRoute>
                    &lt;finalApproval>false&lt;/finalApproval>
                &lt;/requests>
            &lt;/routeNodes>
        &lt;/documentType>
    &lt;/documentTypes>
&lt;/data>
</programlisting>
                <para>The Parent element refers to a hierarchical order of the document types.
                    Usually, you create one Root document type with limited but common information.
                    Then, under that, you create more specific document types. In our example, there
                    are only two levels.</para>
                <para>The Root document type definition for our first example:</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        &lt;documentType>
            &lt;name>eDoc.Example1.ParentDoctype&lt;/name>
            &lt;description>eDoc.Example1 Parent Doctype&lt;/description>
            &lt;label>eDoc.Example1 Parent Document&lt;/label>
            &lt;postProcessorName>org.kuali.rice.kew.edl.EDocLitePostProcessor&lt;/postProcessorName>
            &lt;superUserGroupName namespace="KUALI">eDoc.Example1.SuperUsers&lt;/superUserGroupName>
            &lt;blanketApprovePolicy>NONE&lt;/blanketApprovePolicy>
            &lt;docHandler>${workflow.url}/EDocLite&lt;/docHandler>
            &lt;active>true&lt;/active>
            &lt;routingVersion>2&lt;/routingVersion>
            &lt;routePaths />
        &lt;/documentType>
    &lt;/documentTypes>
&lt;/data>
</programlisting>
                <para>A Child document type can inherit most element values, although you must
                    define certain element values, like <emphasis role="italic"
                        >postProcessor</emphasis>, for each Child document type.</para>
                <para>A brief explanation of elements that are not intuitive is below. You can find
                    additional element explanations by reading the Document Type Guide.</para>
            </sect3>
            <sect3>
                <title>Parent DocType</title>
                <para><emphasis role="bold">postProcessorName</emphasis> - Use the default, as shown
                    above, unless special processing is needed. </para>
                <para><emphasis role="bold">blanketApprovePolicy</emphasis> – When specified as
                    NONE, this means that a user cannot click a single button that satisfies
                    multiple levels of approval. </para>
                <para><emphasis role="bold">dochandler</emphasis> - Use the default, as shown above,
                    so URLs are automatically unique in each environment, based on settings in the
                    Application Constants (i.e., unique in each Test environment and unique again in
                    Production). </para>
                <para><emphasis role="bold">active</emphasis> - Set this element to <emphasis
                        role="italic">false</emphasis> to disable this feature. </para>
                <para><emphasis role="bold">routingVersion</emphasis> - Use the default, as shown
                    above. </para>
            </sect3>
            <sect3>
                <title>Child DocType</title>
                <para><emphasis role="bold">name</emphasis> - The name value must exactly match the
                    value in the <emphasis role="italic">EDL Association</emphasis> document type
                    element. </para>
                <para><emphasis role="bold">parent</emphasis> - The parent value must exactly match
                    the name value of the parent document type. </para>
                <para><emphasis role="bold">superUserGroupName</emphasis> - A group of people who
                    have special privileges that can be defined using the management service that’s
                    part of the KIM module. </para>
                <para><emphasis role="bold">defaultExceptionGroupName</emphasis> - A group of people
                    who address a document of this type when it goes into Exception routing </para>
                <para><emphasis role="bold">routePaths</emphasis> and <emphasis role="bold"
                        >routePath</emphasis> - The initial elements that summarize the routing path
                    the document will follow. In our example, an initiator fills out an eDocLite
                    form. When the initiator submits that form, where it is routed depends on the
                    value in the <emphasis role="italic">Campus</emphasis> field. There is only one
                    destination node in our first example. The submitted form goes to either the IUB
                    person or the IUPUI person, depending on the selection in the <emphasis
                        role="italic">Campus</emphasis> field. </para>
                <para>In most cases, a workgroup of people is the destination for an EDL form, not a
                    single person. Workgroups are used as destinations because anyone in the
                    workgroup can open the document, edit it, and click an <emphasis role="bold"
                        >Action</emphasis> button that routes the document to the next node. This
                    prevents delays when someone is out of the office and a document awaits their
                    action.</para>
                <para>When the initiator submits the document, KEW adds that document to the Action
                    List of the destination person or workgroup. The destination person or workgroup
                    can then open the document, edit it (if any fields are available for editing),
                    and click an <emphasis role="bold">Action</emphasis> button such as <emphasis
                        role="bold">Approve</emphasis>, which routes the document onward. In our
                    case, there is no further destination, so when the destination person or
                    workgroup approves the document, the document becomes <emphasis role="bold"
                        >Final</emphasis> (it is finished). Some real-life examples have ten or more
                    nodes for approvals or other actions. A document may bypass some of those nodes,
                    depending on data placed into the form by previous participants. </para>
                <para><emphasis role="bold">routeNodes</emphasis>- Redefines the route path. </para>
                <para><emphasis role="bold">activationType</emphasis>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">P</emphasis> stands for <emphasis
                                    role="italic">parallel</emphasis> and is almost always used.
                                This value makes more sense when considered from a <emphasis
                                    role="italic">target node</emphasis> perspective. From that
                                perspective, it means that if a workgroup of people all received the
                                document in their Action List, any one, in any order, can approve
                                it. Once it is approved by anyone in the workgroup, it is routed to
                                the next node, and KEW removes the document from the Action List of
                                all the people in the workgroup. activationType </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">S</emphasis> stands for <emphasis
                                    role="italic">sequential</emphasis> and is reserved for special
                                cases where rules can specify that two or more people in a workgroup
                                must take Action on a document, in a specific order, before KEW will
                                route the document to the next node. </para>
                        </listitem>
                    </itemizedlist></para>
                <para><emphasis role="bold">mandatoryRoute</emphasis> - Use <emphasis role="italic"
                        >false</emphasis> unless there is a special condition to solve. When this
                    parameter is set to <emphasis role="italic">true</emphasis>, the document goes
                    into exception routing if an approve request isn't generated by the
                    ruleTemplate. This means that you are only expecting an <emphasis role="italic"
                        >approve</emphasis>, and nothing else. </para>
                <para><emphasis role="bold">finalApproval</emphasis> - Use false unless there is a
                    special condition to solve. When this parm is set to true, the document goes
                    into exception routing if approves are generated after this route node. This
                    means this must be the last Action, or it will go into exception routing. (Be
                    careful, because if this parameter is set to true and a user clicks a Return to
                    Previous button, then the next action button clicked sends the document into
                    exception handling.) </para>
                <para><emphasis role="bold">requests name</emphasis>= "..." - Defines the name of
                    the node </para>
                <para><emphasis role="bold">ruleTemplate</emphasis> - A named entity type that helps
                    define which routing rule fires. In our example, the <emphasis role="italic"
                        >ruleTemplate</emphasis> name is the same as the <emphasis role="italic"
                        >request</emphasis> name. These field values do NOT need to be the same.
                    They are simply identifiers. </para>
            </sect3>
            <sect3>
                <title>Rule Attributes</title>
                <para>The RuleAttribute is a mechanism that can relate directly to an edl field.
                    Most rule attributes are of the xml rule attribute type. This type uses an xpath
                    statement which is used by the workflow engine to match to a rule that fires or
                    does not fire. </para>
                <para>In the below example, it can be seen that the edl defined field named 'campus'
                    and its permissible values are defined. Then in the xpathexpression element
                    says; when the value in the edl field named 'campus' matches the rule that
                    contains 'IUB' the rule will fire. Or when the value in the edl field named
                    'campus' matches the rule that contains 'IUPUI' that rule will fire instead.
                    Rules firing route a document to a person or a workgroup of people. </para>
                <para>To make another rule attribute for a different field, clone this one, change
                    all references to the field 'campus' to your different edl field name. Then cut
                    and paste in the values section. Then in the edl definition, the new field must
                    carry the extra syntax 'attributeName='. For example the eld definition for
                    campus looks like this: </para>
                <programlisting>&lt;fieldDef name="campus" title="Campus" workflowType="ALL"></programlisting>
            </sect3>
            <sect3>
                <title>Rule Routing</title>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleAttributes xmlns="ns:workflow/RuleAttribute" xsi:schemaLocation="ns:workflow/RuleAttribute resource:RuleAttribute">
        &lt;ruleAttribute>
            &lt;name>EDL.Campus.Example&lt;/name>
            &lt;className>org.kuali.rice.kew.rule.xmlrouting.StandardGenericXMLRuleAttribute&lt;/className>
            &lt;label>EDL Campus Routing&lt;/label>
            &lt;description>EDL School Routing&lt;/description>
            &lt;type>RuleXmlAttribute&lt;/type>
            &lt;routingConfig>
                &lt;fieldDef name="campus" title="Campus" workflowType="ALL">
                    &lt;display>
                        &lt;type>select&lt;/type>
                        &lt;values title="IUB">IUB&lt;/values>
                        &lt;values title="IUPUI">IUPUI&lt;/values>
                    &lt;/display>
                    &lt;validation required="false" />
                    &lt;fieldEvaluation>
                        &lt;xpathexpression>//campus = wf:ruledata('campus')&lt;/xpathexpression>
                    &lt;/fieldEvaluation>
                &lt;/fieldDef>
                &lt;xmlDocumentContent>
                    &lt;campus>%campus%&lt;/campus>
                &lt;/xmlDocumentContent>
            &lt;/routingConfig>
        &lt;/ruleAttribute>
    &lt;/ruleAttributes>

&lt;/data>
</programlisting>
                <para>Rule attributes can have a different types such a searchable, but this type
                    does not have to do with routing. Instead it relates to additional columns that
                    are displayed in doc search for a particular doc type.</para>
            </sect3>
            <sect3>
                <title>Ingestion Order</title>
                <para>Many components can go in at any time, but it is advisable to follow a pattern
                    to minimize the conflicts that can occur. A few pieces are co-dependent.<orderedlist>
                        <listitem>
                            <para>Basic Components: </para>
                        </listitem>
                        <listitem>
                            <para>Widgets.xml (If changed or not previously in the environment)
                            </para>
                        </listitem>
                        <listitem>
                            <para>Kim Group(s) </para>
                        </listitem>
                        <listitem>
                            <para>Rule Attributes </para>
                        </listitem>
                        <listitem>
                            <para>Rule Template(s) </para>
                        </listitem>
                        <listitem>
                            <para>Parent Doctype (often no routing so data is more generic, but do
                                put routing here if children will use common routing.) </para>
                        </listitem>
                        <listitem>
                            <para>Children Doctype(s) (routing defined here or on Parent) </para>
                        </listitem>
                        <listitem>
                            <para>EDL Form </para>
                        </listitem>
                        <listitem>
                            <para>Rule routing rule (Used if rules are created; explained later- 1
                                per parent doctype) </para>
                        </listitem>
                        <listitem>
                            <para>Rules (Create or Ingest) </para>
                        </listitem>
                        <listitem>
                            <para>Anything else - Like optional custom Email Stylesheet </para>
                        </listitem>
                    </orderedlist></para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>Customizing Document Search</title>
        <para>Each document carries an XML payload that describes metadata. You can specify pieces
            of that metadata to be indexed and searched on. This area focuses on the interface for
            searching through that data. For each <emphasis role="bold">Document Search</emphasis>
            page, you must setup the XML configuration files to define the search criteria and
            result fields. </para>
        <sect2>
            <title>Custom Search Screen</title>
            <para>As an example of customizing a Document Search screen, we’ll use a customized
                    <emphasis role="bold">Delete Course Request</emphasis> screen:</para>
            <figure><title>Custom Search Screen: Delete Course Example</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="../images/delete_course_request.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <sect3>
                <title>What are custom document search attributes? </title>
                <para>Custom document search attributes are associated with a document type. They
                    specify which pieces of document data will be made searchable for documents of
                    that type. When you take action on a document in the workflow engine, a
                    background process extracts the custom search attributes from the document and
                    adds them to a database table where they can be queried as part of a custom
                    document search. These custom search attributes are defined and associated along
                    with document types in WorflowData XML files, and are added to Rice via the XML
                    ingester. They are defined within (using XPath notation)
                    /data/ruleAttributes/ruleAttribute tags, and are associated with specific
                    document types within /data/documentTypes/documentType/attributes/attribute
                    tags. </para>
                <para>A custom search attribute's logic is defined in a Java class that implements
                    the SearchAttribute interface. A SearchableAttribute implementation defines: <itemizedlist>
                        <listitem>
                            <para>What parts of the document content will be made searchable </para>
                        </listitem>
                        <listitem>
                            <para>Which fields will be present in the document search interface
                            </para>
                        </listitem>
                        <listitem>
                            <para>Which columns will be shown in the search results </para>
                        </listitem>
                        <listitem>
                            <para>What is considered valid user input for the custom search fields
                            </para>
                        </listitem>
                    </itemizedlist></para>
                <para>There is a built in SearchAttribute implementation, SearchableXMLAttribute,
                    that is highly configurable via XML and will meet most requirements. If there is
                    need for more complex or specific behavior, a custom SearchAttribute
                    implementation can be written and utilized as well.</para>
                <para><emphasis role="bold">DocumentSearchAttributes</emphasis> is much like
                        <emphasis role="bold">XMLRuleAttributes</emphasis>, except that
                    DocumentSearchAttributes is responsible for drawing input fields on the Document
                    Search form and collecting data for the query, as opposed to analyzing data for
                    routing evaluation (done by XMLRuleAttributes).</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Hide Search Fields and Result Columns</title>
            <para>In a search configuration, the <emphasis role="bold">&lt;visibility></emphasis>
                tag lets you configure search criteria to be included or excluded from the entry of
                search criteria or from the search results. You can use the <emphasis role="bold"
                    >&lt;visibility></emphasis> tag on all field(s) and column(s) in the Document
                Search results except for <emphasis role="bold">Document Id</emphasis> and <emphasis
                    role="bold">Route Log</emphasis>, which must always be visible.</para>
            <sect3>
                <title>Hide a result column</title>
                <programlisting>&lt;visibility>
    &lt;column visible="false"/>

&lt;/visibility>
</programlisting>
            </sect3>
            <sect3>
                <title>Hide a search field</title>
                <programlisting>&lt;visibility>
    &lt;field visible="false"/>
&lt;/visibility>
</programlisting>
            </sect3>
            <sect3>
                <title>Field and column visibility based on workgroup membership</title>
                <para>Use code like this in the XML file to display column(s) and field(s) based on
                    the user's workgroup:</para>
                <programlisting>&lt;visibility>
    &lt;field>
        &lt;isMemberOfWorkgroup>WorkflowAdmin&lt;/isMemberOfWorkgroup>
    &lt;/field>
    &lt;column>
        &lt;isMemberOfWorkgroup>WorkflowAdmin&lt;/isMemberOfWorkgroup>
    &lt;/column>
&lt;/visibility>
</programlisting>
                <para>The example above indicates that the field and column only display for users
                    who are a member of the workgroup, <emphasis role="italic"
                        >WorkflowAdmin</emphasis>.</para>
            </sect3>
            <sect3>
                <title>Configure visibility for both field and column</title>
                <para>A shortcut to configure the visibility for both fields and columns is the
                        <emphasis role="bold">&lt;fieldAndColumn></emphasis> tag. A
                    &lt;fieldAndColumn> example:</para>
                <programlisting>&lt;visibility>
    &lt;fieldAndColumn>
        &lt;isMemberOfWorkgroup>WorkflowAdmin&lt;/isMemberOfWorkgroup>
    &lt;/fieldAndColumn>
&lt;/visibility>
</programlisting>
            </sect3>
            <sect3>
                <title>No field visibility</title>
                <para>Declaring <emphasis role="bold">&lt;type></emphasis> as hidden is equivalent
                    to setting visibility to false. An example of <emphasis role="bold"
                        >&lt;type></emphasis> and <emphasis role="bold">&lt;visibility></emphasis>,
                    equivalent to a hidden field:</para>
                <programlisting>&lt;searchingConfig>
    &lt;fieldDef name="department" title="Department">
        &lt;display>
            &lt;type>text&lt;/type>
        &lt;/display>
        &lt;visibility>
            &lt;field visible="false"/>
        &lt;/visibility>
        &lt;fieldEvaluation>
            &lt;xpathexpression>normalize-space(substring-before(//department, ' '))&lt;/xpathexpression>
        &lt;/fieldEvaluation>
    &lt;/fieldDef>

&lt;/searchingConfig>


&lt;!-- The above is equivalent to the following searching configuration -->

&lt;searchingConfig>
    &lt;fieldDef name="department" title="Department">
        &lt;display>
            &lt;type>hidden&lt;/type>
        &lt;/display>
        &lt;fieldEvaluation>
            &lt;xpathexpression>normalize-space(substring-before(//department, ' '))&lt;/xpathexpression
>
        &lt;/fieldEvaluation>
    &lt;/fieldDef>

&lt;/searchingConfig>
</programlisting>
            </sect3>
        </sect2>
        <sect2>
            <title>Configure Lookup Function</title>
            <para>To make a lookupable available on the Document Search screen, you can use the
                    <emphasis role="bold">&lt;quickfinder></emphasis> tag in the attribute
                definition. You can use the terms <emphasis role="italic">quickfinder</emphasis>,
                    <emphasis role="italic">lookup</emphasis>, and <emphasis role="italic"
                    >lookupable</emphasis> interchangeably. </para>
            <para>For example, you could set up an organizational hierarchic concept such as
                    <emphasis role="bold">Charts and Orgs</emphasis> to implement a search. You
                could set up the code to perform this search using the <emphasis role="bold"
                    >ChartOrgLookupableImpl</emphasis> institutional plugin. This is an example of a
                standard lookupable component.</para>
            <para>In the institutional plug-in, <emphasis role="bold"
                    >ChartOrgLookupableImpl</emphasis> is identified in the
                LookupableServiceExtension by the name of <emphasis role="bold"
                    >ChartOrgLookupableImplservice</emphasis>. <emphasis role="bold"
                    >ChartOrgLookupableImpl</emphasis> exposes two return parameters, which are:<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">Fin_coa_cd</emphasis>: Represents the chart code
                        </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">Org_cd</emphasis>: Represents the organization
                            code </para>
                    </listitem>
                </itemizedlist></para>
            <para>An XML example of setting up a lookupable on the Document Search screen: <emphasis
                    role="bold">ChartOrgSearchAttribute.xml</emphasis></para>
            <programlisting>&lt;ruleAttribute>
    &lt;name>ChartOrgSearchAttribute&lt;/name>
    &lt;className>org.kuali.rice.kew.docsearch.xml.StandardGenericXMLSearchableAttribute&lt;/className>
    &lt;label>TestQuickfinderSearchAttribute&lt;/label>
    &lt;description>TestQuickfinderSearchAttribute&lt;/description>
    &lt;type>SearchableXmlAttribute&lt;/type>
    &lt;searchingConfig>
        &lt;fieldDef name="chart" title="Chart">
            &lt;display>
                &lt;type>text&lt;/type>
            &lt;/display>
            &lt;quickfinder service="ChartOrgLookupableImplService" appliesTo="fin_coa_cd" draw="false"/>
            &lt;fieldEvaluation>
                &lt;xpathexpression>//chart&lt;/xpathexpression>
            &lt;/fieldEvaluation>
        &lt;/fieldDef>
        &lt;fieldDef name="org" title="Organization">
            &lt;display>
                &lt;type>text&lt;/type>
            &lt;/display>
            &lt;quickfinder service="ChartOrgLookupableImplService" appliesTo="org_cd" draw="true"/>
            &lt;fieldEvaluation>
                &lt;xpathexpression>//org&lt;/xpathexpression>
            &lt;/fieldEvaluation>
        &lt;/fieldDef>
        &lt;xmlSearchContent>
            &lt;chartOrg>
                &lt;chart>%chart%&lt;/chart>
                &lt;org>%org%&lt;/org>
            &lt;/chartOrg>
        &lt;/xmlSearchContent>
    &lt;/searchingConfig>
&lt;/ruleAttribute>
</programlisting>
            <para>In the XML example above, there are two <emphasis role="bold"
                    >&lt;quickfinder></emphasis> tags representing the <emphasis role="bold">Chart
                    (fin_coa_cd)</emphasis> and <emphasis role="bold">Org (org_cd)</emphasis>
                search. Notice the <emphasis role="bold">draw</emphasis> attribute for the <emphasis
                    role="bold">Org (org_cd)</emphasis> search is set <emphasis role="bold"
                    >true</emphasis>. This means that a search icon will be displayed on the
                Document Search screen. Based on the XML code above, the final Document Search
                screen looks like this:</para>
            <figure><title>Custom Document Search: Department Example</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="../images/document_search.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
        </sect2>
        <sect2>
            <title>Define Keyword Search</title>
            <para>XMLSearchableAttributeStdFloatRang is an XML searchable attribute that enhances
                the keyword search function. It provides multiple searchable elements for a user to
                select under the &lt;searchingConfig> section. This example is the
                XMLSearchableAttributeStdFloatRang attribute in the default setting:</para>
            <programlisting>&lt;ruleAttribute>
    &lt;name>XMLSearchableAttributeStdFloatRange&lt;/name>
    &lt;className>org.kuali.rice.kew.docsearch.xml.StandardGenericXMLSearchableAttribute&lt;/className>
    &lt;label>XML Searchable attribute&lt;/label>
    &lt;description>XML Searchable attribute&lt;/description>
    &lt;type>SearchableXmlAttribute&lt;/type>
    &lt;searchingConfig>
        &lt;fieldDef name="testFloatKey" title="Float in the Water">
            &lt;display>
                &lt;type>text&lt;/type>
            &lt;/display>
            &lt;searchDefinition dataType="float">
                &lt;rangeDefinition inclusive="false">
                    &lt;lower label="starting"/>
                    &lt;upper label="ending"/>
                &lt;/rangeDefinition>
            &lt;/searchDefinition>
            &lt;fieldEvaluation>
                &lt;xpathexpression>//putWhateverWordsIwantInsideThisTag/testFloatKey/value&lt;/xpathexpression>
            &lt;/fieldEvaluation>
        &lt;/fieldDef>
        &lt;xmlSearchContent>
            &lt;putWhateverWordsIwantInsideThisTag>
                &lt;testFloatKey>
                    &lt;value>%testFloatKey%&lt;/value>
                &lt;/testFloatKey>
            &lt;/putWhateverWordsIwantInsideThisTag>
        &lt;/xmlSearchContent>
    &lt;/searchingConfig>
&lt;/ruleAttribute>
</programlisting>
            <caution><para>Cautions about the &lt;searchingConfig> section:<orderedlist>
                        <listitem>
                            <para><emphasis role="bold">&lt;searchDefinition></emphasis> identifies
                                the search data type and search ranges. </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">&lt;rangeDefinition></emphasis> contains
                                both the <emphasis role="bold">&lt;lower></emphasis> and <emphasis
                                    role="bold">&lt;upper></emphasis> elements that set up the
                                parameters for the range search. </para>
                        </listitem>
                        <listitem>
                            <para>If you set the <emphasis role="bold"
                                    >&lt;display>&lt;type></emphasis> tag to be date, then KEW
                                automatically sets: <emphasis role="bold">&lt;searchDefinition
                                    dataType="datetime"></emphasis>. </para>
                        </listitem>
                        <listitem>
                            <para>If the data type that you enter is not a <emphasis role="italic"
                                    >datetime</emphasis>, then KEW sets all <emphasis role="italic"
                                    >datePicker</emphasis> attributes to <emphasis role="italic"
                                    >false</emphasis>. </para>
                        </listitem>
                        <listitem>
                            <para>Based on the <emphasis role="bold">dataType</emphasis> you enter,
                                    <emphasis role="italic">datePicker</emphasis> changes the
                                default setting to either <emphasis role="italic">true</emphasis> or
                                    <emphasis role="italic">false</emphasis>. </para>
                        </listitem>
                        <listitem>
                            <para>To use a range search, you can either set <emphasis role="bold"
                                    >&lt;searchDefinition rangeSearch="true"></emphasis> or put the
                                tag <emphasis role="bold">&lt;rangeDefinition></emphasis> under the
                                    <emphasis role="bold">&lt;searchDefinition></emphasis> tag.
                                Either way, KEW will force a range search. </para>
                        </listitem>
                    </orderedlist></para></caution>
        </sect2>
        <sect2>
            <title>Custom Search Criteria Processing</title>
            <sect3>
                <title>URL Parameter Options</title>
                <para>You can modify the search criteria and the display of the search screen by
                    passing in URL parameters. Only use this method when the configuration desired
                    is <emphasis role="italic">preferable</emphasis> and not <emphasis role="italic"
                        >required</emphasis>. If a particular piece of the search criteria is
                        <emphasis role="italic">required</emphasis>, please see the section below
                    titled, Using a Custom Search Criteria Processor.</para>
                <sect4>
                    <title>Force the link to display the Detailed Search screen</title>
                    <para>Use the parameter <emphasis role="bold">isAdvancedSearch</emphasis> and
                        set the value to <emphasis role="bold">YES</emphasis>.</para>
                </sect4>
                <sect4>
                    <title>Show or Hide All Criteria and/or the Workflow Header Bar</title>
                    <para>The default value of each of these parameters must be set to true to show
                        both the criteria and the header bar. <itemizedlist>
                            <listitem>
                                <para>To hide the header bar, use the URL parameter <emphasis
                                        role="bold">headerBarEnabled</emphasis> and set the value to
                                        <emphasis role="italic">false</emphasis>. </para>
                            </listitem>
                            <listitem>
                                <para>To hide the search criteria (including the buttons), use the
                                    URL parameter <emphasis role="bold"
                                        >searchCriteriaEnabled</emphasis> and set the value to
                                        <emphasis role="italic">false</emphasis>. </para>
                            </listitem>
                        </itemizedlist></para>
                </sect4>
                <sect4>
                    <title>Passing in Searchable Attribute Values</title>
                    <para>Use the URL parameter <emphasis role="bold"
                            >searchableAttributes</emphasis> to pass in searchable attribute values.
                        The value for <emphasis role="bold">searchableAttributes</emphasis> should
                        be a comma-delimited list of searchable attribute <emphasis role="bold"
                            >&lt;fieldDef></emphasis> names and values in the form <emphasis
                            role="bold">name:value</emphasis>. </para>
                    <para>Here is an example using two <emphasis role="bold"
                            >&lt;fieldDef></emphasis> objects with names <emphasis role="italic"
                            >firstname</emphasis> and <emphasis role="italic"
                        >lastname</emphasis>:</para>
                    <programlisting>http://yourlocalip:8080/DocumentSearch.do?searchableAttributes=firstname:John,lastname:Smith</programlisting>
                </sect4>
            </sect3>
            <sect3>
                <title>Using a Custom Search Criteria Processor</title>
                <para>The best way to do custom criteria processing is to implement a custom class
                    that extends the class <emphasis role="bold"
                        >org.kuali.rice.kew.docsearch.DocumentSearchCriteriaProcessor</emphasis>.
                    This file is ingested as a Workflow Attribute in KEW, using the <emphasis
                        role="bold">&lt;type></emphasis> of <emphasis role="bold"
                        >DocumentSearchCriteriaProcessorAttribute</emphasis>. Once the Workflow
                    Attribute is ingested, you can set the name value of the ingested attribute on
                    one or more document type xml definitions in the Attributes section. A document
                    type can only have one Criteria Processor Attribute. </para>
                <para>Creating a child class of the <emphasis role="bold"
                        >DocumentSearchCriteriaProcessor</emphasis> class, a client can override
                    various methods to modify the behavior of the search. The <emphasis role="bold"
                        >DocumentSearchCriteriaProcessor</emphasis> class can access the
                    WorkflowUser object of the user performing the search. By having access to these
                    objects, a custom processor class could implement dynamic hiding and showing of
                    specific criteria fields based on ordinary user’s data or search field
                    data.</para>
                <sect4>
                    <title>Show or Hide All Criteria and/or the Workflow Header Bar</title>
                    <para>Here are some helpful methods that you may override from the <emphasis
                            role="bold">DocumentSearchCriteriaProcessor</emphasis> class file to
                        hide or display full criteria (including buttons) and/or the header bar:<itemizedlist>
                            <listitem>
                                <para><emphasis role="bold">isHeaderBarDisplayed()</emphasis> – If
                                    this function returns <emphasis role="italic">false</emphasis>,
                                    KEW hides the header bar on both the advanced and basic search
                                    screens (default return value is <emphasis role="italic"
                                        >true</emphasis>). </para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold"
                                        >isBasicSearchCriteriaDisplayed()</emphasis> – If this
                                    function returns <emphasis role="italic">false</emphasis>, KEW
                                    hides criteria on the basic search screen (default return value
                                    is <emphasis role="italic">true</emphasis>). </para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold"
                                        >isAdvancedSearchCriteriaDisplayed()</emphasis> – If this
                                    function returns <emphasis role="italic">false</emphasis>, KEW
                                    hides the criteria on the advanced search screen (default return
                                    value is <emphasis role="italic">true</emphasis>). </para>
                            </listitem>
                        </itemizedlist></para>
                </sect4>
                <sect4>
                    <title>Hiding Specific Fields or Criteria Using Field Key Values</title>
                    <para>The DocumentSearchCriteriaProcessor class has methods that allow classes
                        to extend from it for basic field display. This is based on static string
                        key values and makes it easier for clients to allow basic field display or
                        to hide particular fields, whether they are searchable attributes or
                        standard Document Search fields.</para>
                    <para>You may override these methods from the <emphasis role="bold"
                            >DocumentSearchCriteriaProcessor</emphasis> class to do specific field
                        hiding by returning a list of string keys:<itemizedlist>
                            <listitem>
                                <para><emphasis role="bold">getGlobalHiddenFieldKeys()</emphasis> –
                                    This function returns a list of keys (strings) for fields to be
                                    hidden on both the basic and advanced search screen. </para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold"
                                        >getBasicSearchHiddenFieldKeys()</emphasis> – This function
                                    returns a list of keys (strings) for fields to be hidden on the
                                    basic search screen. </para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold"
                                        >getAdvancedSearchHiddenFieldKeys()</emphasis> – This
                                    function returns a list of keys (strings) for fields to be
                                    hidden on the advanced search screen. </para>
                            </listitem>
                        </itemizedlist></para>
                    <para>You can find the standard Document Search field key names in the class
                        file <emphasis role="bold"
                            >org.kuali.rice.kew.docsearch.DocumentSearchCriteriaProcessor</emphasis>.
                        They are constants prefixed by the text <emphasis role="bold"
                            >CRITERIA_KEY_</emphasis>. For example, the static criteria key for the
                            <emphasis role="bold">Document Id</emphasis> field is <emphasis
                            role="bold"
                            >DocumentSearchCriteriaProcessor.CRITERIA_KEY_DOCUMENT_ID</emphasis>.</para>
                    <para>A client can also use searchable attribute <emphasis role="bold"
                            >&lt;fieldDef></emphasis> name values to hide fields in the same way
                        that you use constants. If a particular searchable attribute <emphasis
                            role="bold">&lt;fieldDef></emphasis> name exists in a list returned by
                        one of the above <emphasis role="bold">hidden field key</emphasis> methods,
                        the criteria processor class overrides the default behavior of that
                            <emphasis role="bold">&lt;fieldDef></emphasis> searchable attribute for
                        visibility.</para>
                    <para>Here is a general example of a custom criteria processor class that
                        extends <emphasis role="bold"
                            >StandardDocumentSearchCriteriaProcessor</emphasis>:</para>
                    <programlisting>public class CustomDocumentSearchCriteriaProcessor extends DocumentSearchCriteriaProcessor {

/**
     
  *  Always hide the header bar on all search screens
     
  */
   
    @Override
    public boolean isHeaderBarDisplayed() {
        return Boolean.FALSE;
    
    }

    

/**
  *  Always hide all criteria and buttons on the advanced search screen
     
  */
    
    @Override
    public Boolean isAdvancedSearchCriteriaDisplayed() {
        return Boolean.FALSE;
    }


/**
  *  Hide the Initiator Criteria field on both Basic and Advanced Search screens
  */
    @Override
    public List&lt;String> getGlobalHiddenFieldKeys() {
        List&lt;String> hiddenKeys = super.getGlobalHiddenFieldKeys();
        hiddenKeys.add(DocumentSearchCriteriaProcessor.CRITERIA_KEY_INITIATOR);
        return hiddenKeys;
    }


/**
  *  Hide the Document Title criteria field on the basic search screen
  *  Hide the searchable attribute field with name 'givenname' on the basic search screen
  */
    @Override
    public List&lt;String> getBasicSearchHiddenFieldKeys() {
        List&lt;String> hiddenKeys = super.getAdvancedSearchHiddenFieldKeys();
        hiddenKeys.add(DocumentSearchCriteriaProcessor.CRITERIA_KEY_DOCUMENT_TITLE);
        hiddenKeys.add("givenname");
        return hiddenKeys;
    }


/**
  *  Hide the Document Title criteria field on the advanced search screen
  *  Hide the searchable attribute field with name 'givenname' on the basic search screen
  */
    
    @Override
    public List&lt;String> getAdvancedSearchHiddenFieldKeys() {
        List&lt;String> hiddenKeys = super.getAdvancedSearchHiddenFieldKeys();
        hiddenKeys.add(DocumentSearchCriteriaProcessor.CRITERIA_KEY_DOCUMENT_TITLE);
        hiddenKeys.add("givenname");
        return hiddenKeys;
    
    }
}
</programlisting>
                </sect4>
            </sect3>
        </sect2>
        <sect2>
            <title>Custom Search Generation</title>
            <para>The best way to do custom search generation or processing is to implement a custom
                class that extends the class <emphasis role="bold"
                    >org.kuali.rice.kew.impl.document.lookup.DocumentSearchGenerator</emphasis>. This file is
                ingested as a Workflow Attribute in KEW using the <emphasis role="bold"
                    >&lt;type></emphasis> value of DocumentSearchGeneratorAttribute. Once the
                Workflow Attribute is ingested, the name value of the ingested attribute can be set
                on one or more document type xml definitions in the Attributes section. A Document
                Type can only have one Search Generator Attribute.</para>
            <para>Using an extension of the <emphasis role="bold">DocumentSearchGenerator</emphasis>
                class, a client has access to override various methods to modify the behavior of the
                search. Also, the <emphasis role="bold">DocumentSearchGenerator</emphasis> class has
                helper methods that may be used to get the WorkflowUser object of the user
                performing the search. </para>
            <sect3>
                <title>Implementing a Custom Result Set Limit</title>
                <para>To implement a custom result set limit, simply override the method <emphasis
                        role="bold">getDocumentSearchResultSetLimit()</emphasis> from the <emphasis
                        role="bold">StandardDocumentSearchGenerator</emphasis> class.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Custom Search Results</title>
            <para>You can create a Custom Search Result table using an XML rule attribute of the
                type <emphasis role="bold"
                >DocumentSearchRsultXMLResultProcessorAttribute</emphasis>.</para>
            <para>The <emphasis role="italic">standard</emphasis> Search Result table:</para>
            <figure><title>Standard Doc Search Results Set</title>
                <mediaobject>
                    <imageobject>
                        <imagedata fileref="../images/standard_search_result_table.png"/>
                    </imageobject>
                </mediaobject>
            </figure>
            <para>The Standard Search Result fields: <itemizedlist>
                    <listitem>
                        <para>Document Id </para>
                    </listitem>
                    <listitem>
                        <para>Type </para>
                    </listitem>
                    <listitem>
                        <para>Title </para>
                    </listitem>
                    <listitem>
                        <para>Route Status </para>
                    </listitem>
                    <listitem>
                        <para>Initiator </para>
                    </listitem>
                    <listitem>
                        <para>Date Created </para>
                    </listitem>
                    <listitem>
                        <para>Route log </para>
                    </listitem>
                </itemizedlist></para>
            <para>The fields of <emphasis role="bold">Document Id</emphasis> and <emphasis
                    role="bold">Route Log</emphasis> are always shown in the farthest left and right
                columns of the Search Result table. These fields cannot be hidden. You can add both
                columns a second time in the XML search result attributes if needed.</para>
            <sect3>
                <title>Custom XML Document Search Result Processor Attribute</title>
                <para>An example of a custom XML result processor: </para>
                <programlisting>&lt;ruleAttribute>
    &lt;name>KualiContractsAndGrantsDocSearchResultProcessor&lt;/name>

    &lt;className>org.kuali.rice.kew.docsearch.xml.DocumentSearchXMLResultProcessorImpl&lt;/className>
    &lt;label>Contracts &amp;amp; Grants Document Search Result Processor&lt;/label>
    &lt;description>Attribute to allow for custom search results for Contracts &amp;amp; Grants documents&lt;/description>
    &lt;type>DocumentSearchXMLResultProcessorAttribute&lt;/type>
    &lt;searchResultConfig overrideSearchableAttributes="false" showStandardSearchFields="false">
        &lt;column name="docTypeLabel" />
        &lt;column name="docRouteStatusCodeDesc" />
        &lt;column name="initiator" />
        &lt;column name="dateCreated" />
    &lt;/searchResultConfig>

&lt;/ruleAttribute>
</programlisting>
                <para>The result of the code displayed above is a Search Result table with these
                    columns: <itemizedlist>
                        <listitem>
                            <para>Document Id </para>
                        </listitem>
                        <listitem>
                            <para>Type </para>
                        </listitem>
                        <listitem>
                            <para>Route Status </para>
                        </listitem>
                        <listitem>
                            <para>Initiator </para>
                        </listitem>
                        <listitem>
                            <para>Date Created </para>
                        </listitem>
                        <listitem>
                            <para>Route Log </para>
                        </listitem>
                    </itemizedlist></para>
                <para>The key for the search result customization is focused on the elements and
                    column tag(s) under the &lt;searchResultConfig>.</para>
                    <para>Attributes that are included in the &lt;searchResultConfig> tag:</para><itemizedlist>
                            <listitem>
                                <para><emphasis role="bold">overrideSearchableAttributes</emphasis>:
                                    The indicator of whether to display the column <emphasis
                                        role="italic">name</emphasis> attributes defined by the
                                    searchAttribute fieldDef 'name's configured by setting the
                                        <emphasis role="italic">true</emphasis> or <emphasis
                                        role="italic">false</emphasis>
                                    <itemizedlist>
                                        <listitem>
                                            <para><emphasis role="italic">true</emphasis>: Display
                                                the &lt;column> <emphasis role="italic"
                                                  >name</emphasis> attributes based on
                                                searchAttribute fieldDef names. </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis role="italic">false</emphasis>: Display
                                                the <emphasis role="italic">name</emphasis> based on
                                                the &lt;column> attribute. </para>
                                        </listitem>
                                    </itemizedlist></para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold">showStandardSearchFields</emphasis>: The
                                    indicator of whether to display the standard search fields by
                                    setting the value <emphasis role="italic">true</emphasis> or
                                        <emphasis role="italic">false</emphasis>. <itemizedlist>
                                        <listitem>
                                            <para><emphasis role="italic">true</emphasis>: Display
                                                the search result with the standard result fields;
                                                the <emphasis role="italic">name</emphasis>
                                                attribute of the &lt;column> tag should match the
                                                values in the java file <emphasis role="italic"
                                                  >DocumentSearchResult.java</emphasis>. </para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis role="italic">false</emphasis>: Display
                                                the search result based on the custom result fields.
                                            </para>
                                        </listitem>
                                    </itemizedlist></para>
                            </listitem>
                        </itemizedlist>                
                <para>Attributes that can be added in a &lt;column> tag:</para>
                <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">Name</emphasis>: The key for connecting the
                                value of a particular attribute. For example, <emphasis
                                    role="italic">routeHeaderId</emphasis> equals <emphasis
                                    role="italic">Document Id</emphasis>. For more information about
                                the attribute key, please refer to the Key reference table below.
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Title</emphasis>: The title of the field
                            </para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">Sortable</emphasis>: The indicator of
                                whether to sort the search result by setting the value <emphasis
                                    role="italic">true</emphasis> or <emphasis role="italic"
                                    >false</emphasis>
                                <itemizedlist>
                                    <listitem>
                                        <para><emphasis role="italic">true</emphasis>: Sort option
                                            for this column is enabled to sort either alphabetically
                                            or numerically depending on attribute type. </para>
                                    </listitem>
                                    <listitem>
                                        <para><emphasis role="italic">false</emphasis>: Sort option
                                            for this column is disabled. </para>
                                    </listitem>
                                </itemizedlist></para>
                        </listitem>
                    </itemizedlist>
                <para>For &lt;column> with sortable = <emphasis role="italic">true</emphasis>, the
                    field title becomes a link and when a user clicks the link, KEW sorts the
                    results by that column.</para>
                <para>An example of a custom ruleAttribute:</para>
                <programlisting>&lt;ruleAttribute>
    &lt;name>KualiContractsAndGrantsDocSearchResultProcessor&lt;/name>

    &lt;className>org.kuali.rice.kew.docsearch.xml.DocumentSearchXMLResultProcessorImpl&lt;/className>
    &lt;label>Contracts &amp;amp; Grants Document Search Result Processor&lt;/label>
    &lt;description>Attribute to allow for custom search results for Contracts &amp;amp; Grants documents&lt;/description>
    &lt;type>DocumentSearchXMLResultProcessorAttribute&lt;/type>
    &lt;searchResultConfig overrideSearchableAttributes="true" showStandardSearchFields="false">
        &lt;column name="docTypeLabel" />
        &lt;column name="docRouteStatusCodeDesc" />
        &lt;column name="initiator" />
        &lt;column name="dateCreated" />
        &lt;column name="proposal_number" />
        &lt;column name="chart" />
        &lt;column name="organization" />
        &lt;column name="proposal_award_status" />
        &lt;column name="agency_report_name" />
    &lt;/searchResultConfig>
&lt;/ruleAttribute>
</programlisting>
                <para>
                    <table frame="none">
                        <title>Key Reference Table: Default field names and reference keys </title>
                        <tgroup cols="2">
                            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                            <thead>
                                <row>
                                    <entry>Field</entry>
                                    <entry>Key</entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>Document Id </entry>
                                    <entry>routeHeaderId </entry>
                                </row>
                                <row>
                                    <entry>Type </entry>
                                    <entry>docTypeLabel </entry>
                                </row>
                                <row>
                                    <entry>Title </entry>
                                    <entry>documentTitle </entry>
                                </row>
                                <row>
                                    <entry>Route Status </entry>
                                    <entry>docRouteStatusCodeDesc </entry>
                                </row>
                                <row>
                                    <entry>Initiator </entry>
                                    <entry>initiator </entry>
                                </row>
                                <row>
                                    <entry>Date Created </entry>
                                    <entry>dateCreated </entry>
                                </row>
                                <row>
                                    <entry>Route Log </entry>
                                    <entry>routeLog </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
            </sect3>
            <sect3>
                <title>Custom Document Search Result Processor Class File</title>
                <para>You may also use a custom Document Search Result Processor by extending the
                    class <emphasis role="bold"
                        >org.kuali.rice.kew.docsearch.StandardDocumentSearchResultProcessor</emphasis>
                    and overriding individual methods.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Differences between SearchableAttribute and RuleAttribute</title>
            <itemizedlist>
                <listitem>
                    <para>SearchableAttribute does NOT have a <emphasis role="bold"
                            >workflowType</emphasis> attribute in the field tag. </para>
                </listitem>
                <listitem>
                    <para>For SearchableAttribute, <emphasis role="bold">xpathexpression</emphasis>
                        indicates the value's location in the document; it does not use <emphasis
                            role="bold">wf:ruledata('')</emphasis>. For RuleAttribute,
                        xpathexpression is a Boolean expression. </para>
                </listitem>
                <listitem>
                    <para>SearchableAttribute uses xmlSearchContent instead of xmlDocumentContent;
                        xmlDocumentContent is for RuleAttribute. </para>
                </listitem>
            </itemizedlist>
        </sect2>
        <sect2>
            <title>Document Security</title>
            <para>Kuali Enterprise Workflow provides a declarative mechanism to facilitate
                Document-level security for these three screens:<itemizedlist>
                    <listitem>
                        <para>Document Search </para>
                    </listitem>
                    <listitem>
                        <para>Route Log </para>
                    </listitem>
                    <listitem>
                        <para>Doc Handler Redirection </para>
                    </listitem>
                </itemizedlist></para>
        </sect2>
        <sect2>
            <title>Overview</title>
            <orderedlist>
                <listitem>
                    <para>You can create a security definition on a <emphasis role="bold">Document
                            Type</emphasis>, which allows you to apply varying levels and types of
                        security. </para>
                </listitem>
                <listitem>
                    <para>This definition is inheritable through the Document Type hierarchy.
                    </para>
                </listitem>
                <listitem>
                    <para>If security is defined on a Document Type, rows for that Document Type
                        that are returned from a search apply the security constraints and filter
                        the row if the constraints fail. </para>
                </listitem>
                <listitem>
                    <para>Security constraints are evaluated against a document when its <emphasis
                            role="bold">Route Log</emphasis> is accessed. If the security
                        constraints fail, the user receives a <emphasis role="italic">Not
                            Authorized</emphasis> message. </para>
                </listitem>
                <listitem>
                    <para>Security constraints are evaluated against a document when a <emphasis
                            role="bold">Doc Handler</emphasis> link is clicked from either the
                            <emphasis role="bold">Action List</emphasis> or <emphasis role="bold"
                            >Document Search</emphasis>. If the security constraints fail, the user
                        receives a <emphasis role="italic">Not Authorized</emphasis> message.
                    </para>
                </listitem>
            </orderedlist>
        </sect2>
        <sect2>
            <title>Security Definition</title>
            <para>You can define the security constraints in the Document Type XML. Here's a sample
            of the XML format:</para>
            <programlisting>&lt;documentType>
    ....
    &lt;security>
        &lt;securityAttribute class="org.kuali.security.SecurityFilterAttribute"/>
        &lt;securityAttribute name="TestSecurityAttribute"/>
        &lt;initiator>true&lt;/initiator>
        &lt;routeLogAuthenticated>true&lt;/routeLogAuthenticated>
        &lt;searchableAttribute idType="emplid" name="emplid"/>
        &lt;group>MyWorkgroup&lt;/group>
        &lt;role allowed="true">FACULTY&lt;/role>
        &lt;role allowed="true">STAFF&lt;/role>
    &lt;/security>
    ....

&lt;/documentType>
</programlisting>
            <para>There is an implicit <emphasis role="bold">OR</emphasis> in the evaluation of
                these constraints. Thus, the definition above states that the authenticated user has
                access to the document if:<itemizedlist>
                    <listitem>
                        <para>The attribute <emphasis role="bold"
                                >org.kuali.security.SecurityFilterAttribute</emphasis> defines the
                            user as having access <emphasis role="bold">OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The attribute defined in the system by the name <emphasis role="bold"
                                >TestSecurityAttribute</emphasis> defines the user as having access
                                <emphasis role="bold">OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The user is the initiator of the document <emphasis role="bold"
                                >OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The user is on the Route Log of the document <emphasis role="bold"
                                >OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The user’s EMPL ID is equal to the searchable attribute on the
                            document with the key of <emphasis role="italic">emplid</emphasis>
                            <emphasis role="bold">OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The user is a member of the <emphasis role="italic"
                                >MyWorkgroup</emphasis> workgroup <emphasis role="bold"
                                >OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The user has the FACULTY role <emphasis role="bold">OR</emphasis>
                        </para>
                    </listitem>
                    <listitem>
                        <para>The user has the STAFF role </para>
                    </listitem>
                </itemizedlist></para>
            <sect3>
                <title>&lt;initiator></title>
                <para>Validates that the authenticated user is or isn't the initiator of the
                    document.</para>
            </sect3>
            <sect3>
                <title>&lt;routeLogAuthenticated></title>
                <para>Validates that the authenticated user is or isn't <emphasis role="italic"
                        >Route Log Authenticated</emphasis>.</para>
                <para><emphasis role="italic">Route Log Authenticated</emphasis> means that one of
                    these is true:<orderedlist>
                        <listitem>
                            <para>The user is the initiator of the document. </para>
                        </listitem>
                        <listitem>
                            <para>The user has taken action on the document. </para>
                        </listitem>
                        <listitem>
                            <para>The user has received a request for the document (either directly
                                or as the member of a workgroup). </para>
                        </listitem>
                    </orderedlist></para>
                <para><emphasis role="italic">Route Log Authenticated</emphasis> checks for security
                    but <emphasis role="bold">does not</emphasis> simulate or check future
                    requests.</para>
            </sect3>
            <sect3>
                <title>&lt;securityAttribute></title>
                <para>Validates based on a custom-defined class. Class must have implemented the
                        <emphasis role="italic">SecurityAttribute</emphasis> interface class. There
                    are two methods of defining a security attribute:<itemizedlist>
                        <listitem>
                            <para>Class Name: Define the fully qualified class name using the XML
                            attribute class</para>
                            <programlisting>&lt;documentType>
    ....
	
    &lt;security>
        &lt;securityAttribute class="org.kuali.security.SecurityFilterAttribute"/>
    &lt;/security>
    ....

&lt;/documentType>
</programlisting>
                        </listitem>
                        <listitem>
                            <para>KEW Attribute Name: Specify an already-defined attribute (via KEW
                                XML ingestion) using the XML attribute <emphasis role="italic"
                                    >name</emphasis>
                            </para>
                            <programlisting>&lt;documentType>
    ....
    &lt;security>
        &lt;securityAttribute name="TestSecurityAttribute"/>
    &lt;/security>
    ...
.
&lt;/documentType>
</programlisting>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
            <sect3>
                <title>&lt;searchableAttribute></title>
                <para>Validate that the authenticated User ID of the given idType is equivalent to
                    the searchable attribute field with the given name.</para>
                <para>The following id types are valid:<itemizedlist>
                        <listitem>
                            <para>emplid </para>
                        </listitem>
                        <listitem>
                            <para>authenticationid </para>
                        </listitem>
                        <listitem>
                            <para>uuid </para>
                        </listitem>
                        <listitem>
                            <para>workflowid </para>
                        </listitem>
                    </itemizedlist></para>
            </sect3>
            <sect3>
                <title>&lt;group></title>
                <para>Validate that the authenticated user is a member of the workgroup with the
                    given name.</para>
            </sect3>
            <sect3>
                <title>&lt;role></title>
                <para>Validate that the authenticated user has the given role. The existence and
                    names of these roles are determined by your setup in KEW. (You can create these
                    roles when you implement <emphasis role="italic"
                        >WebAuthenticationService</emphasis>.) Typically, the roles mirror your
                    organization structure.</para>
                <para>For example, you may choose to expose these roles:<itemizedlist>
                        <listitem>
                            <para>STAFF </para>
                        </listitem>
                        <listitem>
                            <para>FACULTY </para>
                        </listitem>
                        <listitem>
                            <para>ALUMNI </para>
                        </listitem>
                        <listitem>
                            <para>STUDENT </para>
                        </listitem>
                        <listitem>
                            <para>FORMER-STUDENT </para>
                        </listitem>
                        <listitem>
                            <para>APPLICANT </para>
                        </listitem>
                        <listitem>
                            <para>ENROLLED </para>
                        </listitem>
                        <listitem>
                            <para>ADMITTED </para>
                        </listitem>
                        <listitem>
                            <para>PROSPECT </para>
                        </listitem>
                        <listitem>
                            <para>GRADUATE </para>
                        </listitem>
                        <listitem>
                            <para>UNDERGRADUATE </para>
                        </listitem>
                    </itemizedlist></para>
                <para>If the role is marked as <emphasis role="bold">allowed=true</emphasis>, than
                    anyone with that role passes the security constraint. If the role is marked as
                        <emphasis role="bold">allowed=false</emphasis>, then if the individual has
                    the given disallowed role but none of the allowed roles, he or she fails the
                    security check.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Order of Evaluation</title>
            <para>The security constraints are evaluated in the following order. If any single
                constraint passes, it bypasses evaluating the remaining constraints.<orderedlist>
                    <listitem>
                        <para>Security attribute </para>
                    </listitem>
                    <listitem>
                        <para>Initiator </para>
                    </listitem>
                    <listitem>
                        <para>Role </para>
                    </listitem>
                    <listitem>
                        <para>Workgroup </para>
                    </listitem>
                    <listitem>
                        <para>Searchable attribute </para>
                    </listitem>
                    <listitem>
                        <para>Route log authenticated </para>
                    </listitem>
                </orderedlist></para>
        </sect2>
        <sect2>
            <title>Security - Warning Messages</title>
            <para>These security scenarios generate security warning messages:</para>
            <sect3>
                <title>Document Search</title>
                <itemizedlist>
                    <listitem>
                        <para>If no rows are filtered because of security, the user sees the search
                            result without any warning message on the <emphasis role="bold">Document
                                Search</emphasis> page. </para>
                    </listitem>
                    <listitem>
                        <para>If rows are filtered because of security, a red warning message on top
                            of the <emphasis role="bold">Document Search</emphasis> page shows how
                            many rows were filtered. For example, "19 rows were filtered for
                            security purposes." </para>
                    </listitem>
                    <listitem>
                        <para>If the initial result set returns more than the search result
                            threshold (500 rows), and rows in the set subsequently get filtered
                            because of security, then a red warning message shows how many rows were
                            returned and filtered. For example, "Too many results returned,
                            displaying only the first 450. 50 rows were filtered for security
                            purpose. Please refine your search." </para>
                    </listitem>
                </itemizedlist>
            </sect3>
            <sect3>
                <title>Route Log and Doc Handler</title>
                <itemizedlist>
                    <listitem>
                        <para>If the defined security constraints stop a user from viewing a
                            document, a red warning message shows at the top of the page if they
                            attempt to access the Route Log. For example, "You are not authorized to
                            access this portion of the application." </para>
                    </listitem>
                </itemizedlist>
            </sect3>
        </sect2>
        <sect2>
            <title>Service Layer</title>
            <para>In an out-of-the-box installation of KEW, Document Security is handled by
                org.kuali.rice.kew.doctype.DocumentSecurityServiceImpl, which implements the
                org.kuali.rice.kew.doctype.DocumentSecurityService service interface.</para>
        </sect2>
    </sect1>
    <sect1>
        <title>Action List Configuration Guide</title>
        <sect2>
            <title>Outbox Configuration</title>
            <para>The <emphasis role="bold">Outbox</emphasis> is a standard feature on the <emphasis
                    role="bold">Action List</emphasis> and is visible to the user in the UI by
                default. When the Outbox is turned on, users can access it from the <emphasis
                    role="italic">Outbox</emphasis> hyperlink at the top of the Action List.</para>
            <para>The Outbox is implemented by heavily leveraging existing Action List code. When an
                    <emphasis role="bold">Action Item</emphasis> is deleted from the Action Item
                table as the result of a user action, the item is stored in the <emphasis
                    role="bold">KEW_OUT_BOX_ITM_T</emphasis> table, using the <emphasis role="bold"
                    >org.kuali.rice.kew.actionitem.OutboxItemActionListExtension</emphasis> object.
                This object is an extension of the <emphasis role="bold"
                    >ActionItemActionListExtension</emphasis>. The separate object exists to provide
                a bean for OJB mapping.</para>
            <para>The Workflow Preferences determine if the Outbox is visible and functioning for
                each user. The preference is called <emphasis role="bold">Use Outbox</emphasis>. In
                addition, you can configure the Outbox at the KEW level using the parameter
                tag:</para>
            <programlisting>&lt;param name="actionlist.outbox">true&lt;/param></programlisting>
            <para>When the Outbox is set to <emphasis role="italic">false</emphasis>, the preference
                for individual users to configure the Outbox is turned off. By default, the Outbox
                is set to <emphasis role="italic">true</emphasis> at the KEW level. You can turn the
                Outbox off (to hide it from users) by setting the property below to <emphasis
                    role="italic">false</emphasis>:</para>
            <programlisting>&lt;param name="actionlist.outbox.default.preference.on">false&lt;/param></programlisting>
            <para>This provides backwards compatibility with applications that used earlier versions
                of KEW. </para>
            <note><para>Notes on the Outbox: <itemizedlist>
                    <listitem>
                        <para>Actions on saved documents are not displayed in the Outbox. </para>
                    </listitem>
                    <listitem>
                        <para>The Outbox responds to all saved <emphasis role="italic"
                                >Filters</emphasis> and Action List <emphasis role="italic"
                                >Preferences</emphasis>. </para>
                    </listitem>
                    <listitem>
                        <para>A unique instance of a document only exists in the Outbox. If a user
                            has a document in the Outbox and that user takes action on the document,
                            then the <emphasis role="italic">original instance</emphasis> of that
                            document remains in the Outbox. </para>
                    </listitem>
            </itemizedlist>
            </para></note>
        </sect2>
    </sect1>
    <sect1>
        <title>Email Customization</title>
        <para>KEW provides default email template for Action List notification messages that are
            sent. However, it is also possible to customize this either globally or on a Document
            Type by Document Type basis.</para>
        <para>There are two ways to customize Action List emails:<orderedlist>
                <listitem>
                    <para>Configure a CustomEmailAttribute </para>
                </listitem>
                <listitem>
                    <para>Creating a custom XSLT Stylesheet </para>
                </listitem>
            </orderedlist></para>
        <para>To accomplish this, you must write a <emphasis role="italic"
                >CustomEmailAttribute</emphasis> and configure it on the appropriate <emphasis
                role="italic">DocumentType</emphasis>.</para>
        <sect2>
            <title>Configure a CustomEmailAttribute</title>
            <para>The <emphasis role="italic">CustomEmailAttribute</emphasis> interface provides two
                methods for adding custom content to both the subject and the body.</para>
            <programlisting>public String getCustomEmailSubject();

public String getCustomEmailBody();
</programlisting>
            <para>Note that each of these values is appended to the end of either the subject or the
                body of the email. The rest of the email still uses the standard email
                content.</para>
            <para>Also, when implementing one of these components, the document is made available to
                you as a <emphasis role="bold">RouteHeaderDTO</emphasis> and the action request
                related to the notification is made available as an <emphasis role="bold"
                    >ActionRequestDTO</emphasis>.</para>
            <para>Once you have implemented the CustomEmailAttribute, you need to make it available
                to the KEW engine (either deployed in a plugin or available on the classpath when
                running embedded KEW).</para>
            <sect3>
                <title>Document Type Configuration</title>
                <para>Once you make the email attribute component available to KEW, you need to
                    configure it on the Document Type.</para>
                <para>First, define the attribute:</para>
                <programlisting>&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;ruleAttributes xmlns="ns:workflow/RuleAttribute" xsi:schemaLocation="ns:workflow/RuleAttribute resource:RuleAttribute">
        &lt;ruleAttribute>
            &lt;name>MyCustomEmailAttribute&lt;/name>
            &lt;className>my.package.MyCustomEmailAttribute&lt;/className>
            &lt;label>MyCustomEmailAttribute&lt;/label>
            &lt;description>My Custom Email Attribute&lt;/description>
            &lt;type>EmailAttribute&lt;/type>
        &lt;/ruleAttribute>
    &lt;/ruleAttributes>
&lt;/data>
</programlisting>
                <para>Next, update the Document Type definition to include the attribute:</para>
                <programlisting>&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
    &lt;documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
        &lt;documentType>
            &lt;name>MyDocType&lt;/name>
            &lt;label>My Document Type&lt;/label>
            &lt;postProcessorName>...&lt;/postProcessorName>
            &lt;attributes>
                &lt;attribute>
                    &lt;name>MyCustomEmailAttribute&lt;/name>
                &lt;/attribute>
            &lt;/attributes>
            &lt;routePaths>
                ...
            &lt;/routePaths>
            &lt;routeNodes>
                ...
            &lt;/routeNodes>
        &lt;/documentType>
    &lt;/documentTypes>
&lt;/data>
</programlisting>
                <para>These should be ingested using the XML Ingester. See Importing Files to KEW
                    for more information on using the XML Ingester.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Create a Custom XSLT Style Sheet</title>
            <sect3>
                <title>Global Email Customization</title>
                <para>A more convenient way to customize email content declaratively is to replace
                    the global email XSLT style sheet in Rice. Do this by ingesting an XSLT style
                    sheet with the name <emphasis role="italic">kew.email.style</emphasis>. This
                    style sheet should take input of this format for reminder emails:</para>
                <programlisting>&lt;!-- root element sent depends on email content requested by the system -->
&lt;immediateReminder|dailyReminder|weeklyReminder actionListUrl="url to ActionList" preferencesUrl="url to Preferences" 
applicationEmailAddress="configured KEW email address" env="KEW environment string (dev/test/prd)">
  
    &lt;user> &lt;!-- the principal who received the request -->
        &lt;name>...&lt;/name>
        &lt;principalName>...&lt;/principalName>
        &lt;principalId>...&lt;/principalId>
        &lt;firstName>...&lt;/firstName>
        &lt;lastName>...&lt;/lastName>
        &lt;emailAddress>...&lt;/emailAddress>
        ...
    &lt;/user>
    &lt;actionItem>
        &lt;!-- one top-level actionItem element sent for each ActionItem; for immediate email reminders, there will only ever be one; for daily and weekly reminders, there may be several -->
           
        &lt;!-- custom subject content produced by the CustomEmailAttribute associated with the DocumentType of this ActionItem, if any -->
        &lt;customSubject>...&lt;/customSubject>
 
        &lt;!-- custom body content produced by the CustomEmailAttribute associated with the DocumentType of this ActionItem, if any -->
        &lt;customBody>...&lt;/customBody>
    
        &lt;actionItem> &lt;!-- the actual ActionItem -->
            &lt;principalId>...&lt;/principalId>
            &lt;groupId>...&lt;/groupId>
            &lt;routeHeaderId>...&lt;/routeHeaderId>
            &lt;actionRequestId>...&lt;/actionRequestId>
            &lt;docTitle>...&lt;/docTitle>
            &lt;actionItemId>...&lt;/actionItemId>
            &lt;roleName>...&lt;/roleName>
            &lt;dateAssigned>...&lt;/dateAssigned>
            &lt;actionRequestCd>...&lt;/actionRequestCd>
            &lt;docHandlerURL>...&lt;/docHandlerURL>
            &lt;recipientTypeCode>...&lt;/recipientTypeCode>
            &lt;actionRequestLabel>...&lt;/actionRequestLabel>
            &lt;delegationType>...&lt;/delegationType>
            &lt;docName>...&lt;/docName>
            &lt;docLabel>...&lt;/docLabel>
        &lt;/actionItem>
        &lt;actionItemPerson> &lt;!-- see "user" element at the top, simliar content -->
        ...
        &lt;/actionItemPerson>
        &lt;actionItemPrincipalId>...&lt;/actionItemPrincipalId>
        &lt;actionItemPrincipalName>...&lt;/actionItemPrincipalName>

        &lt;doc> &lt;!-- the RouteHeader associated with this ActionItem -->
            &lt;routeHeaderId>...&lt;/routeHeaderId>
            &lt;docTitle>...&lt;/docTitle>
            &lt;docContent>...&lt;/docContent>
            &lt;initiatorWorkflowId>...&lt;/initiatorWorkflowId>
            &lt;documentTypeId>...&lt;/documentTypeId>
            &lt;docRouteStatusLabel>...&lt;/docRouteStatusLabel>
            &lt;docRouteStatus>...&lt;/docRouteStatus>
            &lt;createDate>...&lt;/createDate>
            ...
        &lt;/doc>
        &lt;docInitiator>
            &lt;principalName>...&lt;/principalName>
            &lt;principalId>...&lt;/principalId>
            &lt;entityId>...&lt;/entityId>
        &lt;/docInitiator>
        &lt;documentType> &lt;!-- DocumentType -->
            &lt;name>...&lt;/name>
            &lt;label>...&lt;/label>
            &lt;description>...&lt;/description>
            &lt;serviceNamespace>...&lt;/serviceNamespace>
            &lt;notificationFromAddress>...&lt;/notificationFromAddress>
            &lt;docHandlerUrl>...&lt;/docHandlerUrl>
            &lt;documentTypeId>...&lt;/documentTypeId>
            ...
    &lt;/actionItem>

&lt;/immediateReminder|dailyReminder|weeklyReminder></programlisting>
                <para>This format is used for feedback emails:</para>
                <programlisting>&lt;!-- feedback form -->
&lt;feedback actionListUrl="url to ActionList" preferencesUrl="url to Preferences" applicationEmailAddress="configured KEW email address" env="KEW environment string (dev/test/prd)">
    &lt;networkId>...&lt;/networkId>
    &lt;lastName>...&lt;/lastName>
    &lt;routeHeaderId>...&lt;/routeHeaderId>
    &lt;documentType>...&lt;/documentType>
    &lt;userEmail>...&lt;/userEmail>
    &lt;phone>...&lt;/phone>
    &lt;timeDate>...&lt;/timeDate>
    &lt;edenCategory>...&lt;/edenCategory>
    &lt;comments>
        ...
    &lt;/comments>
    &lt;pageUrl>...&lt;/pageUrl>
    &lt;firstName>...&lt;/firstName>
    &lt;exception>...&lt;/exception>
    &lt;userName>...&lt;/userName>
&lt;/feedback></programlisting>
                <para>In both cases, the output generated by the style sheet must be like
                    this:</para>
                <programlisting>&lt;email>
    &lt;subject>... subject here ...&lt;/subject>
    &lt;body>... body here ...&lt;/body>
&lt;/email></programlisting>
                <para>You must then upload the custom style sheet into the style service using the
                    standard KEW XML ingestion mechanism:</para>
                <programlisting>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
&lt;styles xmlns="ns:workflow/Style" xsi:schemaLocation="ns:workflow/Style resource:Style">
    &lt;style name="kew.email.style">
 &lt;!-- A custom global email reminder stylesheet -->
        &lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
            &lt;xsl:strip-space elements="*"/>
            &lt;xsl:template match="immediateReminder">               
                ...
            &lt;/xsl:template>
            &lt;xsl:template match="dailyReminder">
                ...
            &lt;/xsl:template>
            &lt;xsl:template match="weeklyReminder">
                ...
            &lt;/xsl:template>
            &lt;xsl:template match="feedback">
                ...
            &lt;/xsl:template>
        &lt;/xsl:stylesheet>
    &lt;/style>
&lt;/styles></programlisting>
                <para>The global style sheet should handle all email content requests. You can use
                    the standard <emphasis role="italic">include</emphasis> syntax to import an
                    existing style sheet that may implement defaults.</para>
            </sect3>
            <sect3>
                <title>DocumentType-Specific Email Customization</title>
                <para>You can also customize immediate reminder email content on a per-DocumentType
                    basis. To do so, define a custom email style sheet name on the DocumentType
                    definition:</para>
                <programlisting>...
    &lt;documentType>
        &lt;name>SomeDoc&lt;/name>
        &lt;description>a document with customized reminder email&lt;/description>
            ...
        &lt;emailStylesheet>somedoc.custom.email.style&lt;/emailStylesheet>
            ...
    &lt;/documentType>
...
</programlisting>
                <para>Then, upload a corresponding style sheet with a matching name, as
                    above.</para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>Document Link</title>
        <sect2>
            <title>Document Link Features</title>
            <para>KEW provides an option for linking documents and BOs that are functionally
                related. The link between related documents is created and removed in a double link
                double delete fashion, which means: when a link is added/deleted from 1 document to
                another document, a link in the reverse direction is also added/deleted, this
                feature will garuantee that searching for linked documents can be done from either
                side of the link. Using this option, client applications can link documents by using
                document link API.</para>
        </sect2>
        <sect2>
            <title>Document Link API</title>
            <para>Document link API is exposed to the client through WorkflowDocument interface,
                below is the summary of the api: <orderedlist>
                    <listitem>
                        <para>get all links to orgn doc </para>
                        <para>public List&lt;DocumentLinkDTO> getLinkedDocumentsByDocId(Long id)
                            throws WorkflowException </para>
                    </listitem>
                    <listitem>
                        <para>get the link from orgn doc to a specifc doc </para>
                        <para>public DocumentLinkDTO getLinkedDocument(DocumentLinkDTO docLinkVO)
                            throws WorkflowException </para>
                    </listitem>
                    <listitem>
                        <para>add a link by id </para>
                        <para>public void addLinkedDocument(DocumentLinkDTO docLinkVO) throws
                            WorkflowException </para>
                    </listitem>
                    <listitem>
                        <para>remove all links to this doc as orgn doc </para>
                        <para>public void removeLinkedDocuments(Long docId) throws WorkflowException
                        </para>
                    </listitem>
                    <listitem>
                        <para>remove the link to the specific doc </para>
                        <para>public void removeLinkedDocument(DocumentLinkDTO docLinkVO) throws
                            WorkflowException </para>
                    </listitem>
                </orderedlist></para>
        </sect2>
        <sect2>
            <title>Document Link API Example</title>
            <para>It is pretty straightforward to use this api, below are some examples:<orderedlist>
                    <listitem>
                        <para>To add a link </para>
                        <programlisting>WorkflowDocument doc = new WorkflowDocument(…);

DocumentLinkDTO testDocLinkVO = new DocumentLinkDTO()
testDocLinkVO.setOrgnDocId(Long.valueOf(5000));

testDocLinkVO.setDestDocId(Long.valueOf(6000));
doc.addLinkedDocument(testDocLinkVO);                                                             </programlisting>
                    </listitem>
                    <listitem>
                        <para>To retrieve all links to a document </para>
                        <programlisting>List&lt;DocumentLinkDTO> links2 = doc.getLinkedDocumentsByDocId(Long.valueOf(5000));    </programlisting>
                    </listitem>
                    <listitem>
                        <para>To remove a link </para>
                        <programlisting>doc.removeLinkedDocument(testDocLinkVO);</programlisting>
                    </listitem>
                </orderedlist></para>
        </sect2>
    </sect1>
    <sect1>
        <title>Reporting Guide</title>
        <sect2>
            <title>Reporting Features</title>
            <para>KEW provides various options for reporting on and simulation of routing scenarios.
                There is a GUI for performing these reporting functions as well as an API that you
                can use to run routing reports against the system.</para>
        </sect2>
        <sect2>
            <title>The Routing Report Screen</title>
            <para>From the Rice main menu there is a link to the <emphasis role="bold">Routing
                    Report</emphasis> screen. From this set of screens you can enter various
                criteria for running reports against the routing engine. The output of this
                reporting is a simulated view of the <emphasis role="bold">Route Log</emphasis>,
                displaying the result of the report.</para>
        </sect2>
        <sect2>
            <title>The Report APIs</title>
            <para>The KEW client API also provides facilities for running reports against the
                routing engine. At the core of KEW is a <emphasis role="bold">Simulation
                    Engine</emphasis> that is responsible for running these types of reports. The
                method for executing these reports is on the Workflow Info object that is part of
                the client API. The method is defined:</para>
            <programlisting>public DocumentDetailVO routingReport(ReportCriteriaVO reportCriteria) throws WorkflowException;</programlisting>
            <para>This method takes the report criteria and returns the results of the routing
                report.</para>
        </sect2>
        <sect2>
            <title>Report Criteria</title>
            <para>The routing report operates under two basic modes:<orderedlist>
                    <listitem>
                        <para>Reports that run against existing Documents </para>
                    </listitem>
                    <listitem>
                        <para>Reports that simulate a Document from a Document Type </para>
                    </listitem>
                </orderedlist></para>
            <para>In each these cases there are certain properties that you need to set on the
                ReportCriteriaVO to obtain the desired results.</para>
            <para>In the first case, the report runs against a document that has already been
                created in the system. This document already has a Document Id and may be en route.
                Using this style of reporting, you can run simulations to determine where the
                document will go in future route nodes. For example, to run a simulation against an
                existing document to determine to whom it will route in the future, execute this
                code:</para>
            <sect3>
                <title>Routing Report against a Document</title>
                <programlisting>WorkflowInfo info = new WorkflowInfo();
RoutingReportCriteriaVO criteria = new ReportCriteriaVO(new Long(1234));
DocumentDetailVO results = info.routingReport(criteria);
// examine results...
</programlisting>
                <para>This runs a report against the document with ID 1234, starting at the active
                    nodes of the document and continuing to the terminal nodes of the document. The
                    DocumentDetailVO will contain the Action Requests generated during the report
                    simulation.</para>
                <para>You can also stop the report at a particular node or once Rice generates a
                    request for a particular user. For example, to stop the report simulation at a
                    node or when Rice generates a certain user's request, configure the report
                    criteria like this:</para>
            </sect3>
            <sect3>
                <title>Terminate Report at Node or User</title>
                <programlisting>WorkflowInfo info = new WorkflowInfo();

RoutingReportCriteriaVO criteria = new ReportCriteriaVO(new Long(1234), "MyNodeName");
criteria.setTargetUsers(new UserIdVO[] { new NetworkIdVO("ewestfal") });

DocumentDetailVO results = info.routingReport(criteria);
</programlisting>
                <para>This executes the report until it reaches a node named <emphasis role="bold"
                        >MyNodeName</emphasis> or a request is generated for user <emphasis
                        role="bold">ewestfal</emphasis>.</para>
                <para>In the second style of reporting, the report is run against an arbitrary
                    Document Type and the simulation engine creates a temporary document against
                    which to run the report. When setting up the report criteria for these
                    scenarios, you usually populate the XML content of the document on the criteria
                    (provided that the routing of that document evaluates the XML). Also, the
                    criteria need to be configured with the valid node names (or rule templates)
                    against which the report should be run. For example, to run a Document Type
                    report, you can invoke the routing report this way:</para>
            </sect3>
            <sect3>
                <title>Report against a Document Type</title>
                <programlisting>WorkflowInfo info = new WorkflowInfo();
RouteReportCriteriaVO criteria = new ReportCriteriaVO("MyDocumentType");

criteria.setXmlContent("&lt;accountNumber>1234&lt;/accountNumber>");

criteria.setNodeNames(new String[] { "MyNodeName" });
DocumentDetailVO results = info.routingReport(criteria);
</programlisting>
                <para>The code above simulates the generation of requests for <emphasis role="bold"
                        >MyDocumentType</emphasis> at the <emphasis role="bold"
                        >MyNodeName</emphasis> node with the XML given. This sort of reporting is
                    especially useful if you simply need to determine what rules in the rule system
                    will fire and generate action requests under a particular scenario.</para>
                <para>As an alternative to specifying the node names, you can also specify rule
                    template names. This is simply another way to target a specific node in the
                    document. It searches the Document Type definition for nodes with the specified
                    rule templates and then runs the report against those nodes. Currently, the rule
                    template must exist on a node in the Document Type definition or an error will
                    be thrown. In the case of our previous example, you could simply change the line
                    that sets the node names on the criteria to:</para>
                <programlisting>criteria.setRuleTemplateNames(new String[] { "MyRuleTemplate" });</programlisting>
                <para>As above, this is primarily useful for determining who will have requests
                    generated to them from the KEW rule system.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>Interpreting Report Results</title>
            <para>As we've seen, the object returned by the Routing Report is an instance of
                DocumentDetailVO. This object extends RouteHeaderVO and provides three more pieces
                of data along with it:<orderedlist>
                    <listitem>
                        <para>An array of ActionRequestVO objects representing the action requests
                            on the document </para>
                    </listitem>
                    <listitem>
                        <para>An array of ActionTakenVO objects representing the actions that have
                            been performed against the document </para>
                    </listitem>
                    <listitem>
                        <para>An array of RouteNodeInstanceVO objects that represent nodes in the
                            document path </para>
                    </listitem>
                </orderedlist></para>
            <para>For reporting, the most important piece of data here is typically the
                ActionRequestVO objects. After running a report, this array contains the Action
                Requests that were generated as the result of the simulation. So, for example, in
                the example above where we run a document type report against the <emphasis
                    role="bold">MyRuleTemplate</emphasis> rule template, this array contains all of
                the Action Requests that were generated to users or workgroups during the report
                simulation.</para>
        </sect2>
    </sect1>
    <sect1>
        <title>Workflow Plugin Guide</title>
        <sect2>
            <title>Overview</title>
            <para>Kuali Enterprise Workflow (KEW) has a plugin framework that allows you to load
                code into the core system without requiring changes to the KEW source code or
                configuration. This framework provides:<itemizedlist>
                    <listitem>
                        <para>A custom class loading space </para>
                    </listitem>
                    <listitem>
                        <para>Hot deploy and reload capabilities </para>
                    </listitem>
                    <listitem>
                        <para>Participation in Workflow's JTA transactions </para>
                    </listitem>
                    <listitem>
                        <para>An application plugin for installation of routing components </para>
                    </listitem>
                </itemizedlist></para>
        </sect2>
        <sect2>
            <title>Application Plugin</title>
            <para>Use an application plugin to deploy an application area's routing components into
                Workflow. These routing components might include:<itemizedlist>
                    <listitem>
                        <para>Rule attributes </para>
                    </listitem>
                    <listitem>
                        <para>Searchable attributes </para>
                    </listitem>
                    <listitem>
                        <para>Post processors </para>
                    </listitem>
                    <listitem>
                        <para>Route modules </para>
                    </listitem>
                </itemizedlist></para>
            <para>If these components require access to a data source, then the application plugin
                also configures the data source and allows it to participate in Workflow's JTA
                transactions. </para>
            <para>In addition to routing components, the application plugin can also configure a
                plugin listener and a Resource Loader. The Resource Loader is responsible for
                loading resources (both Java classes and service implementations) from the plugin
                and providing them to the core system.</para>
            <para>Application plugins are hot-deployable, so a restart of the server is not required
                when they are added or modified. The core system searches for plugins in a directory
                configured in the application configuration (see KEW Module Configuration).</para>
        </sect2>
        <sect2>
            <title>Plugin Layout</title>
            <para>You build the plugin as a set of files and directories. You then zip this
                structure and place it in the appropriate Workflow plugin space. For application
                plugins, this directory location is defined in the core system configuration.</para>
            <para>The name of the zip file (minus the .zip extension) is used as the name of the
                plugin. The Plugin Loader only looks for files that end in .zip when determining
                whether to load and hot-deploy a plugin.</para>
            <para>In general, application plugins can be named as desired. However, there is one
                reserved plugin name:</para>
            <para>
                <emphasis role="bold">shared</emphasis> - A special plugin that provides a shared
                classloading space to all plugins (see Plugin Shared Space). </para>
            <para>The directory structure of a plugin is similar to that of a web application. It
                should have this structure:</para>
            <programlisting>classes/

lib/
META-INF/
    workflow.xml
</programlisting>
            <para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis role="bold">classes</emphasis> - All java .class files that
                            are used by the plugin should reside in this directory </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">lib</emphasis> - All .jar library files that are
                            used by the plugin should reside in this directory </para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold">META-INF</emphasis> - The <emphasis role="bold"
                                >workflow.xml</emphasis> configuration file must reside in this
                            directory </para>
                    </listitem>
                </itemizedlist>
            </para>
        </sect2>
        <sect2>
            <title>Plugin Configuration</title>
            <para>Application plugins usually provide a subset of the functionality that an
                institutional plugin provides, since the institutional plugin can provide core
                service overrides.</para>
            <para>The plugin framework provides two configuration points:<orderedlist>
                    <listitem>
                        <para>Plugin XML Configuration (described below) </para>
                    </listitem>
                    <listitem>
                        <para>Transaction and DataSource Configuration </para>
                    </listitem>
                </orderedlist></para>
            <sect3>
                <title>Plugin XML Configuration</title>
                <para>The XML configuration is defined in a file called workflow.xml. The format of
                    this file is relatively simple. An example workflow.xml file:</para>
                <programlisting>&lt;plug-in>
    &lt;param name="my.param.1">abc&lt;/param>
    &lt;param name="my.param.2">123&lt;/param>
    &lt;listener>
        &lt;listener-class>org.kuali.rice.core.ApplicationInitializeListener&lt;/listener-class>
    &lt;/listener>
    &lt;resourceLoader class="my.ResourceLoader"/>
&lt;/plug-in>
</programlisting>
                <para>We'll explain each of these elements in more detail below:</para>
            </sect3>
            <sect3>
                <title>Plugin Parameters</title>
                <para>The parameter configuration uses XML as the syntax. These parameters are
                    placed into a configuration context for the plugin. The configuration inherits
                    (and can override) values from the parent configurations. The configuration
                    hierarchy is core -> institutional plugin -> application plugins.</para>
                <para>A plugin can access its configuration using this code:</para>
                <programlisting>org.kuali.rice.Config config = org.kuali.rice.Core.getCurrentContextConfig();</programlisting>
                <sect4>
                    <title>Plugin Listeners</title>
                    <para>You can define one or more listeners that implement the interface
                            <emphasis role="bold"
                            >org.kuali.rice.kew.plugin.PluginListener</emphasis>. These can be used
                        to receive plugin lifecycle notifications from KEW.</para>
                    <para>The interface defines two methods to implement:<itemizedlist>
                            <listitem>
                                <para>Invoked when a plugin starts up</para>
                                <programlisting>public void pluginInitialized(Plugin plugin);</programlisting>
                            </listitem>
                            <listitem>
                                <para>Invoked when a plugin shuts down</para>
                                <programlisting>public void pluginDestroyed(Plugin plugin);</programlisting>
                            </listitem>
                    </itemizedlist></para>
                    <para>It is legal to define more than one plugin listener. Plugin listeners are
                        started in the order in which they appear in the configuration file (and
                        stopped in reverse order).</para>
                </sect4>
                <sect4>
                    <title>Resource Loader</title>
                    <para>A plugin can define an instance of <emphasis role="bold"
                            >org.kuali.rice.resourceloader.ResourceLoader</emphasis> to handle the
                        loading of classes and services. When KEW attempts to load classes or locate
                        services, it searches the institutional plugin, then the core, then any
                        application plugins. It does this by invoking the <emphasis role="bold"
                            >getObject(..)</emphasis> and <emphasis role="bold"
                            >getService(...)</emphasis> methods on the plugin's
                        ResourceLoader.</para>
                    <para>If no ResourceLoader is defined in the plugin configuration, then the
                        default implementation <emphasis role="bold"
                            >org.kuali.rice.resourceloader.BaseResourceLoader</emphasis> is used.
                        The BaseResourceLoader lets you examine the plugin's classloader for objects
                        when requested (such as post processors, attributes, etc.). This is
                        sufficient for most application plugins.</para>
                    <para>For more information on configuring service overrides in a plugin, see the
                        Overriding Services with a ResourceLoader section below.</para>
                </sect4>
                <sect4>
                    <title>Configuring an Extra Classpath</title>
                    <para>Sometimes it is desirable to be able to point in a plugin to classes or
                        library directories outside of the plugin space. This can be particularly
                        useful in development environments, where the plugin uses many of the same
                        classes as the main application that is integrating with Workflow. In these
                        scenarios, configuring an extra Classpath may mean you don’t need to jar or
                        copy many common class files.</para>
                    <para>To do this, specify these properties in your plugin's <emphasis
                            role="bold">workflow.xml</emphasis> file:<orderedlist>
                            <listitem>
                                <para><emphasis role="bold">extra.classes.dir</emphasis> - Path to
                                    an additional directory of <emphasis role="bold"
                                        >.class</emphasis> files or resources to include in the
                                    plugin's classloader </para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold">extra.lib.dir</emphasis> - Path to an
                                    additional directory of <emphasis role="bold">.jar</emphasis>
                                    files to include in the plugin's classloader </para>
                            </listitem>
                        </orderedlist></para>
                    <para>The classloader then includes these classes and/or lib directories into
                        its classloading space, in the same manner that it includes the standard
                            <emphasis role="bold">classes</emphasis> and <emphasis role="bold"
                            >lib</emphasis> directories. The classloader always looks in the default
                        locations first, and then defers to the extra classpath if it cannot locate
                        the class or resource.</para>
                </sect4>
            </sect3>
            <sect3>
                <title>Transaction and DataSource Configuration</title>
                <para>The easiest method to configure Datasources and Transactions is through the
                    Spring Framework. Here is a snippet of Spring XML that shows how to wire up a
                    Spring Transaction Manager inside of a plugin:</para>
                <programlisting>&lt;bean id="userTransaction" class="org.kuali.rice.jta.UserTransactionFactoryBean" />

&lt;bean id="jtaTransactionManager" class="org.kuali.rice.jta.TransactionManagerFactoryBean" />

&lt;bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
    &lt;property name="userTransaction" ref="userTransaction" />
    &lt;property name="transactionManager" ref="jtaTransactionManager" />
    &lt;property name="defaultTimeout" value="${transaction.timeout}"/>
&lt;/bean></programlisting>
                <para>The factory beans in the above XML will locate the <emphasis role="bold"
                        >javax.trasaction.UserTransaction</emphasis> and <emphasis role="bold"
                        >java.transaction.TransactionManager</emphasis>, which are configured in the
                    core system. These can then be referenced and injected into other beans (such as
                    the Spring JtaTransactionManager).</para>
                <para>Once you configure the transaction manager, you also need to configure any
                    DataSources you require. Here's an example of configuring a DataSource that
                    participates in Atomikos JTA transactions (the default Transaction Manager
                    distributed with Rice Standalone).</para>
                <programlisting>&lt;bean id="myDataSource" class="com.atomikos.jdbc.nonxa.NonXADataSourceBean">
    &lt;property name="uniqueResourceName" value="myDataSource"/>
    &lt;property name="driverClassName" value="..."/>
    &lt;property name="url" value="..."/>  
    ...
&lt;/bean></programlisting>
                <para>So, the application can access it's datasource by either injecting it into
                    Spring services or by fetching it directly from the Spring context. </para>
                <para>You can find more information on configuring Rice DataSources and
                    TransactionManagers in Datasource and JTA Configuration.</para>
            </sect3>
        </sect2>
        <sect2>
            <title>OJB Configuration within a Plugin</title>
            <para>If your plugin needs to use OJB, there are a few other configuration steps that
                you need to take. First, in your Spring file, add the following line to allow Spring
                to locate OJB and the JTA Transaction Manager:</para>
            <programlisting>&lt;bean id="ojbConfigurer" class="org.kuali.rice.ojb.JtaOjbConfigurer">
    &lt;property name="transactionManager" ref="jtaTransactionManager" />

&lt;/bean>
</programlisting>
            <para>Next, for OJB to plug into Workflow's JTA transactions, you need to modify some
                settings in the plugin's <emphasis role="bold">OJB.properties</emphasis> file (or
                the equivalent):</para>
            <programlisting>PersistenceBrokerFactoryClass=org.apache.ojb.broker.core.PersistenceBrokerFactorySyncImpl
ImplementationClass=org.apache.ojb.odmg.ImplementationJTAImpl
OJBTxManagerClass=org.apache.ojb.odmg.JTATxManager
ConnectionFactoryClass=org.kuali.rice.ojb.RiceDataSourceConnectionFactory
JTATransactionManagerClass=org.kuali.rice.ojb.TransactionManagerFactory
</programlisting>
            <para>The first three properties listed are part of the standard setup for using JTA
                with OJB. However, there are custom Rice implementations:<itemizedlist>
                    <listitem>
                        <para><emphasis role="bold"
                                >org.kuali.rice.ojb.RiceDataSourceConnectionFactory</emphasis></para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"
                                >org.kuali.rice.ojb.TransactionManagerFactory</emphasis></para>
                    </listitem>
                    <listitem>
                        <para><emphasis role="bold"
                                >org.kuali.rice.ojb.RiceDataSourceConnectionFactory</emphasis>
                        </para>
                    </listitem>
                </itemizedlist></para>
            <para>This OJB ConnectionFactory searches your Spring Context for a bean with the same
                name as your <emphasis role="bold">jcd-alias</emphasis>. Here is what an OJB
                connection descriptor might look like inside of a Workflow plugin:</para>
            <programlisting>&lt;jdbc-connection-descriptor
    jcd-alias="myDataSource"
    default-connection="true"
    platform="Oracle9i"
    jdbc-level="3.0"
    eager-release="false"
    batch-mode="false"
    useAutoCommit="0"
    ignoreAutoCommitExceptions="false">
    
    &lt;sequence-manager className="org.apache.ojb.broker.util.sequence.SequenceManagerNextValImpl" />
    &lt;object-cache class="org.apache.ojb.broker.cache.ObjectCachePerBrokerImpl"/>
&lt;/jdbc-connection-descriptor>
</programlisting>
            <para>Notice that the <emphasis role="bold">jcd-alias</emphasis> attribute matches the
                name of the DataSource Spring bean defined in the example above.</para>
            <para>Another important thing to notice in this configuration is that <emphasis
                    role="bold">useAutoCommit</emphasis> is set to 0. This tells OJB not to change
                the auto commit status of the connection because it is being managed by JTA.</para>
            <para>Finally, when your plugin needs to use OJB, you need to use this:</para>
            <programlisting>org.kuali.rice.ojb.TransactionManagerFactory</programlisting>
            <para>This provides OJB with the <emphasis role="bold"
                    >javax.transaction.TransactionManager</emphasis> that was injected into your
                JtaOjbConfigurer, as in the example above.</para>
        </sect2>
        <sect2>
            <title>Overriding Services with a ResourceLoader</title>
            <para>For a service override, you need to define a custom ResourceLoader implementation
                and configure it in your workflow.xml plugin configuration file. The
                org.kuali.rice.resourceloader.ResourceLoader interface defines this relative
                method:</para>
            <programlisting>public Object getService(javax.xml.namespace.QName qname);</programlisting>
            <para>When KEW is searching for services, it invokes this method on its plugins'
                ResourceLoader implementations. The service name is a qualified name (as indicated
                by the use of <emphasis role="bold">javax.xml.namespace.QName</emphasis>), but for
                services being located from the core, service names typically contain only a local
                part and no namespace.</para>
            <para>The easiest way to implement a custom ResourceLoader is to create a class that
                extends from <emphasis role="bold"
                    >org.kuali.rice.resourceloader.BaseResourceLoader</emphasis> and just override
                the <emphasis role="bold">getService(QName)</emphasis> method. The
                BaseResourceLoader provides standard functionality for loading objects from
                ClassLoaders, among other things.</para>
            <para>For example, if you want to override the User Service, you might implement this
                ResourceLoader:</para>
            <programlisting>public class MyResourceLoader extends BaseResourceLoader {
    public MyResourceLoader() {
        super(new QName("MyResourceLoader"));
	
    }

    @Override
    public Object getService(QName serviceName) {
        if ("enUserOptionsService".equals(serviceName.getLocalPart()) {
            // return your custom implementation of org.kuali.rice.kew.useroptions.UserOptionsService
        } else if (...) {
            ...
        } else if (...) {
            ...
        }
        return super.getService(serviceName);
    }
}
</programlisting>
            <para>In the next section, we'll look at some of the services commonly overridden in an
                institutional plugin</para>
            <sect3>
                <title>Commonly Overridden Services</title>
                <para>In theory, you can override any service defined in the <emphasis role="bold"
                        >org/kuali/workflow/resources/KewSpringBeans.xml</emphasis> file in the
                    Institutional Plugin. What follows is a list of the most commonly overridden
                    services:</para>
                <para>
                    <table frame="none">
                        <title>Commonly Overridden Services</title>
                        <tgroup cols="3">
                            <colspec colname="c1" colnum="1" colwidth="1.0*"/>
                            <colspec colname="c2" colnum="2" colwidth="1.0*"/>
                            <colspec colname="c3" colnum="3" colwidth="1.0*"/>
                            <thead>
                                <row>
                                    <entry>Service Name </entry>
                                    <entry>Interface </entry>
                                    <entry>Description </entry>
                                </row>
                            </thead>
                            <tbody>
                                <row>
                                    <entry>enUserOptionsService </entry>
                                    <entry>org.kuali.rice.kew.useroptions.UserOptionsService </entry>
                                    <entry>Provides User lookup and searching services </entry>
                                </row>
                                <row>
                                    <entry>IdentityHelperService</entry>
                                    <entry>org.kuali.rice.kew.identity.service.IdentityHelperService</entry>
                                    <entry>Interfaces with KIM identity management services</entry>
                                </row>
                                <row>
                                    <entry>enEmailService </entry>
                                    <entry>org.kuali.rice.kew.mail.service.impl.DefaultEmailService</entry>
                                    <entry>Provides email sending capabilities </entry>
                                </row>
                                <row>
                                    <entry>enNotificationService </entry>
                                    <entry>org.kuali.rice.ken.service.NotificationService </entry>
                                    <entry>Provides callbacks for notifications within the system
                                    </entry>
                                </row>
                                <row>
                                    <entry>enEncryptionService </entry>
                                    <entry>org.kuali.rice.core.service.EncryptionService </entry>
                                    <entry>Allows for pluggable encryption implementations </entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </table>
                </para>
                <sect4>
                    <title>User Service</title>
                    <para>The Workflow core uses the UserService to resolve and search for users.
                        The UserService could be as simple as a static set of users or as complex
                        and integrated as a university-wide user system. Your institution may choose
                        how to implement this, as long as you provide capabilities for the ID types
                        that you intend to use. At the very least, implementations are required for
                        the <emphasis role="bold">WorkflowUserId</emphasis> and <emphasis
                            role="bold">AuthenticationUserId</emphasis> types (and their
                        corresponding VO beans). All of the UserId types must be unique across the
                        entire set of users. </para>
                    <para>The <emphasis role="bold">WorkflowUserId</emphasis> is typically
                        associated with a unique numerical sequence value and the <emphasis
                            role="bold">AuthenticationUserId</emphasis> is typically the username or
                        network ID of the user.</para>
                    <para>The default UserService implementation provides a persistent user store
                        that allows you to create and edit users through the GUI. It also caches
                        users for improved performance and implements an XML import for mass user
                        import. Institutions usually override the default user service with an
                        implementation that integrates with their own user repository.</para>
                </sect4>
                <sect4>
                    <title>IdentityHelper Service</title>
                    <para>The IdentityHelper service helps to interact with the KIM identity
                        management services in the system. IdentityHelpers are identified in one of
                        two ways:<orderedlist>
                            <listitem>
                                <para><emphasis role="bold">PrincipalId</emphasis> - A numerical
                                    identifier for a KIM principal </para>
                            </listitem>
                            <listitem>
                                <para><emphasis role="bold">Group</emphasis> – An object associated
                                    with a group of principal users numerical identifier assigned to
                                    a Workgroup </para>
                            </listitem>
                        </orderedlist></para>
                    <para>Both of these object variables are implemented in KEW in the
                        IdentityHelperServiceImpl file.</para>
                </sect4>
                <sect4>
                    <title>Email Service</title>
                    <para>The Email service is used to send emails from KEW. You can configure the
                        default implementation when you configure KEW (see KEW Configuration).
                        However, if more custom configuration is needed, then you can override the
                        service in the plugin.</para>
                    <para>For example, you could override this service if you need to make a secure
                        and authorized SSL connection with an SMTP server because of security
                        policies.</para>
                </sect4>
                <sect4>
                    <title>Notification Service</title>
                    <para>The Notification service is responsible for notifying users when they
                        receive Action Items in their Action List.</para>
                    <para>The default implementation simply sends an email (using the EmailService)
                        to the user according to the individual user’s preferences. A custom
                        implementation might also notify other (external) systems in addition to
                        sending the email.</para>
                </sect4>
                <sect4>
                    <title>Encryption Service</title>
                    <para>The Encryption service is responsible for encrypting document
                        content.</para>
                    <para>The default implementation uses DES to encrypt the document content. If
                        the <emphasis role="bold">encryption.key</emphasis> configuration parameter
                        is set as a <emphasis role="italic">Base64</emphasis> encoded value, then
                        the document content is encrypted using that key. If it is not set, then
                        document content will not be encrypted and will be stored in the database in
                        plain text.</para>
                </sect4>
            </sect3>
            <sect3>
                <title>Plugin Shared Space</title>
                <para>All plugins also load certain classes from a shared space. The shared space
                    contains certain classes that link with certain libraries that might exist in
                    each application or institutional plugin's classloader (such as OJB and Spring).
                    Current classes that Workflow publishes in the <emphasis role="bold"
                        >shared</emphasis> space are those in the shared module of the Rice project
                        (<emphasis role="bold">rice-shared-version.jar</emphasis>). This is
                    important because some of these classes link with libraries like Spring or OJB
                    and since the plugin needs its own copy of these libraries, it needs to ensure
                    that it doesn't retrieve these classes from any classloader but it's own.</para>
            </sect3>
        </sect2>
    </sect1>
    <sect1>
        <title>KEW Usage of the Kuali Service Bus</title>
        <sect2>
            <title>General Usage</title>
            <para>The Kuali Enterprise Workflow engine makes use of both synchronous service
                endpoints and asynchronous messaging features from the Kuali Service Bus.</para>
            <para>Most asynchronous processing that KEW does is implemented using asynchronous
                messaging on the service bus. This includes:<orderedlist>
                    <listitem>
                        <para>Workflow engine processing </para>
                    </listitem>
                    <listitem>
                        <para>Blanket approval orchestration </para>
                    </listitem>
                    <listitem>
                        <para>Action processing for actions taken directly from the Action List
                        </para>
                    </listitem>
                    <listitem>
                        <para>Re-resolving actions requests resulting from a responsibility change
                        </para>
                    </listitem>
                    <listitem>
                        <para>Sending email reminders </para>
                    </listitem>
                    <listitem>
                        <para>Distributed cache flush notifications </para>
                    </listitem>
                </orderedlist></para>
            <para>In each of these cases, there exists a service that processes asynchronous
                messages and performs the appropriate actions for each of these functions.</para>
            <para>In terms of synchronous services, Kuali Enterprise Workflow publishes two
                different types of services. One is used for performing workflow document actions
                (such as creating, approving, disapproving, etc.). The other is used to perform
                various query or read-only operations against the workflow system.</para>
        </sect2>
        <sect2>
            <title>Implications of using “Synchronous” KSB messaging with KEW</title>
            <para>For general information on synchronous messaging and its implications in the KSB,
                please read “Implications of synchronous vs. asynchronous Message Deliver” in the
                KSB technical reference guide.</para>
            <para>In terms of Kuali Enterprise Workflow, the usage of synchronous messing means that
                operations like workflow engine processing will happen immediately and synchronously
                at the time it’s invoked.</para>
            <para>The main implication here besides what is listed in the KSB documentation is that,
                since message exception handling isn’t implemented, exception routing does not work
                when using synchronous KSB messaging.</para>
            <para>This means that if this messaging model is being used in a batch job, or similar
                type of program, routing exceptions will need to be manually caught. If it’s desired
                to place a document into exception status from here, there are methods on the KEW
                APIs to do this manually.</para>
        </sect2>
    </sect1>
</chapter>
