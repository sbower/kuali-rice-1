<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2006-2011 The Kuali Foundation
  ~
  ~ Licensed under the Educational Community License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.opensource.org/licenses/ecl2.php
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
                           http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/jdbc
                           http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
                           http://www.springframework.org/schema/jee
                           http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
                           http://www.springframework.org/schema/jms
                           http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
                           http://www.springframework.org/schema/lang
                           http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                           http://www.springframework.org/schema/oxm
                           http://www.springframework.org/schema/oxm/spring-oxm-3.0.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.0.xsd">

<!-- KENSpringBeans - standard KEN module spring context  -->

	<import resource="classpath:org/kuali/rice/core/CommonSpringBeans.xml"/>
	<import resource="classpath:org/kuali/rice/core/CommonOJBSpringBeans.xml"/>
	
    <bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/>

	<bean id="kenOjbConfigurer" class="org.kuali.rice.core.framework.persistence.ojb.BaseOjbConfigurer">
		<property name="jcdAliases">
			<list>
				<value>kenDataSource</value>
			</list>
		</property>
		<property name="metadataLocation" value="classpath:org/kuali/rice/ken/config/OJB-repository-ken.xml" />
	</bean>

    <bean id="kenDataSource" class="org.kuali.rice.core.framework.persistence.jdbc.datasource.PrimaryDataSourceFactoryBean" >
        <property name="preferredDataSourceParams">
            <list>
                <value>org.kuali.ken.datasource</value>
            </list>
        </property>
        <property name="preferredDataSourceJndiParams">
            <list>
                <value>org.kuali.ken.datasource.jndi.location</value>
            </list>
        </property>
        <property name="serverDataSource" value="true"/>
    </bean>

    <!-- ken stuff -->

    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <!-- resource for "system" properties that do not need to be internationalized -->
                <value>system-messages</value>
                <!-- resources for textual/ui properties may need to be internationalized -->
                <value>messages</value>
            </list>
        </property>
    </bean>

    <!-- Eager-init notification lifecycle -->
    <bean id="lifecycle" class="org.kuali.rice.ken.core.NotificationLifeCycle" lazy-init="false" depends-on="ojbConfigurer"/>

    <!-- All of the beans listed in the beanNames/list section are considered transactional -->
    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="interceptorNames">
            <list>
                <idref bean="matchAllTxInterceptor" />
            </list>
        </property>
        <property name="beanNames">
            <list>
              <value>messageContentService</value>
              <value>kenApiService</value>
              <value>notificationService</value>
              <value>notificationContentTypeService</value>
              <value>notificationAuthorizationService</value>
              <value>notificationRecipientService</value>
              <value>notificationWorkflowDocumentService</value>
              <value>sendNotificationKewXmlService</value>
              <value>notificationMessageDeliveryService</value>
              <value>userPreferencesService</value>
              <value>kenGenericDao</value>
              <value>kenNotificationDao</value>
              <value>kenNotificationMessegeDeliveryDao</value>
            </list>
        </property>
    </bean>
    <!--  END PROPAGATION REQUIRED TX DECLARATIONS -->

    <!-- SERVICES -->
    <bean id="messageContentService" class="org.kuali.rice.ken.service.impl.NotificationMessageContentServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
      <constructor-arg><ref local="notificationContentTypeService"/></constructor-arg>
    </bean>

    <bean id="kenApiService" class="org.kuali.rice.ken.service.impl.KENAPIServiceImpl">
      <property name="notificationChannelService" ref="notificationChannelService"/>
      <property name="userPreferenceService" ref="userPreferenceService"/>
      
    </bean>

    <bean id="notificationService" class="org.kuali.rice.ken.service.impl.NotificationServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
      <constructor-arg><ref local="kenNotificationDao"/></constructor-arg>
      <constructor-arg><ref local="messageContentService"/></constructor-arg>
      <constructor-arg><ref local="notificationAuthorizationService"/></constructor-arg>
      <constructor-arg><ref local="notificationRecipientService"/></constructor-arg>
      <constructor-arg><ref local="notificationWorkflowDocumentService"/></constructor-arg>
      <constructor-arg><ref local="notificationMessageDeliveryService"/></constructor-arg>
    </bean>

    <bean id="notificationContentTypeService" class="org.kuali.rice.ken.service.impl.NotificationContentTypeServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
    </bean>
    
    <bean id="notificationChannelService" class="org.kuali.rice.ken.service.impl.NotificationChannelServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
    </bean>
    
    <bean id="userPreferenceService" class="org.kuali.rice.ken.service.impl.UserPreferenceServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
      <constructor-arg><ref local="notificationChannelService"/></constructor-arg>
    </bean>
    
    <bean id="notificationAuthorizationService" class="org.kuali.rice.ken.service.impl.NotificationAuthorizationServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
    </bean>

    <bean id="notificationRecipientService" class="org.kuali.rice.ken.service.impl.NotificationRecipientServiceKimImpl" />
    
    <bean id="notificationWorkflowDocumentService" class="org.kuali.rice.ken.service.impl.NotificationWorkflowDocumentServiceImpl">
      <constructor-arg><ref local="messageContentService"/></constructor-arg>
    </bean>
    
    <bean id="notificationMessageDeliveryResolverService" class="org.kuali.rice.ken.service.impl.NotificationMessageDeliveryResolverServiceImpl">
      <constructor-arg><ref local="notificationService"/></constructor-arg>
      <constructor-arg><ref local="notificationRecipientService"/></constructor-arg>
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
      <constructor-arg><ref bean="transactionManager"/></constructor-arg>
      <constructor-arg><ref bean="resolverExecutor"/></constructor-arg>
      <constructor-arg><ref local="userPreferenceService"/></constructor-arg>
    </bean>

    <bean id="notificationMessageDeliveryAutoRemovalService" class="org.kuali.rice.ken.service.impl.NotificationMessageDeliveryAutoRemovalServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
      <constructor-arg><ref bean="transactionManager"/></constructor-arg>
      <constructor-arg><ref bean="autoRemovalExecutor"/></constructor-arg>
      <constructor-arg><ref local="notificationMessageDeliveryService"/></constructor-arg>
    </bean>

    <bean id="sendNotificationKewXmlService" class="org.kuali.rice.ken.service.impl.SendNotificationServiceKewXmlImpl">
      <constructor-arg><ref local="notificationService"/></constructor-arg>
    </bean>
    
    <bean id="notificationMessageDeliveryService" class="org.kuali.rice.ken.service.impl.NotificationMessageDeliveryServiceImpl">
      <constructor-arg><ref local="kenGenericDao"/></constructor-arg>
      <constructor-arg><ref local="kenNotificationMessegeDeliveryDao"/></constructor-arg>
    </bean>
    
    <!-- END SERVICES -->
       

    <!-- DAOS -->
    <!-- OJB-->
    <bean id="kenGenericDao" class="org.kuali.rice.core.impl.persistence.dao.GenericDaoOjb">
        <property name="jcdAlias">
            <value>kenDataSource</value>
        </property>
    </bean>
    
    <bean id="kenNotificationDao" class="org.kuali.rice.ken.dao.impl.NotificationDaoOjb">
        <property name="jcdAlias">
            <value>kenDataSource</value>
        </property>
    </bean>
    
    <bean id="kenNotificationMessegeDeliveryDao" class="org.kuali.rice.ken.dao.impl.NotificationMessegeDeliveryDaoOjb">
        <property name="jcdAlias">
            <value>kenDataSource</value>
        </property>
    </bean>
    <!-- END DAOS -->

    <bean id="resolverExecutor" class="java.util.concurrent.ThreadPoolExecutor">
        <constructor-arg><value>1</value></constructor-arg> <!--  core pool size -->
        <constructor-arg><value>5</value></constructor-arg> <!-- max pool size -->
        <constructor-arg><value>30</value></constructor-arg> <!-- idle thread keepalive time -->
        <constructor-arg>
            <bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
                <property name="staticField"><value>java.util.concurrent.TimeUnit.SECONDS</value></property>
            </bean>
        </constructor-arg>
        <constructor-arg><bean class="java.util.concurrent.LinkedBlockingQueue"/></constructor-arg>
    </bean>
    
    <bean id="autoRemovalExecutor" class="java.util.concurrent.ThreadPoolExecutor">
        <constructor-arg><value>1</value></constructor-arg> <!--  core pool size -->
        <constructor-arg><value>5</value></constructor-arg> <!-- max pool size -->
        <constructor-arg><value>30</value></constructor-arg> <!-- idle thread keepalive time -->
        <constructor-arg>
            <bean class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
                <property name="staticField"><value>java.util.concurrent.TimeUnit.SECONDS</value></property>
            </bean>
        </constructor-arg>
        <constructor-arg><bean class="java.util.concurrent.LinkedBlockingQueue"/></constructor-arg>
    </bean>

   	<bean id="kenLocalServiceExporter" class="org.kuali.rice.ksb.messaging.RunModeServiceExporter" abstract="true">
		<property name="runModePropertyName" value="ken.mode" />
		<property name="validRunMode" value="LOCAL" />
	</bean>
	
	<bean id="kenSoapService" class="org.kuali.rice.ksb.api.bus.support.SoapServiceDefinition" abstract="true">
       <property name="namespace" value="ken" />
       <property name="serviceNameSpaceURI" value="http://rice.kuali.org/wsdl/ken"/>
       <property name="serviceVersion" value="${rice.version}" />
    </bean>
    
	<bean id="rice.ksb.serviceBus"
		class="org.kuali.rice.krad.config.GlobalResourceLoaderServiceFactoryBean">
		<property name="serviceName" value="rice.ksb.serviceBus" />
	</bean>
	
    <!-- export our sendNotificationKewXmlService -->
    <bean parent="kenLocalServiceExporter">
		<property name="serviceBus" ref="rice.ksb.serviceBus"/>
        <property name="serviceDefinition">
            <bean class="org.kuali.rice.ksb.api.bus.support.JavaServiceDefinition">
                <property name="service">
                    <ref bean="sendNotificationKewXmlService" />
                </property>
                <property name="localServiceName" value="sendNotificationKewXmlService" />
                <property name="serviceNameSpaceURI" value="KEN"/>
                <property name="priority" value="10" />
                <property name="retryAttempts" value="1" />
            </bean>
        </property>
        <!-- THIS IS NEEDED FOR THE KEWINTEGRATIONTEST TO OBSERVE THE SERVICE ON THE BUS... -->
        <property name="forceRefresh" value="true"/>
    </bean>
    
    <bean parent="kenLocalServiceExporter">
		<property name="serviceBus" ref="rice.ksb.serviceBus"/>
        <property name="serviceDefinition">
            <bean parent="kenSoapService">
                <property name="service">
                    <ref bean="sendNotificationKewXmlService" />
                </property>
                <property name="localServiceName" value="sendNotificationKewXmlSOAPService" />
                <property name="priority" value="10" />
                <property name="retryAttempts" value="1" />
            </bean>
        </property>
        <!-- THIS IS NEEDED FOR THE KEWINTEGRATIONTEST TO OBSERVE THE SERVICE ON THE BUS... -->
        <property name="forceRefresh" value="true"/>
    </bean>
    
    <!-- Export the KEN api service -->
    <bean parent="kenLocalServiceExporter">
		<property name="serviceBus" ref="rice.ksb.serviceBus"/>
        <property name="serviceDefinition">
            <bean class="org.kuali.rice.ksb.api.bus.support.JavaServiceDefinition">
                <property name="service">
                    <ref bean="kenApiService" />
                </property>
                <property name="localServiceName" value="KEN-KENAPIService" />
                <property name="serviceNameSpaceURI" value="KEN"/>
                <property name="priority" value="10" />
                <property name="retryAttempts" value="1" />
            </bean>
        </property>
        <property name="forceRefresh" value="true"/>
    </bean>
    
    <!-- Quartz beans -->    

    <!-- Define the job(s) -->
    <!-- Resolve Notification Message Deliveries Job -->
    <bean id="resolveNotificationMessageDeliveriesJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="notificationMessageDeliveryResolverService" />
        <property name="targetMethod" value="resolveNotificationMessageDeliveries" />
        <property name="concurrent" value="${notification.concurrent.jobs}" />
    </bean>

    <!-- Message Delivery Auto Remove Job -->
    <bean id="processAutoRemovalOfDeliveredNotificationMessageDeliveriesJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="notificationMessageDeliveryAutoRemovalService" />
        <property name="targetMethod" value="processAutoRemovalOfDeliveredNotificationMessageDeliveries" />
        <property name="concurrent" value="${notification.concurrent.jobs}" />
    </bean>

    <!-- Define the trigger(s) -->
    <!-- Set up the trigger for Resolving the Notification Message Deliveries (a.k.a. the periodic interval that this will run at) -->
    <bean id="resolveNotificationMessageDeliveriesJobTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="resolveNotificationMessageDeliveriesJob" />
        <property name="startDelay" value="${notification.resolveMessageDeliveriesJob.startDelayMS}" />
        <property name="repeatInterval" value="${notification.resolveMessageDeliveriesJob.intervalMS}" />
    </bean>
    <!-- Set up the trigger for the Notification Message Delivery Auto-Remove Job (a.k.a. the periodic interval that this will run at) -->
    <bean id="processAutoRemovalOfDeliveredNotificationMessageDeliveriesJobTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="processAutoRemovalOfDeliveredNotificationMessageDeliveriesJob" />
        <property name="startDelay" value="${notification.processAutoRemovalJob.startDelayMS}" />
        <property name="repeatInterval" value="${notification.processAutoRemovalJob.intervalMS}" />
    </bean>

    <!-- Configure the Quartz job scheduler -->
    <bean id="notificationScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="resolveNotificationMessageDeliveriesJobTrigger" />
<!--
                <ref bean="processUndeliveredNotificationMessageDeliveriesJobTrigger" />
-->
                <ref bean="processAutoRemovalOfDeliveredNotificationMessageDeliveriesJobTrigger" />
            </list>
        </property>
        <property name="autoStartup"><value>${notification.quartz.autostartup}</value></property>
    </bean>

  <!-- START JPA CONFIGURATION -->

  <bean id="kenEntityManagerFactory" class="org.kuali.rice.krad.app.persistence.jpa.RiceEntityManagerProxyFactoryBean">
    <constructor-arg value="rice.ken"/>
    <constructor-arg ref="kenDataSource"/>
  </bean>
  
  <bean id="kenEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
  	<property name="entityManagerFactory" ref="kenEntityManagerFactory"/>
  </bean>
  
    <!-- 
  <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <property name="interceptorNames">
      <list>
        <idref local="NoResultExceptionInterceptor" />
      </list>
    </property>
    <property name="beanNames">
      <list>
        <idref local="..."/>        
      </list>
    </property>
  </bean>
  -->
  
  <!-- END JPA CONFIGURATION -->

</beans>
